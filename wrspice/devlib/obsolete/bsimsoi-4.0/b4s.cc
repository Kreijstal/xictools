
/*========================================================================*
 *                                                                        *
 *  Distributed by Whiteley Research Inc., Sunnyvale, California, USA     *
 *                       http://wrcad.com                                 *
 *  Copyright (C) 2017 Whiteley Research Inc., all rights reserved.       *
 *  Author: Stephen R. Whiteley, except as indicated.                     *
 *                                                                        *
 *  As fully as possible recognizing licensing terms and conditions       *
 *  imposed by earlier work from which this work was derived, if any,     *
 *  this work is released under the Apache License, Version 2.0 (the      *
 *  "License").  You may not use this file except in compliance with      *
 *  the License, and compliance with inherited licenses which are         *
 *  specified in a sub-header below this one if applicable.  A copy       *
 *  of the License is provided with this distribution, or you may         *
 *  obtain a copy of the License at                                       *
 *                                                                        *
 *        http://www.apache.org/licenses/LICENSE-2.0                      *
 *                                                                        *
 *  See the License for the specific language governing permissions       *
 *  and limitations under the License.                                    *
 *                                                                        *
 *   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,      *
 *   EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES      *
 *   OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-        *
 *   INFRINGEMENT.  IN NO EVENT SHALL WHITELEY RESEARCH INCORPORATED      *
 *   OR STEPHEN R. WHITELEY BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER     *
 *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,      *
 *   ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE       *
 *   USE OR OTHER DEALINGS IN THE SOFTWARE.                               *
 *                                                                        *
 *========================================================================*
 *               XicTools Integrated Circuit Design System                *
 *                                                                        *
 * WRspice Circuit Simulation and Analysis Tool:  Device Library          *
 *                                                                        *
 *========================================================================*
 $Id:$
 *========================================================================*/

/***  B4SOI 11/30/2005 Xuemei (Jane) Xi Release   ***/

/**********
 * Copyright 2005 Regents of the University of California.  All rights reserved.
 * Authors: 1998 Samuel Fung, Dennis Sinitsky and Stephen Tang
 * Authors: 1999-2004 Pin Su, Hui Wan, Wei Jin, b3soi.c
 * Authors: 2005- Hui Wan, Xuemei Xi, Ali Niknejad, Chenming Hu.
 * File: b4soi.c          
 * Modified by Hui Wan, Xuemei Xi 11/30/2005 
 **********/

#include "b4sdefs.h"


namespace {

// SRW - added units flags
IFparm B4SOIpTable[] = {
IO("l",                 B4SOI_L,            IF_REAL | IF_LEN,
                "Length"),
IO("w",                 B4SOI_W,            IF_REAL | IF_LEN,
                "Width"),
IO("nf",                B4SOI_NF,           IF_REAL,
                "Number of fingers"),
IO("sa",                B4SOI_SA,           IF_REAL | IF_LEN,
                "Distance between  OD edge to poly of one side"),
IO("sb",                B4SOI_SB,           IF_REAL | IF_LEN,
                "Distance between  OD edge to poly of the other side"),
IO("sd",                B4SOI_SD,           IF_REAL | IF_LEN,
                "Distance between neighbour fingers"),
IO("ad",                B4SOI_AD,           IF_REAL | IF_AREA,
                "Drain area"),
IO("as",                B4SOI_AS,           IF_REAL | IF_AREA,
                "Source area"),
IO("pd",                B4SOI_PD,           IF_REAL | IF_LEN,
                "Drain perimeter"),
IO("ps",                B4SOI_PS,           IF_REAL | IF_LEN,
                "Source perimeter"),
IO("nrd",               B4SOI_NRD,          IF_REAL,
                "Number of squares in drain"),
IO("nrs",               B4SOI_NRS,          IF_REAL,
                "Number of squares in source"),
IO("off",               B4SOI_OFF,          IF_FLAG,
                "Device is initially off"),
IP("ic",                B4SOI_IC,           IF_REALVEC | IF_VOLT,
                "Vector of DS,GS,BS initial voltages"),
OP("gmbs",              B4SOI_GMBS,         IF_REAL | IF_COND,
                "Gmb"),
OP("gm",                B4SOI_GM,           IF_REAL | IF_COND,
                "Gm"),
OP("gmids",             B4SOI_GMID,         IF_REAL,
                "Gm/Ids"),
OP("gds",               B4SOI_GDS,          IF_REAL | IF_COND,
                "Gds"),
OP("vdsat",             B4SOI_VDSAT,        IF_REAL | IF_VOLT,
                "Vdsat"),
OP("vth",               B4SOI_VON,          IF_REAL | IF_VOLT,
                "Vth"),
OP("ids",               B4SOI_CD,           IF_REAL | IF_AMP,
                "Ids"),
OP("vbs",               B4SOI_VBS,          IF_REAL | IF_VOLT,
                "Vbs"),
OP("vgs",               B4SOI_VGS,          IF_REAL | IF_VOLT,
                "Vgs"),
OP("vds",               B4SOI_VDS,          IF_REAL | IF_VOLT,
                "Vds"),
OP("ves",               B4SOI_VES,          IF_REAL | IF_VOLT,
                "Ves"),
OP("ibd",               B4SOI_IBD,          IF_REAL | IF_AMP,
                "Ibd"),
OP("ibs",               B4SOI_IBS,          IF_REAL | IF_AMP,
                "Ibs"),
OP("isub",              B4SOI_ISUB,         IF_REAL | IF_AMP,
                "Isub"),
OP("igidl",             B4SOI_IGIDL,        IF_REAL | IF_AMP,
                "Igidl"),
OP("igs",               B4SOI_IGS,          IF_REAL | IF_AMP,
                "Igs"),
OP("igd",               B4SOI_IGD,          IF_REAL | IF_AMP,
                "Igd"),
OP("igb",               B4SOI_IGB,          IF_REAL | IF_AMP,
                "Igb"),
OP("igcs",              B4SOI_IGCS,         IF_REAL | IF_AMP,
                "Igcs"),
OP("igcd",              B4SOI_IGCD,         IF_REAL | IF_AMP,
                "Igcd"),
OP("cgg",               B4SOI_CGG,          IF_REAL | IF_AMP,
                "Cggb"),
OP("cgs",               B4SOI_CGS,          IF_REAL | IF_AMP,
                "Cgsb"),
OP("cgd",               B4SOI_CGD,          IF_REAL | IF_AMP,
                "Cgdb"),
OP("cbg",               B4SOI_CBG,          IF_REAL | IF_AMP,
                "Cbgb"),
OP("cbd",               B4SOI_CBD,          IF_REAL | IF_AMP,
                "Cbdb"),
OP("cbs",               B4SOI_CBS,          IF_REAL | IF_AMP,
                "Cbsb"),
OP("cdg",               B4SOI_CDG,          IF_REAL | IF_AMP,
                "Cdgb"),
OP("cdd",               B4SOI_CDD,          IF_REAL | IF_AMP,
                "Cddb"),
OP("cds",               B4SOI_CDS,          IF_REAL | IF_AMP,
                "Cdsb"),
OP("capbd",             B4SOI_CAPBD,        IF_REAL | IF_CAP,
                "Capbd"),
OP("capbs",             B4SOI_CAPBS,        IF_REAL | IF_CAP,
                "Capbs"),
OP("qg",                B4SOI_QG,           IF_REAL | IF_CHARGE,
                "Qgate"),
OP("qb",                B4SOI_QB,           IF_REAL | IF_CHARGE,
                "Qbulk"),
OP("qd",                B4SOI_QD,           IF_REAL | IF_CHARGE,
                "Qdrain"),
OP("qs",                B4SOI_QS,           IF_REAL | IF_CHARGE,
                "Qsource"),

IO("bjtoff",            B4SOI_BJTOFF,       IF_INTEGER,
                "BJT on/off flag"),
IO("debug",             B4SOI_DEBUG,        IF_INTEGER,
                "BJT on/off flag"),
IO("rth0",              B4SOI_RTH0,         IF_REAL,
                "Instance Thermal Resistance"),
IO("cth0",              B4SOI_CTH0,         IF_REAL,
                "Instance Thermal Capacitance"),
IO("nrb",               B4SOI_NRB,          IF_REAL,
                "Number of squares in body"),
IO("frbody",            B4SOI_FRBODY,       IF_REAL,
                "Layout dependent body-resistance coefficient"),

// v4.0
IO("nf",                B4SOI_NF,           IF_REAL,
                "Number of fingers"),
IO("rbdb",              B4SOI_RBDB,         IF_REAL,
                "Body resistance"),
IO("rbsb",              B4SOI_RBSB,         IF_REAL,
                "Body resistance"),
IO("delvto",            B4SOI_DELVTO,       IF_REAL,
                "Zero bias threshold voltage variation"),
//

IO("soimod",            B4SOI_SOIMOD,       IF_INTEGER,
                "Instance model selector for PD/FD operation"),

// v2.0 release
IO("nbc",               B4SOI_NBC,          IF_REAL,
                "Number of body contact isolation edge"),
IO("nseg",              B4SOI_NSEG,         IF_REAL,
                "Number segments for width partitioning"),
IO("pdbcp",             B4SOI_PDBCP,        IF_REAL,
                "Perimeter length for bc parasitics at drain side"),
IO("psbcp",             B4SOI_PSBCP,        IF_REAL,
                "Perimeter length for bc parasitics at source side"),
IO("agbcp",             B4SOI_AGBCP,        IF_REAL,
                "Gate to body overlap area for bc parasitics"),
IO("agbcpd",            B4SOI_AGBCPD,       IF_REAL,
                "Gate to body overlap area for bc parasitics in DC"),
IO("aebcp",             B4SOI_AEBCP,        IF_REAL,
                "Substrate to body overlap area for bc prasitics"),
IO("vbsusr",            B4SOI_VBSUSR,       IF_REAL,
                "Vbs specified by user"),
IO("tnodeout",          B4SOI_TNODEOUT,     IF_FLAG,
                "Flag indicating external temp node"),

// v3.1 added rgatemod
IO("rgatemod",          B4SOI_RGATEMOD,     IF_INTEGER,
                "Gate resistance model selector"),
//
IO("rbodymod",          B4SOI_RBODYMOD,     IF_INTEGER,
                "Body R model selector"),

// SRW - added
OP("id",                B4SOI_CD,           IF_REAL|IF_AMP,
                "Ids"),
OP("cd",                B4SOI_ID,           IF_REAL|IF_AMP|IF_USEALL,
                "Drain current"),
OP("cs",                B4SOI_IS,           IF_REAL|IF_AMP|IF_USEALL,
                "Source current"),
OP("cg",                B4SOI_IG,           IF_REAL|IF_AMP|IF_USEALL,
                "Gate current"),
OP("cb",                B4SOI_IB,           IF_REAL|IF_AMP|IF_USEALL,
                "Back-gate current"),
OP("ce",                B4SOI_IE,           IF_REAL|IF_AMP|IF_USEALL,
                "Substrate current"),
OP("icvbs",             B4SOI_IC_VBS,       IF_REAL|IF_VOLT,
                "Vbs initial condition"),
OP("icvds",             B4SOI_IC_VDS,       IF_REAL|IF_VOLT,
                "Vds initial condition"),
OP("icvgs",             B4SOI_IC_VGS,       IF_REAL|IF_VOLT,
                "Vgs initial condition"),
OP("icves",             B4SOI_IC_VES,       IF_REAL|IF_VOLT,
                "Ves initial condition"),
OP("icvps",             B4SOI_IC_VPS,       IF_REAL|IF_VOLT,
                "Vps initial condition"),
OP("dnode",             B4SOI_DNODE,        IF_INTEGER,
                "Drain node"),
OP("gnode",             B4SOI_GNODE,        IF_INTEGER,
                "Gate node"),
OP("snode",             B4SOI_SNODE,        IF_INTEGER,
                "Source node"),
OP("bnode",             B4SOI_BNODE,        IF_INTEGER,
                "Substrate node"),
OP("enode",             B4SOI_ENODE,        IF_INTEGER,
                "Body node"),
OP("dnodeprime",        B4SOI_DNODEPRIME,   IF_INTEGER,
                "Internal drain node"),
OP("snodeprime",        B4SOI_SNODEPRIME,   IF_INTEGER,
                "Internal source node"),
OP("sourceconductance", B4SOI_SOURCECONDUCT,IF_REAL|IF_COND,
                "Source conductance"),
OP("drainconductance",  B4SOI_DRAINCONDUCT, IF_REAL|IF_COND,
                "Drain conductance"),
OP("vbd",               B4SOI_VBD,          IF_REAL|IF_VOLT,
                "Vbd"),
OP("gbd",               B4SOI_GBD,          IF_REAL|IF_COND,
                "Gbd"),
OP("gbs",               B4SOI_GBS,          IF_REAL|IF_COND,
                "Gbs"),
OP("cqb",               B4SOI_CQB,          IF_REAL|IF_AMP,
                "Iqb"),
OP("cqg",               B4SOI_CQG,          IF_REAL|IF_AMP,
                "Iqg"),
OP("cqd",               B4SOI_CQD,          IF_REAL|IF_AMP,
                "Iqd"),
OP("cbdb",              B4SOI_CBDB,         IF_REAL|IF_AMP,
                "Cbdb"),
OP("cbsb",              B4SOI_CBSB,         IF_REAL|IF_AMP,
                "Cbsb"),
OP("qbs",               B4SOI_QBS,          IF_REAL|IF_CHARGE,
                "Qbs"),
OP("qbd",               B4SOI_QBD,          IF_REAL|IF_CHARGE,
                "Qbd")
};

IFparm B4SOImPTable[] = {
IO("capmod",            B4SOI_MOD_CAPMOD,   IF_INTEGER,
                "Capacitance model selector"),
IO("mobmod",            B4SOI_MOD_MOBMOD,   IF_INTEGER,
                "Mobility model selector"),
// IO("noimod", B4SOI_MOD_NOIMOD, IF_INTEGER, "Noise model selector"), v3.2
IO("paramchk",          B4SOI_MOD_PARAMCHK, IF_INTEGER,
                "Model parameter checking selector"),
IO("binunit",           B4SOI_MOD_BINUNIT,  IF_INTEGER,
                "Bin  unit  selector"),
IO("version",           B4SOI_MOD_VERSION,  IF_REAL,
                "Parameter for model version"),
IO("tox",               B4SOI_MOD_TOX,      IF_REAL,
                "Gate oxide thickness in meters"),
IO("toxm",              B4SOI_MOD_TOXM,     IF_REAL,
                "Gate oxide thickness used in extraction"),
IO("dtoxcv",            B4SOI_MOD_DTOXCV,   IF_REAL,
                "Delta oxide thickness in meters in CapMod3"),

IO("cdsc",              B4SOI_MOD_CDSC,     IF_REAL,
                "Drain/Source and channel coupling capacitance"),
IO("cdscb",             B4SOI_MOD_CDSCB,    IF_REAL,
                "Body-bias dependence of cdsc"),
IO("cdscd",             B4SOI_MOD_CDSCD,    IF_REAL,
                "Drain-bias dependence of cdsc"),
IO("cit",               B4SOI_MOD_CIT,      IF_REAL,
                "Interface state capacitance"),
IO("nfactor",           B4SOI_MOD_NFACTOR,  IF_REAL,
                "Subthreshold swing Coefficient"),
IO("vsat",              B4SOI_MOD_VSAT,     IF_REAL,
                "Saturation velocity at tnom"),
IO("at",                B4SOI_MOD_AT,       IF_REAL,
                "Temperature coefficient of vsat"),
IO("a0",                B4SOI_MOD_A0,       IF_REAL,
                "Non-uniform depletion width effect coefficient."),
IO("ags",               B4SOI_MOD_AGS,      IF_REAL,
                "Gate bias  coefficient of Abulk."),
IO("a1",                B4SOI_MOD_A1,       IF_REAL,
                "Non-saturation effect coefficient"),
IO("a2",                B4SOI_MOD_A2,       IF_REAL,
                "Non-saturation effect coefficient"),
IO("keta",              B4SOI_MOD_KETA,     IF_REAL,
                "Body-bias coefficient of non-uniform depletion width effect."),
IO("nsub",              B4SOI_MOD_NSUB,     IF_REAL,
                "Substrate doping concentration with polarity"),
IO("nch",               B4SOI_MOD_NPEAK,    IF_REAL,
                "Channel doping concentration"),
IO("ngate",             B4SOI_MOD_NGATE,    IF_REAL,
                "Poly-gate doping concentration"),
IO("gamma1",            B4SOI_MOD_GAMMA1,   IF_REAL,
                "Vth body coefficient"),
IO("gamma2",            B4SOI_MOD_GAMMA2,   IF_REAL,
                "Vth body coefficient"),
IO("vbx",               B4SOI_MOD_VBX,      IF_REAL,
                "Vth transition body Voltage"),
IO("vbm",               B4SOI_MOD_VBM,      IF_REAL,
                "Maximum body voltage"),

IO("xt",                B4SOI_MOD_XT,       IF_REAL,
                "Doping depth"),
IO("k1",                B4SOI_MOD_K1,       IF_REAL,
                "Bulk effect coefficient 1"),
IO("kt1",               B4SOI_MOD_KT1,      IF_REAL,
                "Temperature coefficient of Vth"),
IO("kt1l",              B4SOI_MOD_KT1L,     IF_REAL,
                "Temperature coefficient of Vth"),
IO("kt2",               B4SOI_MOD_KT2,      IF_REAL,
                "Body-coefficient of kt1"),
IO("k2",                B4SOI_MOD_K2,       IF_REAL,
                "Bulk effect coefficient 2"),
IO("k3",                B4SOI_MOD_K3,       IF_REAL,
                "Narrow width effect coefficient"),
IO("k3b",               B4SOI_MOD_K3B,      IF_REAL,
                "Body effect coefficient of k3"),
IO("w0",                B4SOI_MOD_W0,       IF_REAL,
                "Narrow width effect parameter"),
IO("lpe0",              B4SOI_MOD_LPE0,     IF_REAL,
                "Lateral non-uniform doping effect"),
IO("lpeb",              B4SOI_MOD_LPEB,     IF_REAL,
                "Lateral non-uniform doping effect for body bias"),
IO("dvt0",              B4SOI_MOD_DVT0,     IF_REAL,
                "Short channel effect coeff. 0"),
IO("dvt1",              B4SOI_MOD_DVT1,     IF_REAL,
                "Short channel effect coeff. 1"),
IO("dvt2",              B4SOI_MOD_DVT2,     IF_REAL,
                "Short channel effect coeff. 2"),
IO("dvt0w",             B4SOI_MOD_DVT0W,    IF_REAL,
                "Narrow Width coeff. 0"),
IO("dvt1w",             B4SOI_MOD_DVT1W,    IF_REAL,
                "Narrow Width effect coeff. 1"),
IO("dvt2w",             B4SOI_MOD_DVT2W,    IF_REAL,
                "Narrow Width effect coeff. 2"),
IO("drout",             B4SOI_MOD_DROUT,    IF_REAL,
                "DIBL coefficient of output resistance"),
IO("dsub",              B4SOI_MOD_DSUB,     IF_REAL,
                "DIBL coefficient in the subthreshold region"),
IO("vth0",              B4SOI_MOD_VTH0,     IF_REAL,
                "Threshold voltage"),
IO("vtho",              B4SOI_MOD_VTH0,     IF_REAL,
                "Threshold voltage"),
IO("ua",                B4SOI_MOD_UA,       IF_REAL,
                "Linear gate dependence of mobility"),
IO("ua1",               B4SOI_MOD_UA1,      IF_REAL,
                "Temperature coefficient of ua"),
IO("ub",                B4SOI_MOD_UB,       IF_REAL,
                "Quadratic gate dependence of mobility"),
IO("ub1",               B4SOI_MOD_UB1,      IF_REAL,
                "Temperature coefficient of ub"),
IO("uc",                B4SOI_MOD_UC,       IF_REAL,
                "Body-bias dependence of mobility"),
IO("uc1",               B4SOI_MOD_UC1,      IF_REAL,
                "Temperature coefficient of uc"),
IO("u0",                B4SOI_MOD_U0,       IF_REAL,
                "Low-field mobility at Tnom"),
IO("ute",               B4SOI_MOD_UTE,      IF_REAL,
                "Temperature coefficient of mobility"),
IO("voff",              B4SOI_MOD_VOFF,     IF_REAL,
                "Threshold voltage offset"),
IO("tnom",              B4SOI_MOD_TNOM,     IF_REAL,
                "Parameter measurement temperature"),
IO("cgso",              B4SOI_MOD_CGSO,     IF_REAL,
                "Gate-source overlap capacitance per width"),
IO("cgdo",              B4SOI_MOD_CGDO,     IF_REAL,
                "Gate-drain overlap capacitance per width"),
IO("xpart",             B4SOI_MOD_XPART,    IF_REAL,
                "Channel charge partitioning"),
IO("delta",             B4SOI_MOD_DELTA,    IF_REAL,
                "Effective Vds parameter"),
IO("rsh",               B4SOI_MOD_RSH,      IF_REAL,
                "Source-drain sheet resistance"),
IO("rdsw",              B4SOI_MOD_RDSW,     IF_REAL,
                "Source-drain resistance per width"),
IO("rsw",               B4SOI_MOD_RSW,      IF_REAL,
                "Source resistance per width"),
IO("rdw",               B4SOI_MOD_RDW,      IF_REAL,
                "Drain resistance per width"),
IO("rswmin",            B4SOI_MOD_RSWMIN,   IF_REAL,
                "Source resistance per width at high Vg"),
IO("rdwmin",            B4SOI_MOD_RDWMIN,   IF_REAL,
                "Drain resistance per width at hight Vg"),

IO("prwg",              B4SOI_MOD_PRWG,     IF_REAL,
                "Gate-bias effect on parasitic resistance"),
IO("prwb",              B4SOI_MOD_PRWB,     IF_REAL,
                "Body-effect on parasitic resistance"),

IO("prt",               B4SOI_MOD_PRT,      IF_REAL,
                "Temperature coefficient of parasitic resistance"),
IO("eta0",              B4SOI_MOD_ETA0,     IF_REAL,
                "Subthreshold region DIBL coefficient"),
IO("etab",              B4SOI_MOD_ETAB,     IF_REAL,
                "Subthreshold region DIBL coefficient"),
IO("pclm",              B4SOI_MOD_PCLM,     IF_REAL,
                "Channel length modulation Coefficient"),
IO("pdiblc1",           B4SOI_MOD_PDIBL1,   IF_REAL,
                "Drain-induced barrier lowering coefficient"),
IO("pdiblc2",           B4SOI_MOD_PDIBL2,   IF_REAL,
                "Drain-induced barrier lowering coefficient"),
IO("pdiblcb",           B4SOI_MOD_PDIBLB,   IF_REAL,
                "Body-effect on drain-induced barrier lowering"),

IO("pvag",              B4SOI_MOD_PVAG,     IF_REAL,
                "Gate dependence of output resistance parameter"),

IO("shmod",             B4SOI_MOD_SHMOD,    IF_INTEGER,
                "Self heating mode selector"),
IO("ddmod",             B4SOI_MOD_DDMOD,    IF_INTEGER,
                "Dynamic depletion mode selector"),
IO("tbox",              B4SOI_MOD_TBOX,     IF_REAL,
                "Back gate oxide thickness in meters"),
IO("tsi",               B4SOI_MOD_TSI,      IF_REAL,
                "Silicon-on-insulator thickness in meters"),
IO("xj",                B4SOI_MOD_XJ,       IF_REAL,
                "Junction Depth"),
IO("rth0",              B4SOI_MOD_RTH0,     IF_REAL,
                "Self-heating thermal resistance"),
IO("cth0",              B4SOI_MOD_CTH0,     IF_REAL,
                "Self-heating thermal capacitance"),
IO("egidl",             B4SOI_MOD_EGIDL,    IF_REAL,
                "GIDL first parameter"),
IO("agidl",             B4SOI_MOD_AGIDL,    IF_REAL,
                "GIDL second parameter"),
IO("bgidl",             B4SOI_MOD_BGIDL,    IF_REAL,
                "GIDL third parameter"),
IO("cgidl",             B4SOI_MOD_CGIDL,    IF_REAL,
                "GIDL vb parameter"),
IO("ndiode",            B4SOI_MOD_NDIODES,  IF_REAL,
                "Diode non-ideality factor"),
IO("ndioded",           B4SOI_MOD_NDIODED,  IF_REAL,
                "Diode non-ideality factor"),
IO("xbjt",              B4SOI_MOD_XBJT,     IF_REAL,
                "Temperature coefficient for Isbjt"),

IO("xdif",              B4SOI_MOD_XDIFS,    IF_REAL,
                "Temperature coefficient for Isdif"),
IO("xrec",              B4SOI_MOD_XRECS,    IF_REAL,
                "Temperature coefficient for Isrec"),
IO("xtun",              B4SOI_MOD_XTUNS,    IF_REAL,
                "Temperature coefficient for Istun"),
IO("xdifd",             B4SOI_MOD_XDIFD,    IF_REAL,
                "Temperature coefficient for Iddif"),
IO("xrecd",             B4SOI_MOD_XRECD,    IF_REAL,
                "Temperature coefficient for Idrec"),
IO("xtund",             B4SOI_MOD_XTUND,    IF_REAL,
                "Temperature coefficient for Idtun"),

IO("pbswg",             B4SOI_MOD_PBSWGS,   IF_REAL,
                "Source(gate side"),
IO("pbswgd",            B4SOI_MOD_PBSWGD,   IF_REAL,
                "Drain(gate side"),
IO("mjswg",             B4SOI_MOD_MJSWGS,   IF_REAL,
                "Source (gate side"),
IO("mjswgd",            B4SOI_MOD_MJSWGD,   IF_REAL,
                "Drain (gate side"),
IO("cjswg",             B4SOI_MOD_CJSWGS,   IF_REAL,
                "Source(gate side"),
IO("cjswgd",            B4SOI_MOD_CJSWGD,   IF_REAL,
                "Drain (gate side"),
IO("lint",              B4SOI_MOD_LINT,     IF_REAL,
                "Length reduction parameter"),
IO("ll",                B4SOI_MOD_LL,       IF_REAL,
                "Length reduction parameter"),
IO("llc",               B4SOI_MOD_LLC,      IF_REAL,
                "Length reduction parameter"),
IO("lln",               B4SOI_MOD_LLN,      IF_REAL,
                "Length reduction parameter"),
IO("lw",                B4SOI_MOD_LW,       IF_REAL,
                "Length reduction parameter"),
IO("lwc",               B4SOI_MOD_LWC,      IF_REAL,
                "Length reduction parameter"),
IO("lwn",               B4SOI_MOD_LWN,      IF_REAL,
                "Length reduction parameter"),
IO("lwl",               B4SOI_MOD_LWL,      IF_REAL,
                "Length reduction parameter"),
IO("lwlc",              B4SOI_MOD_LWLC,     IF_REAL,
                "Length reduction parameter"),

IO("wr",                B4SOI_MOD_WR,       IF_REAL,
                "Width dependence of rds"),
IO("wint",              B4SOI_MOD_WINT,     IF_REAL,
                "Width reduction parameter"),
IO("dwg",               B4SOI_MOD_DWG,      IF_REAL,
                "Width reduction parameter"),
IO("dwb",               B4SOI_MOD_DWB,      IF_REAL,
                "Width reduction parameter"),

IO("wl",                B4SOI_MOD_WL,       IF_REAL,
                "Width reduction parameter"),
IO("wlc",               B4SOI_MOD_WLC,      IF_REAL,
                "Width reduction parameter"),
IO("wln",               B4SOI_MOD_WLN,      IF_REAL,
                "Width reduction parameter"),
IO("ww",                B4SOI_MOD_WW,       IF_REAL,
                "Width reduction parameter"),
IO("wwc",               B4SOI_MOD_WWC,      IF_REAL,
                "Width reduction parameter"),
IO("wwn",               B4SOI_MOD_WWN,      IF_REAL,
                "Width reduction parameter"),
IO("wwl",               B4SOI_MOD_WWL,      IF_REAL,
                "Width reduction parameter"),
IO("wwlc",              B4SOI_MOD_WWLC,     IF_REAL,
                "Width reduction parameter"),

IO("b0",                B4SOI_MOD_B0,       IF_REAL,
                "Abulk narrow width parameter"),
IO("b1",                B4SOI_MOD_B1,       IF_REAL,
                "Abulk narrow width parameter"),

IO("cgsl",              B4SOI_MOD_CGSL,     IF_REAL,
                "New C-V model parameter"),
IO("cgdl",              B4SOI_MOD_CGDL,     IF_REAL,
                "New C-V model parameter"),
IO("ckappa",            B4SOI_MOD_CKAPPA,   IF_REAL,
                "New C-V model parameter"),
IO("cf",                B4SOI_MOD_CF,       IF_REAL,
                "Fringe capacitance parameter"),
IO("clc",               B4SOI_MOD_CLC,      IF_REAL,
                "Vdsat parameter for C-V model"),
IO("cle",               B4SOI_MOD_CLE,      IF_REAL,
                "Vdsat parameter for C-V model"),
IO("dwc",               B4SOI_MOD_DWC,      IF_REAL,
                "Delta W for C-V model"),
IO("dlc",               B4SOI_MOD_DLC,      IF_REAL,
                "Delta L for C-V model"),

IO("alpha0",            B4SOI_MOD_ALPHA0,   IF_REAL,
                "Substrate current model parameter"),

IO("noia",              B4SOI_MOD_NOIA,     IF_REAL,
                "Flicker noise parameter"),
IO("noib",              B4SOI_MOD_NOIB,     IF_REAL,
                "Flicker noise parameter"),
IO("noic",              B4SOI_MOD_NOIC,     IF_REAL,
                "Flicker noise parameter"),

// v3.2
IO("fnoimod",           B4SOI_MOD_FNOIMOD,  IF_INTEGER,
                "Flicker noise model selector"),
IO("tnoimod",           B4SOI_MOD_TNOIMOD,  IF_INTEGER,
                "Thermal noise model selector"),
IO("tnoia",             B4SOI_MOD_TNOIA,    IF_REAL,
                "Thermal noise parameter"),
IO("tnoib",             B4SOI_MOD_TNOIB,    IF_REAL,
                "Thermal noise parameter"),
IO("rnoia",             B4SOI_MOD_RNOIA,    IF_REAL,
                "Thermal noise coefficient"),
IO("rnoib",             B4SOI_MOD_RNOIB,    IF_REAL,
                "Thermal noise coefficient"),
IO("ntnoi",             B4SOI_MOD_NTNOI,    IF_REAL,
                "Thermal noise parameter"),

// v4.0  stress effect
IO("saref",             B4SOI_MOD_SAREF,    IF_REAL,
                "Reference distance between OD edge to poly of one side"),
IO("sbref",             B4SOI_MOD_SBREF,    IF_REAL,
                "Reference distance between OD edge to poly of the other side"),
IO("wlod",              B4SOI_MOD_WLOD,     IF_REAL,
                "Width parameter for stress effect"),
IO("ku0",               B4SOI_MOD_KU0,      IF_REAL,
                "Mobility degradation/enhancement coefficient for LOD"),
IO("kvsat",             B4SOI_MOD_KVSAT,    IF_REAL,
                "Saturation velocity degradation/enhancement parameter for LOD"),
IO("kvth0",             B4SOI_MOD_KVTH0,    IF_REAL,
                "Threshold degradation/enhancement parameter for LOD"),
IO("tku0",              B4SOI_MOD_TKU0,     IF_REAL,
                "Temperature coefficient of KU0"),
IO("llodku0",           B4SOI_MOD_LLODKU0,  IF_REAL,
                "Length parameter for u0 LOD effect"),
IO("wlodku0",           B4SOI_MOD_WLODKU0,  IF_REAL,
                "Width parameter for u0 LOD effect"),
IO("llodvth",           B4SOI_MOD_LLODVTH,  IF_REAL,
                "Length parameter for vth LOD effect"),
IO("wlodvth",           B4SOI_MOD_WLODVTH,  IF_REAL,
                "Width parameter for vth LOD effect"),
IO("lku0",              B4SOI_MOD_LKU0,     IF_REAL,
                "Length dependence of ku0"),
IO("wku0",              B4SOI_MOD_WKU0,     IF_REAL,
                "Width dependence of ku0"),
IO("pku0",              B4SOI_MOD_PKU0,     IF_REAL,
                "Cross-term dependence of ku0"),
IO("lkvth0",            B4SOI_MOD_LKVTH0,   IF_REAL,
                "Length dependence of kvth0"),
IO("wkvth0",            B4SOI_MOD_WKVTH0,   IF_REAL,
                "Width dependence of kvth0"),
IO("pkvth0",            B4SOI_MOD_PKVTH0,   IF_REAL,
                "Cross-term dependence of kvth0"),
IO("stk2",              B4SOI_MOD_STK2,     IF_REAL,
                "K2 shift factor related to stress effect on vth"),
IO("lodk2",             B4SOI_MOD_LODK2,    IF_REAL,
                "K2 shift modification factor for stress effect"),
IO("steta0",            B4SOI_MOD_STETA0,   IF_REAL,
                "Eta0 shift factor related to stress effect on vth"),
IO("lodeta0",           B4SOI_MOD_LODETA0,  IF_REAL,
                "Eta0 shift modification factor for stress effect"),
// v4.0 stress effect end

// v4.0
IO("gbmin",             B4SOI_MOD_GBMIN,    IF_REAL,
                "Minimum body conductance"),
IO("rbdb",              B4SOI_MOD_RBDB,     IF_REAL,
                "Resistance between bNode and dbNode"),
IO("rbsb",              B4SOI_MOD_RBSB,     IF_REAL,
                "Resistance between bNode and sbNode"),
IO("bf",                B4SOI_MOD_BF,       IF_REAL,
                "Flicker noise length dependence exponent"),
IO("w0flk",             B4SOI_MOD_W0FLK,    IF_REAL,
                "Flicker noise width dependence"),
IO("frbody",            B4SOI_MOD_FRBODY,   IF_REAL,
                "Layout dependent rbody multiplier"),
IO("dvtp0",             B4SOI_MOD_DVTP0,    IF_REAL,
                "First parameter for Vth shift due to pocket"),
IO("ldvtp0",            B4SOI_MOD_LDVTP0,   IF_REAL,
                "Length dependence of dvtp0"),
IO("wdvtp0",            B4SOI_MOD_WDVTP0,   IF_REAL,
                "Width dependence of dvtp0"),
IO("pdvtp0",            B4SOI_MOD_PDVTP0,   IF_REAL,
                "Cross-term dependence of dvtp0"),
IO("dvtp1",             B4SOI_MOD_DVTP1,    IF_REAL,
                "Second parameter for Vth shift due to pocket"),
IO("ldvtp1",            B4SOI_MOD_LDVTP1,   IF_REAL,
                "Length dependence of dvtp1"),
IO("wdvtp1",            B4SOI_MOD_WDVTP1,   IF_REAL,
                "Width dependence of dvtp1"),
IO("pdvtp1",            B4SOI_MOD_PDVTP1,   IF_REAL,
                "Cross-term dependence of dvtp1"),
IO("minv",              B4SOI_MOD_MINV,     IF_REAL,
                "For moderate invversion in Vgsteff"),
IO("lminv",             B4SOI_MOD_LMINV,    IF_REAL,
                "Length dependence of minv"),
IO("wminv",             B4SOI_MOD_WMINV,    IF_REAL,
                "Width dependence of minv"),
IO("pminv",             B4SOI_MOD_PMINV,    IF_REAL,
                "Cross-term dependence of minv"),
IO("pdits",             B4SOI_MOD_PDITS,    IF_REAL,
                "Coefficient for drain-induced Vth shifts"),
IO("pditsl",            B4SOI_MOD_PDITSL,   IF_REAL,
                "Length dependence of drain-induced Vth shifts"),
IO("pditsd",            B4SOI_MOD_PDITSD,   IF_REAL,
                "Vds dependence of drain-induced Vth shifts"),
IO("fprout",            B4SOI_MOD_FPROUT,   IF_REAL,
                "Rout degradation coefficient for pocket devices"),
IO("lfprout",           B4SOI_MOD_LFPROUT,  IF_REAL,
                "Length dependence of pdiblcb"),
IO("lpdits",            B4SOI_MOD_LPDITS,   IF_REAL,
                "Length dependence of pdits"),
IO("lpditsd",           B4SOI_MOD_LPDITSD,  IF_REAL,
                "Length dependence of pditsd"),
IO("wfprout",           B4SOI_MOD_WFPROUT,  IF_REAL,
                "Width dependence of pdiblcb"),
IO("wpdits",            B4SOI_MOD_WPDITS,   IF_REAL,
                "Width dependence of pdits"),
IO("wpditsd",           B4SOI_MOD_WPDITSD,  IF_REAL,
                "Width dependence of pditsd"),
IO("pfprout",           B4SOI_MOD_PFPROUT,  IF_REAL,
                "Cross-term dependence of pdiblcb"),
IO("ppdits",            B4SOI_MOD_PPDITS,   IF_REAL,
                "Cross-term dependence of pdits"),
IO("ppditsd",           B4SOI_MOD_PPDITSD,  IF_REAL,
                "Cross-term dependence of pditsd"),

// v4.0
IO("em",                B4SOI_MOD_EM,       IF_REAL,
                "Flicker noise parameter"),
IO("ef",                B4SOI_MOD_EF,       IF_REAL,
                "Flicker noise frequency exponent"),
IO("af",                B4SOI_MOD_AF,       IF_REAL,
                "Flicker noise exponent"),
IO("kf",                B4SOI_MOD_KF,       IF_REAL,
                "Flicker noise coefficient"),
IO("noif",              B4SOI_MOD_NOIF,     IF_REAL,
                "Floating body excess noise ideality factor"),

// v2.0 release
IO("k1w1",              B4SOI_MOD_K1W1,     IF_REAL,
                "First Body effect width dependent parameter"),
IO("k1w2",              B4SOI_MOD_K1W2,     IF_REAL,
                "Second Boby effect width dependent parameter"),
IO("ketas",             B4SOI_MOD_KETAS,    IF_REAL,
                "Surface potential adjustment for bulk charge effect"),
IO("dwbc",              B4SOI_MOD_DWBC,     IF_REAL,
                "Width offset for body contact isolation edge"),
IO("beta0",             B4SOI_MOD_BETA0,    IF_REAL,
                "First Vds dependent parameter of impact ionizition current"),
IO("beta1",             B4SOI_MOD_BETA1,    IF_REAL,
                "Second Vds dependent parameter of impact ionizition current"),
IO("beta2",             B4SOI_MOD_BETA2,    IF_REAL,
                "Third Vds dependent parameter of impact ionizition current"),
IO("vdsatii0",          B4SOI_MOD_VDSATII0, IF_REAL,
                "Nominal drain saturation voltage at threshold for impact ionizition current"),
IO("tii",               B4SOI_MOD_TII,      IF_REAL,
                "Temperature dependent parameter for impact ionizition"),
IO("lii",               B4SOI_MOD_LII,      IF_REAL,
                "Channel length dependent parameter at threshold for impact ionizition current"),
IO("sii0",              B4SOI_MOD_SII0,     IF_REAL,
                "First Vgs dependent parameter for impact ionizition current"),
IO("sii1",              B4SOI_MOD_SII1,     IF_REAL,
                "Second Vgs dependent parameter for impact ionizition current"),
IO("sii2",              B4SOI_MOD_SII2,     IF_REAL,
                "Third Vgs dependent parameter for impact ionizition current"),
IO("siid",              B4SOI_MOD_SIID,     IF_REAL,
                "Vds dependent parameter of drain saturation voltage for impact ionizition current"),
IO("fbjtii",            B4SOI_MOD_FBJTII,   IF_REAL,
                "Fraction of bipolar current affecting the impact ionization"),
IO("esatii",            B4SOI_MOD_ESATII,   IF_REAL,
                "Saturation electric field for impact ionization"),
IO("ntun",              B4SOI_MOD_NTUNS,    IF_REAL,
                "Reverse tunneling non-ideality factor"),
IO("ntund",             B4SOI_MOD_NTUND,    IF_REAL,
                "Reverse tunneling non-ideality factor"),
IO("nrecf0",            B4SOI_MOD_NRECF0S,  IF_REAL,
                "Recombination non-ideality factor at forward bias"),
IO("nrecf0d",           B4SOI_MOD_NRECF0D,  IF_REAL,
                "Recombination non-ideality factor at forward bias"),
IO("nrecr0",            B4SOI_MOD_NRECR0S,  IF_REAL,
                "Recombination non-ideality factor at reversed bias"),
IO("nrecr0d",           B4SOI_MOD_NRECR0D,  IF_REAL,
                "Recombination non-ideality factor at reversed bias"),
IO("isbjt",             B4SOI_MOD_ISBJT,    IF_REAL,
                "BJT injection saturation current"),
IO("idbjt",             B4SOI_MOD_IDBJT,    IF_REAL,
                "BJT injection saturation current"),
IO("isdif",             B4SOI_MOD_ISDIF,    IF_REAL,
                "Body to source/drain injection saturation current"),
IO("iddif",             B4SOI_MOD_IDDIF,    IF_REAL,
                "Body to source/drain injection saturation current"),
IO("isrec",             B4SOI_MOD_ISREC,    IF_REAL,
                "Recombination in depletion saturation current"),
IO("idrec",             B4SOI_MOD_IDREC,    IF_REAL,
                "Recombination in depletion saturation current"),
IO("istun",             B4SOI_MOD_ISTUN,    IF_REAL,
                "Reverse tunneling saturation current"),
IO("idtun",             B4SOI_MOD_IDTUN,    IF_REAL,
                "Reverse tunneling saturation current"),
IO("ln",                B4SOI_MOD_LN,       IF_REAL,
                "Electron/hole diffusion length"),
IO("vrec0",             B4SOI_MOD_VREC0S,   IF_REAL,
                "Voltage dependent parameter for recombination current"),
IO("vrec0d",            B4SOI_MOD_VREC0D,   IF_REAL,
                "Voltage dependent parameter for recombination current"),
IO("vtun0",             B4SOI_MOD_VTUN0S,   IF_REAL,
                "Voltage dependent parameter for tunneling current"),
IO("vtun0d",            B4SOI_MOD_VTUN0D,   IF_REAL,
                "Voltage dependent parameter for tunneling current"),
IO("nbjt",              B4SOI_MOD_NBJT,     IF_REAL,
                "Power coefficient of channel length dependency for bipolar current"),
IO("lbjt0",             B4SOI_MOD_LBJT0,    IF_REAL,
                "Refferenc channel length for bipolar cuurent"),
IO("ldif0",             B4SOI_MOD_LDIF0,    IF_REAL,
                "Channel-length dependency coefficient of diffusion cap"),
IO("vabjt",             B4SOI_MOD_VABJT,    IF_REAL,
                "Early voltage for bipolar current"),
IO("aely",              B4SOI_MOD_AELY,     IF_REAL,
                "Channel length dependency of early voltage for bipolar cuurent"),
IO("ahli",              B4SOI_MOD_AHLIS,    IF_REAL,
                "High level injection parameter for bipolar current"),
IO("ahlid",             B4SOI_MOD_AHLID,    IF_REAL,
                "High level injection parameter for bipolar current"),
IO("rbody",             B4SOI_MOD_RBODY,    IF_REAL,
                "Intrinsic body contact sheet resistance"),
IO("rbsh",              B4SOI_MOD_RBSH,     IF_REAL,
                "Extrinsic body contact sheet resistance"),
IO("cgeo",              B4SOI_MOD_CGEO,     IF_REAL,
                "Gate substrate overlap capacitance per unit channel length"),
IO("tt",                B4SOI_MOD_TT,       IF_REAL,
                "Diffusion capacitance transit time coefficient"),
IO("ndif",              B4SOI_MOD_NDIF,     IF_REAL,
                "Power coefficient of channel length dependency for diffusion capacitance"),
IO("vsdfb",             B4SOI_MOD_VSDFB,    IF_REAL,
                "Source/drain bottom diffusion capacitance flatband voltage"),
IO("vsdth",             B4SOI_MOD_VSDTH,    IF_REAL,
                "Source/drain bottom diffusion capacitance threshold voltage"),
IO("csdmin",            B4SOI_MOD_CSDMIN,   IF_REAL,
                "Source/drain bottom diffusion minimum capacitance"),
IO("asd",               B4SOI_MOD_ASD,      IF_REAL,
                "Source/drain bottom diffusion smoothing parameter"),
IO("csdesw",            B4SOI_MOD_CSDESW,   IF_REAL,
                "Source/drain sidewall fringing capacitance per unit length"),
IO("ntrecf",            B4SOI_MOD_NTRECF,   IF_REAL,
                "Temperature coefficient for Nrecf"),
IO("ntrecr",            B4SOI_MOD_NTRECR,   IF_REAL,
                "Temperature coefficient for Nrecr"),
IO("dlcb",              B4SOI_MOD_DLCB,     IF_REAL,
                "Length offset fitting parameter for body charge"),
IO("fbody",             B4SOI_MOD_FBODY,    IF_REAL,
                "Scaling factor for body charge"),
IO("tcjswg",            B4SOI_MOD_TCJSWGS,  IF_REAL,
                "Temperature coefficient of Cjswgs"),
IO("tpbswg",            B4SOI_MOD_TPBSWGS,  IF_REAL,
                "Temperature coefficient of Pbswgs"),
IO("tcjswgd",           B4SOI_MOD_TCJSWGD,  IF_REAL,
                "Temperature coefficient of Cjswgd"),
IO("tpbswgd",           B4SOI_MOD_TPBSWGD,  IF_REAL,
                "Temperature coefficient of Pbswgd"),
IO("acde",              B4SOI_MOD_ACDE,     IF_REAL,
                "Exponential coefficient for charge thickness in capMod=3 for accumulation and depletion regions"),
IO("moin",              B4SOI_MOD_MOIN,     IF_REAL,
                "Coefficient for the gate-bias dependent surface potential"),
IO("noff",              B4SOI_MOD_NOFF,     IF_REAL,
                "C-V turn-on/off parameter"),
IO("delvt",             B4SOI_MOD_DELVT,    IF_REAL,
                "Threshold voltage adjust for CV"),
IO("kb1",               B4SOI_MOD_KB1,      IF_REAL,
                "Scaling factor for backgate charge"),
IO("dlbg",              B4SOI_MOD_DLBG,     IF_REAL,
                "Length offset fitting parameter for backgate charge"),

// v2.2 release
IO("igmod",             B4SOI_MOD_IGBMOD,   IF_INTEGER,
                "Gate-body tunneling current model selector"),
IO("igbmod",            B4SOI_MOD_IGBMOD,   IF_INTEGER,
                "Gate-body tunneling current model selector"),
IO("igcmod",            B4SOI_MOD_IGCMOD,   IF_INTEGER,
                "Gate-channel tunneling current model selector"),
IO("toxqm",             B4SOI_MOD_TOXQM,    IF_REAL,
                "Effective oxide thickness considering quantum effect"),
IO("wth0",              B4SOI_MOD_WTH0,     IF_REAL,
                "Minimum width for thermal resistance calculation"),
IO("rhalo",             B4SOI_MOD_RHALO,    IF_REAL,
                "Body halo sheet resistance"),
IO("ntox",              B4SOI_MOD_NTOX,     IF_REAL,
                "Power term of gate current"),
IO("toxref",            B4SOI_MOD_TOXREF,   IF_REAL,
                "Target oxide thickness"),
IO("ebg",               B4SOI_MOD_EBG,      IF_REAL,
                "Effective bandgap in gate current calcula."),
IO("vevb",              B4SOI_MOD_VEVB,     IF_REAL,
                "Vaux parameter for valence-band electron tunneling"),
IO("alphagb1",          B4SOI_MOD_ALPHAGB1, IF_REAL,
                "First Vox dependent parameter for gate curent in inversion"),
IO("betagb1",           B4SOI_MOD_BETAGB1,  IF_REAL,
                "Second Vox dependent parameter for gate currnt in inversion"),
IO("vgb1",              B4SOI_MOD_VGB1,     IF_REAL,
                "Third Vox dependent parameter for gate current in inversion"),
IO("vecb",              B4SOI_MOD_VECB,     IF_REAL,
                "Vaux parameter for conduction-band electron tunneling"),
IO("alphagb2",          B4SOI_MOD_ALPHAGB2, IF_REAL,
                "First Vox dependent parameter for gate current in accumulation"),
IO("betagb2",           B4SOI_MOD_BETAGB2,  IF_REAL,
                "Second Vox dependent parameter for gate current in accumulation"),
IO("vgb2",              B4SOI_MOD_VGB2,     IF_REAL,
                "Third Vox dependent parameter for gate current in accumulation"),
IO("voxh",              B4SOI_MOD_VOXH,     IF_REAL,
                "The limit of Vox in gate current calculation"),
IO("deltavox",          B4SOI_MOD_DELTAVOX, IF_REAL,
                "The smoothing parameter in the Vox smoothing function"),

// v3.0
IO("aigc",              B4SOI_MOD_AIGC,     IF_REAL,
                "Parameter for Igc"),
IO("bigc",              B4SOI_MOD_BIGC,     IF_REAL,
                "Parameter for Igc"),
IO("cigc",              B4SOI_MOD_CIGC,     IF_REAL,
                "Parameter for Igc"),
IO("aigsd",             B4SOI_MOD_AIGSD,    IF_REAL,
                "Parameter for Igs,d"),
IO("bigsd",             B4SOI_MOD_BIGSD,    IF_REAL,
                "Parameter for Igs,d"),
IO("cigsd",             B4SOI_MOD_CIGSD,    IF_REAL,
                "Parameter for Igs,d"),
IO("nigc",              B4SOI_MOD_NIGC,     IF_REAL,
                "Parameter for Igc slope"),
IO("pigcd",             B4SOI_MOD_PIGCD,    IF_REAL,
                "Parameter for Igc partition"),
IO("poxedge",           B4SOI_MOD_POXEDGE,  IF_REAL,
                "Factor for the gate edge Tox"),
IO("dlcig",             B4SOI_MOD_DLCIG,    IF_REAL,
                "Delta L for Ig model"),

// v3.0
IO("soimod",            B4SOI_MOD_SOIMOD,   IF_INTEGER,
                "Model selector for SOI technology"),
IO("vbs0pd",            B4SOI_MOD_VBS0PD,   IF_REAL,
                "Upper bound of built-in potential lowering for PD operation"),
IO("vbs0fd",            B4SOI_MOD_VBS0FD,   IF_REAL,
                "Lower bound of built-in potential lowering for FD operation"),
IO("vbsa",              B4SOI_MOD_VBSA,     IF_REAL,
                "Vbs0t offset voltage"),
IO("nofffd",            B4SOI_MOD_NOFFFD,   IF_REAL,
                "Smoothing parameter in FD module"),
IO("vofffd",            B4SOI_MOD_VOFFFD,   IF_REAL,
                "Smoothing parameter in FD module"),
IO("k1b",               B4SOI_MOD_K1B,      IF_REAL,
                "First backgate body effect parameter"),
IO("k2b",               B4SOI_MOD_K2B,      IF_REAL,
                "Second backgate body effect parameter for short channel effect"),
IO("dk2b",              B4SOI_MOD_DK2B,     IF_REAL,
                "Third backgate body effect parameter for short channel effect"),
IO("dvbd0",             B4SOI_MOD_DVBD0,    IF_REAL,
                "First short-channel effect parameter in FD module"),
IO("dvbd1",             B4SOI_MOD_DVBD1,    IF_REAL,
                "Second short-channel effect parameter in FD module"),
IO("moinfd",            B4SOI_MOD_MOINFD,   IF_REAL,
                "Coefficient for the gate-bias dependent surface potential in FD"),

// v3.1 added for RF
IO("rgatemod",          B4SOI_MOD_RGATEMOD, IF_INTEGER,
                "Gate R model selector"),
IO("xrcrg1",            B4SOI_MOD_XRCRG1,   IF_REAL,
                "First fitting parameter the bias-dependent Rg"),
IO("xrcrg2",            B4SOI_MOD_XRCRG2,   IF_REAL,
                "Second fitting parameter the bias-dependent Rg"),
IO("rshg",              B4SOI_MOD_RSHG,     IF_REAL,
                "Gate sheet resistance"),
IO("ngcon",             B4SOI_MOD_NGCON,    IF_REAL,
                "Number of gate contacts"),
IO("xgw",               B4SOI_MOD_XGW,      IF_REAL,
                "Distance from gate contact center to device edge"),
IO("xgl",               B4SOI_MOD_XGL,      IF_REAL,
                "Variation in Ldrawn"),
// v3.1 added for RF end

// 4.0
IO("rbodymod",          B4SOI_MOD_RBODYMOD, IF_INTEGER,
                "Body R model selector"),
// 4.0
IO("rdsmod",            B4SOI_MOD_RDSMOD,   IF_INTEGER,
                "Bias-dependent S/D resistance model selector"),

// Added for binning - START
// v3.1
IO("lxj",               B4SOI_MOD_LXJ,      IF_REAL,
                "Length dependence of xj"),
IO("lalphagb1",         B4SOI_MOD_LALPHAGB1,IF_REAL,
                "Length dependence of alphagb1"),
IO("lbetagb1",          B4SOI_MOD_LBETAGB1, IF_REAL,
                "Length dependence of betagb1"),
IO("lalphagb2",         B4SOI_MOD_LALPHAGB2,IF_REAL,
                "Length dependence of alphagb2"),
IO("lbetagb2",          B4SOI_MOD_LBETAGB2, IF_REAL,
                "Length dependence of betagb2"),
IO("lcgsl",             B4SOI_MOD_LCGSL,    IF_REAL,
                "Length dependence of cgsl"),
IO("lcgdl",             B4SOI_MOD_LCGDL,    IF_REAL,
                "Length dependence of cgdl"),
IO("lckappa",           B4SOI_MOD_LCKAPPA,  IF_REAL,
                "Length dependence of ckappa"),
IO("lndif",             B4SOI_MOD_LNDIF,    IF_REAL,
                "Length dependence of ndif"),
IO("lute",              B4SOI_MOD_LUTE,     IF_REAL,
                "Length dependence of ute"),
IO("lkt1",              B4SOI_MOD_LKT1,     IF_REAL,
                "Length dependence of kt1"),
IO("lkt1l",             B4SOI_MOD_LKT1L,    IF_REAL,
                "Length dependence of kt1l"),
IO("lkt2",              B4SOI_MOD_LKT2,     IF_REAL,
                "Length dependence of kt2"),
IO("lua1",              B4SOI_MOD_LUA1,     IF_REAL,
                "Length dependence of ua1"),
IO("lub1",              B4SOI_MOD_LUB1,     IF_REAL,
                "Length dependence of ub1"),
IO("luc1",              B4SOI_MOD_LUC1,     IF_REAL,
                "Length dependence of uc1"),
IO("lat",               B4SOI_MOD_LAT,      IF_REAL,
                "Length dependence of at"),
IO("lprt",              B4SOI_MOD_LPRT,     IF_REAL,
                "Length dependence of prt"),
IO("lntrecf",           B4SOI_MOD_LNTRECF,  IF_REAL,
                "Length dependence of ntrecf"),
IO("lntrecr",           B4SOI_MOD_LNTRECR,  IF_REAL,
                "Length dependence of ntrecr"),
IO("lxbjt",             B4SOI_MOD_LXBJT,    IF_REAL,
                "Length dependence of xbjt"),
IO("lxdif",             B4SOI_MOD_LXDIFS,   IF_REAL,
                "Length dependence of xdif"),
IO("lxrec",             B4SOI_MOD_LXRECS,   IF_REAL,
                "Length dependence of xrec"),
IO("lxtun",             B4SOI_MOD_LXTUNS,   IF_REAL,
                "Length dependence of xtun"),
IO("lxdifd",            B4SOI_MOD_LXDIFD,   IF_REAL,
                "Length dependence of xdifd"),
IO("lxrecd",            B4SOI_MOD_LXRECD,   IF_REAL,
                "Length dependence of xrecd"),
IO("lxtund",            B4SOI_MOD_LXTUND,   IF_REAL,
                "Length dependence of xtund"),

// v3.0
IO("laigc",             B4SOI_MOD_LAIGC,    IF_REAL,
                "Length dependence of aigc"),
IO("lbigc",             B4SOI_MOD_LBIGC,    IF_REAL,
                "Length dependence of bigc"),
IO("lcigc",             B4SOI_MOD_LCIGC,    IF_REAL,
                "Length dependence of cigc"),
IO("laigsd",            B4SOI_MOD_LAIGSD,   IF_REAL,
                "Length dependence of aigsd"),
IO("lbigsd",            B4SOI_MOD_LBIGSD,   IF_REAL,
                "Length dependence of bigsd"),
IO("lcigsd",            B4SOI_MOD_LCIGSD,   IF_REAL,
                "Length dependence of cigsd"),
IO("lnigc",             B4SOI_MOD_LNIGC,    IF_REAL,
                "Length dependence of nigc"),
IO("lpigcd",            B4SOI_MOD_LPIGCD,   IF_REAL,
                "Length dependence for pigcd"),
IO("lpoxedge",          B4SOI_MOD_LPOXEDGE, IF_REAL,
                "Length dependence for poxedge"),

IO("lnch",              B4SOI_MOD_LNPEAK,   IF_REAL,
                "Length dependence of nch"),
IO("lnsub",             B4SOI_MOD_LNSUB,    IF_REAL,
                "Length dependence of nsub"),
IO("lngate",            B4SOI_MOD_LNGATE,   IF_REAL,
                "Length dependence of ngate"),
IO("lvth0",             B4SOI_MOD_LVTH0,    IF_REAL,
                "Length dependence of vto"),
IO("lk1",               B4SOI_MOD_LK1,      IF_REAL,
                "Length dependence of k1"),
IO("lk1w1",             B4SOI_MOD_LK1W1,    IF_REAL,
                "Length dependence of k1w1"),
IO("lk1w2",             B4SOI_MOD_LK1W2,    IF_REAL,
                "Length dependence of k1w2"),
IO("lk2",               B4SOI_MOD_LK2,      IF_REAL,
                "Length dependence of k2"),
IO("lk3",               B4SOI_MOD_LK3,      IF_REAL,
                "Length dependence of k3"),
IO("lk3b",              B4SOI_MOD_LK3B,     IF_REAL,
                "Length dependence of k3b"),
IO("lkb1",              B4SOI_MOD_LKB1,     IF_REAL,
                "Length dependence of kb1"),
IO("lw0",               B4SOI_MOD_LW0,      IF_REAL,
                "Length dependence of w0"),
IO("llpe0",             B4SOI_MOD_LLPE0,    IF_REAL,
                "Length dependence of lpe0"),
IO("llpeb",             B4SOI_MOD_LLPEB,    IF_REAL,
                "Length dependence of lpeb"),
IO("ldvt0",             B4SOI_MOD_LDVT0,    IF_REAL,
                "Length dependence of dvt0"),
IO("ldvt1",             B4SOI_MOD_LDVT1,    IF_REAL,
                "Length dependence of dvt1"),
IO("ldvt2",             B4SOI_MOD_LDVT2,    IF_REAL,
                "Length dependence of dvt2"),
IO("ldvt0w",            B4SOI_MOD_LDVT0W,   IF_REAL,
                "Length dependence of dvt0w"),
IO("ldvt1w",            B4SOI_MOD_LDVT1W,   IF_REAL,
                "Length dependence of dvt1w"),
IO("ldvt2w",            B4SOI_MOD_LDVT2W,   IF_REAL,
                "Length dependence of dvt2w"),
IO("lu0",               B4SOI_MOD_LU0,      IF_REAL,
                "Length dependence of u0"),
IO("lua",               B4SOI_MOD_LUA,      IF_REAL,
                "Length dependence of ua"),
IO("lub",               B4SOI_MOD_LUB,      IF_REAL,
                "Length dependence of ub"),
IO("luc",               B4SOI_MOD_LUC,      IF_REAL,
                "Length dependence of uc"),
IO("lvsat",             B4SOI_MOD_LVSAT,    IF_REAL,
                "Length dependence of vsat"),
IO("la0",               B4SOI_MOD_LA0,      IF_REAL,
                "Length dependence of a0"),
IO("lags",              B4SOI_MOD_LAGS,     IF_REAL,
                "Length dependence of ags"),
IO("lb0",               B4SOI_MOD_LB0,      IF_REAL,
                "Length dependence of b0"),
IO("lb1",               B4SOI_MOD_LB1,      IF_REAL,
                "Length dependence of b1"),
IO("lketa",             B4SOI_MOD_LKETA,    IF_REAL,
                "Length dependence of keta"),
IO("lketas",            B4SOI_MOD_LKETAS,   IF_REAL,
                "Length dependence of ketas"),
IO("la1",               B4SOI_MOD_LA1,      IF_REAL,
                "Length dependence of a1"),
IO("la2",               B4SOI_MOD_LA2,      IF_REAL,
                "Length dependence of a2"),
IO("lrdsw",             B4SOI_MOD_LRDSW,    IF_REAL,
                "Length dependence of rdsw"),
IO("lrsw",              B4SOI_MOD_LRSW,     IF_REAL,
                "Length dependence of rsw"),
IO("lrdw",              B4SOI_MOD_LRDW,     IF_REAL,
                "Length dependence of rdw"),
IO("lprwb",             B4SOI_MOD_LPRWB,    IF_REAL,
                "Length dependence of prwb"),
IO("lprwg",             B4SOI_MOD_LPRWG,    IF_REAL,
                "Length dependence of prwg"),
IO("lwr",               B4SOI_MOD_LWR,      IF_REAL,
                "Length dependence of wr"),
IO("lnfactor",          B4SOI_MOD_LNFACTOR, IF_REAL,
                "Length dependence of nfactor"),
IO("ldwg",              B4SOI_MOD_LDWG,     IF_REAL,
                "Length dependence of dwg"),
IO("ldwb",              B4SOI_MOD_LDWB,     IF_REAL,
                "Length dependence of dwb"),
IO("lvoff",             B4SOI_MOD_LVOFF,    IF_REAL,
                "Length dependence of voff"),
IO("leta0",             B4SOI_MOD_LETA0,    IF_REAL,
                "Length dependence of eta0"),
IO("letab",             B4SOI_MOD_LETAB,    IF_REAL,
                "Length dependence of etab"),
IO("ldsub",             B4SOI_MOD_LDSUB,    IF_REAL,
                "Length dependence of dsub"),
IO("lcit",              B4SOI_MOD_LCIT,     IF_REAL,
                "Length dependence of cit"),
IO("lcdsc",             B4SOI_MOD_LCDSC,    IF_REAL,
                "Length dependence of cdsc"),
IO("lcdscb",            B4SOI_MOD_LCDSCB,   IF_REAL,
                "Length dependence of cdscb"),
IO("lcdscd",            B4SOI_MOD_LCDSCD,   IF_REAL,
                "Length dependence of cdscd"),
IO("lpclm",             B4SOI_MOD_LPCLM,    IF_REAL,
                "Length dependence of pclm"),
IO("lpdiblc1",          B4SOI_MOD_LPDIBL1,  IF_REAL,
                "Length dependence of pdiblc1"),
IO("lpdiblc2",          B4SOI_MOD_LPDIBL2,  IF_REAL,
                "Length dependence of pdiblc2"),
IO("lpdiblcb",          B4SOI_MOD_LPDIBLB,  IF_REAL,
                "Length dependence of pdiblcb"),
IO("ldrout",            B4SOI_MOD_LDROUT,   IF_REAL,
                "Length dependence of drout"),
IO("lpvag",             B4SOI_MOD_LPVAG,    IF_REAL,
                "Length dependence of pvag"),
IO("ldelta",            B4SOI_MOD_LDELTA,   IF_REAL,
                "Length dependence of delta"),
IO("lalpha0",           B4SOI_MOD_LALPHA0,  IF_REAL,
                "Length dependence of alpha0"),
IO("lfbjtii",           B4SOI_MOD_LFBJTII,  IF_REAL,
                "Length dependence of fbjtii"),
IO("lbeta0",            B4SOI_MOD_LBETA0,   IF_REAL,
                "Length dependence of beta0"),
IO("lbeta1",            B4SOI_MOD_LBETA1,   IF_REAL,
                "Length dependence of beta1"),
IO("lbeta2",            B4SOI_MOD_LBETA2,   IF_REAL,
                "Length dependence of beta2"),
IO("lvdsatii0",         B4SOI_MOD_LVDSATII0,IF_REAL,
                "Length dependence of vdsatii0"),
IO("llii",              B4SOI_MOD_LLII,     IF_REAL,
                "Length dependence of lii"),
IO("lesatii",           B4SOI_MOD_LESATII,  IF_REAL,
                "Length dependence of esatii"),
IO("lsii0",             B4SOI_MOD_LSII0,    IF_REAL,
                "Length dependence of sii0"),
IO("lsii1",             B4SOI_MOD_LSII1,    IF_REAL,
                "Length dependence of sii1"),
IO("lsii2",             B4SOI_MOD_LSII2,    IF_REAL,
                "Length dependence of sii2"),
IO("lsiid",             B4SOI_MOD_LSIID,    IF_REAL,
                "Length dependence of siid"),
IO("lagidl",            B4SOI_MOD_LAGIDL,   IF_REAL,
                "Length dependence of agidl"),
IO("lbgidl",            B4SOI_MOD_LBGIDL,   IF_REAL,
                "Length dependence of bgidl"),
IO("lcgidl",            B4SOI_MOD_LCGIDL,   IF_REAL,
                "Length dependence of cgidl"),
IO("legidl",            B4SOI_MOD_LEGIDL,   IF_REAL,
                "Length dependence of egidl"),
IO("lntun",             B4SOI_MOD_LNTUNS,   IF_REAL,
                "Length dependence of ntun"),
IO("lntund",            B4SOI_MOD_LNTUND,   IF_REAL,
                "Length dependence of ntund"),
IO("lndiode",           B4SOI_MOD_LNDIODES, IF_REAL,
                "Length dependence of ndiode"),
IO("lndioded",          B4SOI_MOD_LNDIODED, IF_REAL,
                "Length dependence of ndioded"),
IO("lnrecf0",           B4SOI_MOD_LNRECF0S, IF_REAL,
                "Length dependence of nrecf0"),
IO("lnrecf0d",          B4SOI_MOD_LNRECF0D, IF_REAL,
                "Length dependence of nrecf0d"),
IO("lnrecr0",           B4SOI_MOD_LNRECR0S, IF_REAL,
                "Length dependence of nrecr0"),
IO("lnrecr0d",          B4SOI_MOD_LNRECR0D, IF_REAL,
                "Length dependence of nrecr0d"),
IO("lisbjt",            B4SOI_MOD_LISBJT,   IF_REAL,
                "Length dependence of isbjt"),
IO("lidbjt",            B4SOI_MOD_LIDBJT,   IF_REAL,
                "Length dependence of idbjt"),
IO("lisdif",            B4SOI_MOD_LISDIF,   IF_REAL,
                "Length dependence of isdif"),
IO("liddif",            B4SOI_MOD_LIDDIF,   IF_REAL,
                "Length dependence of iddif"),
IO("lisrec",            B4SOI_MOD_LISREC,   IF_REAL,
                "Length dependence of isrec"),
IO("lidrec",            B4SOI_MOD_LIDREC,   IF_REAL,
                "Length dependence of idrec"),
IO("listun",            B4SOI_MOD_LISTUN,   IF_REAL,
                "Length dependence of istun"),
IO("lidtun",            B4SOI_MOD_LIDTUN,   IF_REAL,
                "Length dependence of idtun"),
IO("lvrec0",            B4SOI_MOD_LVREC0S,  IF_REAL,
                "Length dependence of vrec0"),
IO("lvrec0d",           B4SOI_MOD_LVREC0D,  IF_REAL,
                "Length dependence of vrec0d"),
IO("lvtun0",            B4SOI_MOD_LVTUN0S,  IF_REAL,
                "Length dependence of vtun0"),
IO("lvtun0d",           B4SOI_MOD_LVTUN0D,  IF_REAL,
                "Length dependence of vtun0d"),
IO("lnbjt",             B4SOI_MOD_LNBJT,    IF_REAL,
                "Length dependence of nbjt"),
IO("llbjt0",            B4SOI_MOD_LLBJT0,   IF_REAL,
                "Length dependence of lbjt0"),
IO("lvabjt",            B4SOI_MOD_LVABJT,   IF_REAL,
                "Length dependence of vabjt"),
IO("laely",             B4SOI_MOD_LAELY,    IF_REAL,
                "Length dependence of aely"),
IO("lahli",             B4SOI_MOD_LAHLIS,   IF_REAL,
                "Length dependence of ahli"),
IO("lahlid",            B4SOI_MOD_LAHLID,   IF_REAL,
                "Length dependence of ahlid"),
IO("lvsdfb",            B4SOI_MOD_LVSDFB,   IF_REAL,
                "Length dependence of vsdfb"),
IO("lvsdth",            B4SOI_MOD_LVSDTH,   IF_REAL,
                "Length dependence of vsdth"),
IO("ldelvt",            B4SOI_MOD_LDELVT,   IF_REAL,
                "Length dependence of delvt"),
IO("lacde",             B4SOI_MOD_LACDE,    IF_REAL,
                "Length dependence of acde"),
IO("lmoin",             B4SOI_MOD_LMOIN,    IF_REAL,
                "Length dependence of amoin"),
IO("lnoff",             B4SOI_MOD_LNOFF,    IF_REAL,
                "Length dependence of noff"),

// v3.1 added for RF
IO("lxrcrg1",           B4SOI_MOD_LXRCRG1,  IF_REAL,
                "Length dependence of xrcrg1"),
IO("lxrcrg2",           B4SOI_MOD_LXRCRG2,  IF_REAL,
                "Length dependence of xrcrg2"),
// v3.1 added for RF end

// v3.1
IO("wxj",               B4SOI_MOD_WXJ,      IF_REAL,
                "Width dependence of xj"),
IO("walphagb1",         B4SOI_MOD_WALPHAGB1,IF_REAL,
                "Width dependence of alphagb1"),
IO("wbetagb1",          B4SOI_MOD_WBETAGB1, IF_REAL,
                "Width dependence of betagb1"),
IO("walphagb2",         B4SOI_MOD_WALPHAGB2,IF_REAL,
                "Width dependence of alphagb2"),
IO("wbetagb2",          B4SOI_MOD_WBETAGB2, IF_REAL,
                "Width dependence of betagb2"),
IO("wcgsl",             B4SOI_MOD_WCGSL,    IF_REAL,
                "Width dependence of cgsl"),
IO("wcgdl",             B4SOI_MOD_WCGDL,    IF_REAL,
                "Width dependence of cgdl"),
IO("wckappa",           B4SOI_MOD_WCKAPPA,  IF_REAL,
                "Width dependence of ckappa"),
IO("wndif",             B4SOI_MOD_WNDIF,    IF_REAL,
                "Width dependence of ndif"),
IO("wute",              B4SOI_MOD_WUTE,     IF_REAL,
                "Width dependence of ute"),
IO("wkt1",              B4SOI_MOD_WKT1,     IF_REAL,
                "Width dependence of kt1"),
IO("wkt1l",             B4SOI_MOD_WKT1L,    IF_REAL,
                "Width dependence of kt1l"),
IO("wkt2",              B4SOI_MOD_WKT2,     IF_REAL,
                "Width dependence of kt2"),
IO("wua1",              B4SOI_MOD_WUA1,     IF_REAL,
                "Width dependence of ua1"),
IO("wub1",              B4SOI_MOD_WUB1,     IF_REAL,
                "Width dependence of ub1"),
IO("wuc1",              B4SOI_MOD_WUC1,     IF_REAL,
                "Width dependence of uc1"),
IO("wat",               B4SOI_MOD_WAT,      IF_REAL,
                "Width dependence of at"),
IO("wprt",              B4SOI_MOD_WPRT,     IF_REAL,
                "Width dependence of prt"),
IO("wntrecf",           B4SOI_MOD_WNTRECF,  IF_REAL,
                "Width dependence of ntrecf"),
IO("wntrecr",           B4SOI_MOD_WNTRECR,  IF_REAL,
                "Width dependence of ntrecr"),
IO("wxbjt",             B4SOI_MOD_WXBJT,    IF_REAL,
                "Width dependence of xbjt"),
IO("wxdif",             B4SOI_MOD_WXDIFS,   IF_REAL,
                "Width dependence of xdif"),
IO("wxrec",             B4SOI_MOD_WXRECS,   IF_REAL,
                "Width dependence of xrec"),
IO("wxtun",             B4SOI_MOD_WXTUNS,   IF_REAL,
                "Width dependence of xtun"),
IO("wxdifd",            B4SOI_MOD_WXDIFD,   IF_REAL,
                "Width dependence of xdifd"),
IO("wxrecd",            B4SOI_MOD_WXRECD,   IF_REAL,
                "Width dependence of xrecd"),
IO("wxtund",            B4SOI_MOD_WXTUND,   IF_REAL,
                "Width dependence of xtund"),

// v3.0
IO("waigc",             B4SOI_MOD_WAIGC,    IF_REAL,
                "Width dependence of aigc"),
IO("wbigc",             B4SOI_MOD_WBIGC,    IF_REAL,
                "Width dependence of bigc"),
IO("wcigc",             B4SOI_MOD_WCIGC,    IF_REAL,
                "Width dependence of cigc"),
IO("waigsd",            B4SOI_MOD_WAIGSD,   IF_REAL,
                "Width dependence of aigsd"),
IO("wbigsd",            B4SOI_MOD_WBIGSD,   IF_REAL,
                "Width dependence of bigsd"),
IO("wcigsd",            B4SOI_MOD_WCIGSD,   IF_REAL,
                "Width dependence of cigsd"),
IO("wnigc",             B4SOI_MOD_WNIGC,    IF_REAL,
                "Width dependence of nigc"),
IO("wpigcd",            B4SOI_MOD_WPIGCD,   IF_REAL,
                "Width dependence for pigcd"),
IO("wpoxedge",          B4SOI_MOD_WPOXEDGE, IF_REAL,
                "Width dependence for poxedge"),

IO("wnch",              B4SOI_MOD_WNPEAK,   IF_REAL,
                "Width dependence of nch"),
IO("wnsub",             B4SOI_MOD_WNSUB,    IF_REAL,
                "Width dependence of nsub"),
IO("wngate",            B4SOI_MOD_WNGATE,   IF_REAL,
                "Width dependence of ngate"),
IO("wvth0",             B4SOI_MOD_WVTH0,    IF_REAL,
                "Width dependence of vto"),
IO("wk1",               B4SOI_MOD_WK1,      IF_REAL,
                "Width dependence of k1"),
IO("wk1w1",             B4SOI_MOD_WK1W1,    IF_REAL,
                "Width dependence of k1w1"),
IO("wk1w2",             B4SOI_MOD_WK1W2,    IF_REAL,
                "Width dependence of k1w2"),
IO("wk2",               B4SOI_MOD_WK2,      IF_REAL,
                "Width dependence of k2"),
IO("wk3",               B4SOI_MOD_WK3,      IF_REAL,
                "Width dependence of k3"),
IO("wk3b",              B4SOI_MOD_WK3B,     IF_REAL,
                "Width dependence of k3b"),
IO("wkb1",              B4SOI_MOD_WKB1,     IF_REAL,
                "Width dependence of kb1"),
IO("ww0",               B4SOI_MOD_WW0,      IF_REAL,
                "Width dependence of w0"),
IO("wlpe0",             B4SOI_MOD_WLPE0,    IF_REAL,
                "Width dependence of lpe0"),
IO("wlpeb",             B4SOI_MOD_WLPEB,    IF_REAL,
                "Width dependence of lpeb"),
IO("wdvt0",             B4SOI_MOD_WDVT0,    IF_REAL,
                "Width dependence of dvt0"),
IO("wdvt1",             B4SOI_MOD_WDVT1,    IF_REAL,
                "Width dependence of dvt1"),
IO("wdvt2",             B4SOI_MOD_WDVT2,    IF_REAL,
                "Width dependence of dvt2"),
IO("wdvt0w",            B4SOI_MOD_WDVT0W,   IF_REAL,
                "Width dependence of dvt0w"),
IO("wdvt1w",            B4SOI_MOD_WDVT1W,   IF_REAL,
                "Width dependence of dvt1w"),
IO("wdvt2w",            B4SOI_MOD_WDVT2W,   IF_REAL,
                "Width dependence of dvt2w"),
IO("wu0",               B4SOI_MOD_WU0,      IF_REAL,
                "Width dependence of u0"),
IO("wua",               B4SOI_MOD_WUA,      IF_REAL,
                "Width dependence of ua"),
IO("wub",               B4SOI_MOD_WUB,      IF_REAL,
                "Width dependence of ub"),
IO("wuc",               B4SOI_MOD_WUC,      IF_REAL,
                "Width dependence of uc"),
IO("wvsat",             B4SOI_MOD_WVSAT,    IF_REAL,
                "Width dependence of vsat"),
IO("wa0",               B4SOI_MOD_WA0,      IF_REAL,
                "Width dependence of a0"),
IO("wags",              B4SOI_MOD_WAGS,     IF_REAL,
                "Width dependence of ags"),
IO("wb0",               B4SOI_MOD_WB0,      IF_REAL,
                "Width dependence of b0"),
IO("wb1",               B4SOI_MOD_WB1,      IF_REAL,
                "Width dependence of b1"),
IO("wketa",             B4SOI_MOD_WKETA,    IF_REAL,
                "Width dependence of keta"),
IO("wketas",            B4SOI_MOD_WKETAS,   IF_REAL,
                "Width dependence of ketas"),
IO("wa1",               B4SOI_MOD_WA1,      IF_REAL,
                "Width dependence of a1"),
IO("wa2",               B4SOI_MOD_WA2,      IF_REAL,
                "Width dependence of a2"),
IO("wrdsw",             B4SOI_MOD_WRDSW,    IF_REAL,
                "Width dependence of rdsw"),
IO("wrsw",              B4SOI_MOD_WRSW,     IF_REAL,
                "Width dependence of rsw"),
IO("wrdw",              B4SOI_MOD_WRDW,     IF_REAL,
                "Width dependence of rdw"),
IO("wprwb",             B4SOI_MOD_WPRWB,    IF_REAL,
                "Width dependence of prwb"),
IO("wprwg",             B4SOI_MOD_WPRWG,    IF_REAL,
                "Width dependence of prwg"),
IO("wwr",               B4SOI_MOD_WWR,      IF_REAL,
                "Width dependence of wr"),
IO("wnfactor",          B4SOI_MOD_WNFACTOR, IF_REAL,
                "Width dependence of nfactor"),
IO("wdwg",              B4SOI_MOD_WDWG,     IF_REAL,
                "Width dependence of dwg"),
IO("wdwb",              B4SOI_MOD_WDWB,     IF_REAL,
                "Width dependence of dwb"),
IO("wvoff",             B4SOI_MOD_WVOFF,    IF_REAL,
                "Width dependence of voff"),
IO("weta0",             B4SOI_MOD_WETA0,    IF_REAL,
                "Width dependence of eta0"),
IO("wetab",             B4SOI_MOD_WETAB,    IF_REAL,
                "Width dependence of etab"),
IO("wdsub",             B4SOI_MOD_WDSUB,    IF_REAL,
                "Width dependence of dsub"),
IO("wcit",              B4SOI_MOD_WCIT,     IF_REAL,
                "Width dependence of cit"),
IO("wcdsc",             B4SOI_MOD_WCDSC,    IF_REAL,
                "Width dependence of cdsc"),
IO("wcdscb",            B4SOI_MOD_WCDSCB,   IF_REAL,
                "Width dependence of cdscb"),
IO("wcdscd",            B4SOI_MOD_WCDSCD,   IF_REAL,
                "Width dependence of cdscd"),
IO("wpclm",             B4SOI_MOD_WPCLM,    IF_REAL,
                "Width dependence of pclm"),
IO("wpdiblc1",          B4SOI_MOD_WPDIBL1,  IF_REAL,
                "Width dependence of pdiblc1"),
IO("wpdiblc2",          B4SOI_MOD_WPDIBL2,  IF_REAL,
                "Width dependence of pdiblc2"),
IO("wpdiblcb",          B4SOI_MOD_WPDIBLB,  IF_REAL,
                "Width dependence of pdiblcb"),
IO("wdrout",            B4SOI_MOD_WDROUT,   IF_REAL,
                "Width dependence of drout"),
IO("wpvag",             B4SOI_MOD_WPVAG,    IF_REAL,
                "Width dependence of pvag"),
IO("wdelta",            B4SOI_MOD_WDELTA,   IF_REAL,
                "Width dependence of delta"),
IO("walpha0",           B4SOI_MOD_WALPHA0,  IF_REAL,
                "Width dependence of alpha0"),
IO("wfbjtii",           B4SOI_MOD_WFBJTII,  IF_REAL,
                "Width dependence of fbjtii"),
IO("wbeta0",            B4SOI_MOD_WBETA0,   IF_REAL,
                "Width dependence of beta0"),
IO("wbeta1",            B4SOI_MOD_WBETA1,   IF_REAL,
                "Width dependence of beta1"),
IO("wbeta2",            B4SOI_MOD_WBETA2,   IF_REAL,
                "Width dependence of beta2"),
IO("wvdsatii0",         B4SOI_MOD_WVDSATII0,IF_REAL,
                "Width dependence of vdsatii0"),
IO("wlii",              B4SOI_MOD_WLII,     IF_REAL,
                "Width dependence of lii"),
IO("wesatii",           B4SOI_MOD_WESATII,  IF_REAL,
                "Width dependence of esatii"),
IO("wsii0",             B4SOI_MOD_WSII0,    IF_REAL,
                "Width dependence of sii0"),
IO("wsii1",             B4SOI_MOD_WSII1,    IF_REAL,
                "Width dependence of sii1"),
IO("wsii2",             B4SOI_MOD_WSII2,    IF_REAL,
                "Width dependence of sii2"),
IO("wsiid",             B4SOI_MOD_WSIID,    IF_REAL,
                "Width dependence of siid"),
IO("wagidl",            B4SOI_MOD_WAGIDL,   IF_REAL,
                "Width dependence of agidl"),
IO("wbgidl",            B4SOI_MOD_WBGIDL,   IF_REAL,
                "Width dependence of bgidl"),
IO("wcgidl",            B4SOI_MOD_WCGIDL,   IF_REAL,
                "Width dependence of cgidl"),
IO("wegidl",            B4SOI_MOD_WEGIDL,   IF_REAL,
                "Width dependence of egidl"),
IO("wntun",             B4SOI_MOD_WNTUNS,   IF_REAL,
                "Width dependence of ntun"),
IO("wntund",            B4SOI_MOD_WNTUND,   IF_REAL,
                "Width dependence of ntund"),
IO("wndiode",           B4SOI_MOD_WNDIODES, IF_REAL,
                "Width dependence of ndiode"),
IO("wndioded",          B4SOI_MOD_WNDIODED, IF_REAL,
                "Width dependence of ndioded"),
IO("wnrecf0",           B4SOI_MOD_WNRECF0S, IF_REAL,
                "Width dependence of nrecf0"),
IO("wnrecf0d",          B4SOI_MOD_WNRECF0D, IF_REAL,
                "Width dependence of nrecf0d"),
IO("wnrecr0",           B4SOI_MOD_WNRECR0S, IF_REAL,
                "Width dependence of nrecr0"),
IO("wnrecr0d",          B4SOI_MOD_WNRECR0D, IF_REAL,
                "Width dependence of nrecr0d"),
IO("wisbjt",            B4SOI_MOD_WISBJT,   IF_REAL,
                "Width dependence of isbjt"),
IO("widbjt",            B4SOI_MOD_WIDBJT,   IF_REAL,
                "Width dependence of idbjt"),
IO("wisdif",            B4SOI_MOD_WISDIF,   IF_REAL,
                "Width dependence of isdif"),
IO("widdif",            B4SOI_MOD_WIDDIF,   IF_REAL,
                "Width dependence of iddif"),
IO("wisrec",            B4SOI_MOD_WISREC,   IF_REAL,
                "Width dependence of isrec"),
IO("widrec",            B4SOI_MOD_WIDREC,   IF_REAL,
                "Width dependence of idrec"),
IO("wistun",            B4SOI_MOD_WISTUN,   IF_REAL,
                "Width dependence of istun"),
IO("widtun",            B4SOI_MOD_WIDTUN,   IF_REAL,
                "Width dependence of idtun"),
IO("wvrec0",            B4SOI_MOD_WVREC0S,  IF_REAL,
                "Width dependence of vrec0"),
IO("wvrec0d",           B4SOI_MOD_WVREC0D,  IF_REAL,
                "Width dependence of vrec0d"),
IO("wvtun0",            B4SOI_MOD_WVTUN0S,  IF_REAL,
                "Width dependence of vtun0"),
IO("wvtun0d",           B4SOI_MOD_WVTUN0D,  IF_REAL,
                "Width dependence of vtun0d"),
IO("wnbjt",             B4SOI_MOD_WNBJT,    IF_REAL,
                "Width dependence of nbjt"),
IO("wlbjt0",            B4SOI_MOD_WLBJT0,   IF_REAL,
                "Width dependence of lbjt0"),
IO("wvabjt",            B4SOI_MOD_WVABJT,   IF_REAL,
                "Width dependence of vabjt"),
IO("waely",             B4SOI_MOD_WAELY,    IF_REAL,
                "Width dependence of aely"),
IO("wahli",             B4SOI_MOD_WAHLIS,   IF_REAL,
                "Width dependence of ahli"),
IO("wahlid",            B4SOI_MOD_WAHLID,   IF_REAL,
                "Width dependence of ahlid"),
IO("wvsdfb",            B4SOI_MOD_WVSDFB,   IF_REAL,
                "Width dependence of vsdfb"),
IO("wvsdth",            B4SOI_MOD_WVSDTH,   IF_REAL,
                "Width dependence of vsdth"),
IO("wdelvt",            B4SOI_MOD_WDELVT,   IF_REAL,
                "Width dependence of delvt"),
IO("wacde",             B4SOI_MOD_WACDE,    IF_REAL,
                "Width dependence of acde"),
IO("wmoin",             B4SOI_MOD_WMOIN,    IF_REAL,
                "Width dependence of amoin"),
IO("wnoff",             B4SOI_MOD_WNOFF,    IF_REAL,
                "Width dependence of noff"),

// v3.1 added for RF
IO("wxrcrg1",           B4SOI_MOD_WXRCRG1,  IF_REAL,
                "Width dependence of xrcrg1"),
IO("Wxrcrg2",           B4SOI_MOD_WXRCRG2,  IF_REAL,
                "Width dependence of xrcrg2"),
// added for RF model end

// v3.1
IO("pxj",               B4SOI_MOD_PXJ,      IF_REAL,
                "Cross-term dependence of xj"),
IO("palphagb1",         B4SOI_MOD_PALPHAGB1,IF_REAL,
                "Cross-term dependence of alphagb1"),
IO("pbetagb1",          B4SOI_MOD_PBETAGB1, IF_REAL,
                "Cross-term dependence of betagb1"),
IO("palphagb2",         B4SOI_MOD_PALPHAGB2,IF_REAL,
                "Cross-term dependence of alphagb2"),
IO("pbetagb2",          B4SOI_MOD_PBETAGB2, IF_REAL,
                "Cross-term dependence of betagb2"),
IO("pcgsl",             B4SOI_MOD_PCGSL,    IF_REAL,
                "Cross-term dependence of cgsl"),
IO("pcgdl",             B4SOI_MOD_PCGDL,    IF_REAL,
                "Cross-term dependence of cgdl"),
IO("pckappa",           B4SOI_MOD_PCKAPPA,  IF_REAL,
                "Cross-term dependence of ckappa"),
IO("pndif",             B4SOI_MOD_PNDIF,    IF_REAL,
                "Cross-term dependence of ndif"),
IO("pute",              B4SOI_MOD_PUTE,     IF_REAL,
                "Cross-term dependence of ute"),
IO("pkt1",              B4SOI_MOD_PKT1,     IF_REAL,
                "Cross-term dependence of kt1"),
IO("pkt1l",             B4SOI_MOD_PKT1L,    IF_REAL,
                "Cross-term dependence of kt1l"),
IO("pkt2",              B4SOI_MOD_PKT2,     IF_REAL,
                "Cross-term dependence of kt2"),
IO("pua1",              B4SOI_MOD_PUA1,     IF_REAL,
                "Cross-term dependence of ua1"),
IO("pub1",              B4SOI_MOD_PUB1,     IF_REAL,
                "Cross-term dependence of ub1"),
IO("puc1",              B4SOI_MOD_PUC1,     IF_REAL,
                "Cross-term dependence of uc1"),
IO("pat",               B4SOI_MOD_PAT,      IF_REAL,
                "Cross-term dependence of at"),
IO("pprt",              B4SOI_MOD_PPRT,     IF_REAL,
                "Cross-term dependence of prt"),
IO("pntrecf",           B4SOI_MOD_PNTRECF,  IF_REAL,
                "Cross-term dependence of ntrecf"),
IO("pntrecr",           B4SOI_MOD_PNTRECR,  IF_REAL,
                "Cross-term dependence of ntrecr"),
IO("pxbjt",             B4SOI_MOD_PXBJT,    IF_REAL,
                "Cross-term dependence of xbjt"),
IO("pxdif",             B4SOI_MOD_PXDIFS,   IF_REAL,
                "Cross-term dependence of xdif"),
IO("pxrec",             B4SOI_MOD_PXRECS,   IF_REAL,
                "Cross-term dependence of xrec"),
IO("pxtun",             B4SOI_MOD_PXTUNS,   IF_REAL,
                "Cross-term dependence of xtun"),
IO("pxdifd",            B4SOI_MOD_PXDIFD,   IF_REAL,
                "Cross-term dependence of xdifd"),
IO("pxrecd",            B4SOI_MOD_PXRECD,   IF_REAL,
                "Cross-term dependence of xrecd"),
IO("pxtund",            B4SOI_MOD_PXTUND,   IF_REAL,
                "Cross-term dependence of xtund"),

// v3.0
IO("paigc",             B4SOI_MOD_PAIGC,    IF_REAL,
                "Cross-term dependence of aigc"),
IO("pbigc",             B4SOI_MOD_PBIGC,    IF_REAL,
                "Cross-term dependence of bigc"),
IO("pcigc",             B4SOI_MOD_PCIGC,    IF_REAL,
                "Cross-term dependence of cigc"),
IO("paigsd",            B4SOI_MOD_PAIGSD,   IF_REAL,
                "Cross-term dependence of aigsd"),
IO("pbigsd",            B4SOI_MOD_PBIGSD,   IF_REAL,
                "Cross-term dependence of bigsd"),
IO("pcigsd",            B4SOI_MOD_PCIGSD,   IF_REAL,
                "Cross-term dependence of cigsd"),
IO("pnigc",             B4SOI_MOD_PNIGC,    IF_REAL,
                "Cross-term dependence of nigc"),
IO("ppigcd",            B4SOI_MOD_PPIGCD,   IF_REAL,
                "Cross-term dependence for pigcd"),
IO("ppoxedge",          B4SOI_MOD_PPOXEDGE, IF_REAL,
                "Cross-term dependence for poxedge"),

IO("pnch",              B4SOI_MOD_PNPEAK,   IF_REAL,
                "Cross-term dependence of nch"),
IO("pnsub",             B4SOI_MOD_PNSUB,    IF_REAL,
                "Cross-term dependence of nsub"),
IO("pngate",            B4SOI_MOD_PNGATE,   IF_REAL,
                "Cross-term dependence of ngate"),
IO("pvth0",             B4SOI_MOD_PVTH0,    IF_REAL,
                "Cross-term dependence of vto"),
IO("pk1",               B4SOI_MOD_PK1,      IF_REAL,
                "Cross-term dependence of k1"),
IO("pk1w1",             B4SOI_MOD_PK1W1,    IF_REAL,
                "Cross-term dependence of k1w1"),
IO("pk1w2",             B4SOI_MOD_PK1W2,    IF_REAL,
                "Cross-term dependence of k1w2"),
IO("pk2",               B4SOI_MOD_PK2,      IF_REAL,
                "Cross-term dependence of k2"),
IO("pk3",               B4SOI_MOD_PK3,      IF_REAL,
                "Cross-term dependence of k3"),
IO("pk3b",              B4SOI_MOD_PK3B,     IF_REAL,
                "Cross-term dependence of k3b"),
IO("pkb1",              B4SOI_MOD_PKB1,     IF_REAL,
                "Cross-term dependence of kb1"),
IO("pw0",               B4SOI_MOD_PW0,      IF_REAL,
                "Cross-term dependence of w0"),
IO("plpe0",             B4SOI_MOD_PLPE0,    IF_REAL,
                "Cross-term dependence of lpe0"),
IO("plpeb",             B4SOI_MOD_PLPEB,    IF_REAL,
                "Cross-term dependence of lpeb"),
IO("pdvt0",             B4SOI_MOD_PDVT0,    IF_REAL,
                "Cross-term dependence of dvt0"),
IO("pdvt1",             B4SOI_MOD_PDVT1,    IF_REAL,
                "Cross-term dependence of dvt1"),
IO("pdvt2",             B4SOI_MOD_PDVT2,    IF_REAL,
                "Cross-term dependence of dvt2"),
IO("pdvt0w",            B4SOI_MOD_PDVT0W,   IF_REAL,
                "Cross-term dependence of dvt0w"),
IO("pdvt1w",            B4SOI_MOD_PDVT1W,   IF_REAL,
                "Cross-term dependence of dvt1w"),
IO("pdvt2w",            B4SOI_MOD_PDVT2W,   IF_REAL,
                "Cross-term dependence of dvt2w"),
IO("pu0",               B4SOI_MOD_PU0,      IF_REAL,
                "Cross-term dependence of u0"),
IO("pua",               B4SOI_MOD_PUA,      IF_REAL,
                "Cross-term dependence of ua"),
IO("pub",               B4SOI_MOD_PUB,      IF_REAL,
                "Cross-term dependence of ub"),
IO("puc",               B4SOI_MOD_PUC,      IF_REAL,
                "Cross-term dependence of uc"),
IO("pvsat",             B4SOI_MOD_PVSAT,    IF_REAL,
                "Cross-term dependence of vsat"),
IO("pa0",               B4SOI_MOD_PA0,      IF_REAL,
                "Cross-term dependence of a0"),
IO("pags",              B4SOI_MOD_PAGS,     IF_REAL,
                "Cross-term dependence of ags"),
IO("pb0",               B4SOI_MOD_PB0,      IF_REAL,
                "Cross-term dependence of b0"),
IO("pb1",               B4SOI_MOD_PB1,      IF_REAL,
                "Cross-term dependence of b1"),
IO("pketa",             B4SOI_MOD_PKETA,    IF_REAL,
                "Cross-term dependence of keta"),
IO("pketas",            B4SOI_MOD_PKETAS,   IF_REAL,
                "Cross-term dependence of ketas"),
IO("pa1",               B4SOI_MOD_PA1,      IF_REAL,
                "Cross-term dependence of a1"),
IO("pa2",               B4SOI_MOD_PA2,      IF_REAL,
                "Cross-term dependence of a2"),
IO("prdsw",             B4SOI_MOD_PRDSW,    IF_REAL,
                "Cross-term dependence of rdsw"),
IO("prsw",              B4SOI_MOD_PRSW,     IF_REAL,
                "Cross-term dependence of rsw"),
IO("prdw",              B4SOI_MOD_PRDW,     IF_REAL,
                "Cross-term dependence of rdw"),
IO("pprwb",             B4SOI_MOD_PPRWB,    IF_REAL,
                "Cross-term dependence of prwb"),
IO("pprwg",             B4SOI_MOD_PPRWG,    IF_REAL,
                "Cross-term dependence of prwg"),
IO("pwr",               B4SOI_MOD_PWR,      IF_REAL,
                "Cross-term dependence of wr"),
IO("pnfactor",          B4SOI_MOD_PNFACTOR, IF_REAL,
                "Cross-term dependence of nfactor"),
IO("pdwg",              B4SOI_MOD_PDWG,     IF_REAL,
                "Cross-term dependence of dwg"),
IO("pdwb",              B4SOI_MOD_PDWB,     IF_REAL,
                "Cross-term dependence of dwb"),
IO("pvoff",             B4SOI_MOD_PVOFF,    IF_REAL,
                "Cross-term dependence of voff"),
IO("peta0",             B4SOI_MOD_PETA0,    IF_REAL,
                "Cross-term dependence of eta0"),
IO("petab",             B4SOI_MOD_PETAB,    IF_REAL,
                "Cross-term dependence of etab"),
IO("pdsub",             B4SOI_MOD_PDSUB,    IF_REAL,
                "Cross-term dependence of dsub"),
IO("pcit",              B4SOI_MOD_PCIT,     IF_REAL,
                "Cross-term dependence of cit"),
IO("pcdsc",             B4SOI_MOD_PCDSC,    IF_REAL,
                "Cross-term dependence of cdsc"),
IO("pcdscb",            B4SOI_MOD_PCDSCB,   IF_REAL,
                "Cross-term dependence of cdscb"),
IO("pcdscd",            B4SOI_MOD_PCDSCD,   IF_REAL,
                "Cross-term dependence of cdscd"),
IO("ppclm",             B4SOI_MOD_PPCLM,    IF_REAL,
                "Cross-term dependence of pclm"),
IO("ppdiblc1",          B4SOI_MOD_PPDIBL1,  IF_REAL,
                "Cross-term dependence of pdiblc1"),
IO("ppdiblc2",          B4SOI_MOD_PPDIBL2,  IF_REAL,
                "Cross-term dependence of pdiblc2"),
IO("ppdiblcb",          B4SOI_MOD_PPDIBLB,  IF_REAL,
                "Cross-term dependence of pdiblcb"),
IO("pdrout",            B4SOI_MOD_PDROUT,   IF_REAL,
                "Cross-term dependence of drout"),
IO("ppvag",             B4SOI_MOD_PPVAG,    IF_REAL,
                "Cross-term dependence of pvag"),
IO("pdelta",            B4SOI_MOD_PDELTA,   IF_REAL,
                "Cross-term dependence of delta"),
IO("palpha0",           B4SOI_MOD_PALPHA0,  IF_REAL,
                "Cross-term dependence of alpha0"),
IO("pfbjtii",           B4SOI_MOD_PFBJTII,  IF_REAL,
                "Cross-term dependence of fbjtii"),
IO("pbeta0",            B4SOI_MOD_PBETA0,   IF_REAL,
                "Cross-term dependence of beta0"),
IO("pbeta1",            B4SOI_MOD_PBETA1,   IF_REAL,
                "Cross-term dependence of beta1"),
IO("pbeta2",            B4SOI_MOD_PBETA2,   IF_REAL,
                "Cross-term dependence of beta2"),
IO("pvdsatii0",         B4SOI_MOD_PVDSATII0,IF_REAL,
                "Cross-term dependence of vdsatii0"),
IO("plii",              B4SOI_MOD_PLII,     IF_REAL,
                "Cross-term dependence of lii"),
IO("pesatii",           B4SOI_MOD_PESATII,  IF_REAL,
                "Cross-term dependence of esatii"),
IO("psii0",             B4SOI_MOD_PSII0,    IF_REAL,
                "Cross-term dependence of sii0"),
IO("psii1",             B4SOI_MOD_PSII1,    IF_REAL,
                "Cross-term dependence of sii1"),
IO("psii2",             B4SOI_MOD_PSII2,    IF_REAL,
                "Cross-term dependence of sii2"),
IO("psiid",             B4SOI_MOD_PSIID,    IF_REAL,
                "Cross-term dependence of siid"),
IO("pagidl",            B4SOI_MOD_PAGIDL,   IF_REAL,
                "Cross-term dependence of agidl"),
IO("pbgidl",            B4SOI_MOD_PBGIDL,   IF_REAL,
                "Cross-term dependence of bgidl"),
IO("pcgidl",            B4SOI_MOD_PCGIDL,   IF_REAL,
                "Cross-term dependence of cgidl"),
IO("pegidl",            B4SOI_MOD_PEGIDL,   IF_REAL,
                "Cross-term dependence of egidl"),
IO("pntun",             B4SOI_MOD_PNTUNS,   IF_REAL,
                "Cross-term dependence of ntun"),
IO("pntund",            B4SOI_MOD_PNTUND,   IF_REAL,
                "Cross-term dependence of ntund"),
IO("pndiode",           B4SOI_MOD_PNDIODES, IF_REAL,
                "Cross-term dependence of ndiode"),
IO("pndioded",          B4SOI_MOD_PNDIODED, IF_REAL,
                "Cross-term dependence of ndiode"),
IO("pnrecf0",           B4SOI_MOD_PNRECF0S, IF_REAL,
                "Cross-term dependence of nrecf0"),
IO("pnrecf0d",          B4SOI_MOD_PNRECF0D, IF_REAL,
                "Cross-term dependence of nrecf0"),
IO("pnrecr0",           B4SOI_MOD_PNRECR0S, IF_REAL,
                "Cross-term dependence of nrecr0"),
IO("pnrecr0d",          B4SOI_MOD_PNRECR0D, IF_REAL,
                "Cross-term dependence of nrecr0"),
IO("pisbjt",            B4SOI_MOD_PISBJT,   IF_REAL,
                "Cross-term dependence of isbjt"),
IO("pidbjt",            B4SOI_MOD_PIDBJT,   IF_REAL,
                "Cross-term dependence of idbjt"),
IO("pisdif",            B4SOI_MOD_PISDIF,   IF_REAL,
                "Cross-term dependence of isdif"),
IO("piddif",            B4SOI_MOD_PIDDIF,   IF_REAL,
                "Cross-term dependence of iddif"),
IO("pisrec",            B4SOI_MOD_PISREC,   IF_REAL,
                "Cross-term dependence of isrec"),
IO("pidrec",            B4SOI_MOD_PIDREC,   IF_REAL,
                "Cross-term dependence of idrec"),
IO("pistun",            B4SOI_MOD_PISTUN,   IF_REAL,
                "Cross-term dependence of istun"),
IO("pidtun",            B4SOI_MOD_PIDTUN,   IF_REAL,
                "Cross-term dependence of idtun"),
IO("pvrec0",            B4SOI_MOD_PVREC0S,  IF_REAL,
                "Cross-term dependence of vrec0"),
IO("pvrec0d",           B4SOI_MOD_PVREC0D,  IF_REAL,
                "Cross-term dependence of vrec0d"),
IO("pvtun0",            B4SOI_MOD_PVTUN0S,  IF_REAL,
                "Cross-term dependence of vtun0"),
IO("pvtun0d",           B4SOI_MOD_PVTUN0D,  IF_REAL,
                "Cross-term dependence of vtun0d"),
IO("pnbjt",             B4SOI_MOD_PNBJT,    IF_REAL,
                "Cross-term dependence of nbjt"),
IO("plbjt0",            B4SOI_MOD_PLBJT0,   IF_REAL,
                "Cross-term dependence of lbjt0"),
IO("pvabjt",            B4SOI_MOD_PVABJT,   IF_REAL,
                "Cross-term dependence of vabjt"),
IO("paely",             B4SOI_MOD_PAELY,    IF_REAL,
                "Cross-term dependence of aely"),
IO("pahli",             B4SOI_MOD_PAHLIS,   IF_REAL,
                "X-term dependence of ahli"),
IO("pahlid",            B4SOI_MOD_PAHLID,   IF_REAL,
                "X-term dependence of ahlid"),
IO("pvsdfb",            B4SOI_MOD_PVSDFB,   IF_REAL,
                "Cross-term dependence of vsdfb"),
IO("pvsdth",            B4SOI_MOD_PVSDTH,   IF_REAL,
                "Cross-term dependence of vsdth"),
IO("pdelvt",            B4SOI_MOD_PDELVT,   IF_REAL,
                "Cross-term dependence of delvt"),
IO("pacde",             B4SOI_MOD_PACDE,    IF_REAL,
                "Cross-term dependence of acde"),
IO("pmoin",             B4SOI_MOD_PMOIN,    IF_REAL,
                "Cross-term dependence of amoin"),
IO("pnoff",             B4SOI_MOD_PNOFF,    IF_REAL,
                "Cross-term dependence of noff"),

// v3.1 added for RF
IO("pxrcrg1",           B4SOI_MOD_PXRCRG1,  IF_REAL,
                "Cross-term dependence of xrcrg1"),
IO("pxrcrg2",           B4SOI_MOD_PXRCRG2,  IF_REAL,
                "Cross-term dependence of xrcrg2"),
// v3.1 added for RF end

// v4.0 backward compatibility
IO("nlx",               B4SOI_MOD_NLX,      IF_REAL,
                "Lateral non-uniform doping effect"),
IO("lnlx",              B4SOI_MOD_LNLX,     IF_REAL,
                "Length dependence of nlx"),
IO("wnlx",              B4SOI_MOD_WNLX,     IF_REAL,
                "Width dependence of nlx"),
IO("pnlx",              B4SOI_MOD_PNLX,     IF_REAL,
                "Cross-term dependence of nlx"),
IO("ngidl",             B4SOI_MOD_NGIDL,    IF_REAL,
                "GIDL first parameter"),
IO("lngidl",            B4SOI_MOD_LNGIDL,   IF_REAL,
                "Length dependence of ngidl"),
IO("wngidl",            B4SOI_MOD_WNGIDL,   IF_REAL,
                "Width dependence of ngidl"),
IO("pngidl",            B4SOI_MOD_PNGIDL,   IF_REAL,
                "Cross-term dependence of ngidl"),
// Added for binning - END

IP("nmos",              B4SOI_MOD_NMOS,     IF_FLAG,
                "Flag to indicate NMOS"),
IP("pmos",              B4SOI_MOD_PMOS,     IF_FLAG,
                "Flag to indicate PMOS")
};

const char *B4SOInames[] = {
   "Drain",
   "Gate",
   "Source",
   "Substrate",
   "Backgate",
   "Body",
   "Temp"
};

const char *B4SOImodNames[] = {
    "nmos",
    "pmos",
    0
};

IFkeys B4SOIkeys[] = {
    IFkeys( 'm', B4SOInames, 4, 7, 0 )
};

} // namespace


B4SOIdev::B4SOIdev()
{
    dv_name = "BSIMSOI4.0";
    dv_description = "Berkeley SOI MOSFET Model Version 4.0";

    dv_numKeys = NUMELEMS(B4SOIkeys);
    dv_keys = B4SOIkeys;

    dv_levels[0] = 22;
    dv_levels[1] = 57;  // HSPICE compatability
    dv_levels[2] = 0;
    dv_modelKeys = B4SOImodNames;

    dv_numInstanceParms = NUMELEMS(B4SOIpTable);
    dv_instanceParms = B4SOIpTable;

    dv_numModelParms = NUMELEMS(B4SOImPTable);
    dv_modelParms = B4SOImPTable;

    dv_flags = DV_TRUNC | DV_NODIST;
};


sGENmodel *
B4SOIdev::newModl()
{
    return (new sB4SOImodel);
}


sGENinstance *
B4SOIdev::newInst()
{
    return (new sB4SOIinstance);
}


int
B4SOIdev::destroy(sGENmodel **model)
{
    return (IFdevice::destroy<sB4SOImodel, sB4SOIinstance>(model));
}


int
B4SOIdev::delInst(sGENmodel *model, IFuid dname, sGENinstance *fast)
{
    return (IFdevice::delInst<sB4SOImodel, sB4SOIinstance>(model, dname,
        fast));
}


int
B4SOIdev::delModl(sGENmodel **model, IFuid modname, sGENmodel *modfast)
{
    return (IFdevice::delModl<sB4SOImodel, sB4SOIinstance>(model, modname,
        modfast));
}


// mosfet parser
// Mname <node> <node> <node> <node> [<node> [<node> [<node>]]] <model>
//       [L=<val>] [W=<val>] [AD=<val>] [AS=<val>] [PD=<val>]
//       [PS=<val>] [NRD=<val>] [NRS=<val>] [OFF]
//       [IC=<val>,<val>,<val>]
//
void
B4SOIdev::parse(int type, sCKT *ckt, sLine *current)
{
    DEV.parse(ckt, current, type, dv_keys->minTerms, dv_keys->maxTerms,
        true, 0);
}


void
B4SOIdev::backup(sGENmodel *mp, DEV_BKMODE m)
{
    while (mp) {
        for (sGENinstance *ip = mp->GENinstances; ip; ip = ip->GENnextInstance)
            ((sB4SOIinstance*)ip)->backup(m);
        mp = mp->GENnextModel;
    }
}


// Below is hugely GCC-specific.  The __WRMODULE__ and __WRVERSION__
// tokens are defined in the Makefile and passed with -D when
// compiling.

#define STR(x) #x
#define STRINGIFY(x) STR(x)
#define MCAT(x, y) x ## y
#define MODNAME(x, y) MCAT(x, y)

// Module initializer.  Sets locations in the main app to some
// identifying strings.
//
__attribute__((constructor)) static void initializer()
{
    extern const char *WRS_ModuleName, *WRS_ModuleVersion;

    WRS_ModuleName = STRINGIFY(__WRMODULE__);
    WRS_ModuleVersion = STRINGIFY(__WRVERSION__);
}


// Device constructor function.  This should be the only globally
// visible symbol in the module.  The function name expands to the
// module name with trailing _c.
// 
extern "C" {
    void
    MODNAME(__WRMODULE__, _c)(IFdevice **d, int *cnt)
    {
        *d = new B4SOIdev;
        (*cnt)++;
    }
}

