
!!  ---------------------------------------------------------------
!!  Xic/WRspice Help System Database
!!  Copyright (C) Whiteley Research Inc. 2025.  All Rights Reserved
!!  WRspice help file
!!  ---------------------------------------------------------------

!!TAG WRspice

!!KEYWORD
spElements.hlp
!!TITLE
spElements.hlp
!!HTML 

!!SUBTOPICS
elements
passive
cap
ind
mut
res
sw
tra
urc
jj
tjm


!! elements.tex 012509
!!KEYWORD
elements
!!TITLE
Circuit Elements
!!HTML 
    Each element in the circuit is specified by an element line that
    contains the element name, the circuit nodes to which the element
    is connected, and the values of the parameters that determine the
    electrical characteristics of the element.  The first letter of
    the element name specifies the element type (case insensitive). 
    For example, a resistor name must begin with the letter
    '<tt>R</tt>' or '<tt>r</tt>' and can contain one or more
    characters.  Hence, <tt>R</tt>, <tt>r1</tt>, <tt>Rse</tt>,
    <tt>ROUT</tt>, and <tt>r3ac2zY</tt> are valid resistor names.

    <p>
    In the descriptions that follow, data fields that are enclosed in
    square brackets ([ ]) are optional.  All indicated punctuation
    (parentheses, equal signs, etc.) is optional and merely indicate
    the presence of any delimiter.  A consistent style such as that
    shown here will make the input easier to understand.  With respect
    to branch voltages and currents, <i>WRspice</i> uniformly uses the
    associated reference convention (current flows in the direction of
    voltage drop).

    <p>
    The circuit cannot contain a loop of voltage sources.  If a dc <a
    href=".op">operating point</a> analysis is performed, which is
    true for all analysis except for <a href=".tran">transient
    analysis</a> with the <tt>uic</tt> (use initial conditions) flag
    set, the circuit can not contain a loop of voltage sources and/or
    inductors and cannot contain a cutset of current sources and/or
    capacitors.  In transient analysis with the <tt>uic</tt> flag set
    (which is always the case when Josephson junctions are present),
    inductor/voltage source loops are allowed, as are
    capacitor/current source cut sets.  However, parallel voltage
    sources and series current sources are not accepted.  It is not
    strictly necessary that each node in the circuit have a dc path to
    ground with the <tt>uic</tt> flag given, however convergence
    problems may result.  It is sometimes necessary to add a large
    valued resistor to ground in these cases.  In general, nodes
    should have at least two connections.

    <p>
    This and the following sections describe the devices available in
    the standard device library linked into <i>WRspice</i>.  The
    device library contains the element and model code for each
    device, as well as the parser for the element specification lines.

    <p>
    Most of the code for the device library (with the exception of
    restricted third-party semiconductor models) is available upon
    request from Whiteley Research Inc.  In theory, users can build
    their own, customized device library for use with <i>WRspice</i>. 
    In this case, devices can be added to or deleted from the library,
    or modified.  Contact Whiteley Research for more information.

    <p>
    This format for most device lines, including the key letters,
    number of nodes, etc., is standard for the SPICE input language,
    but is set entirely by the code in the device library, and hence
    can be abridged in a custom device library.  The descriptions
    below pertain to the standard library. 

    <p>
    The following is a complete listing of circuit elements available
    in the standard <i>WRspice</i> library, and the key letter (the
    first letter of the device name).
 
    <blockquote>
    <table border=1 cellpadding=2 bgcolor="#ffffee">
    <tr><th colspan=2><a href="passive">Passive Elements</a></th></tr>
    <tr><td><a href="cap">Capacitor</a></td>
      <td><tt>c</tt></td></tr>
    <tr><td><a href="ind">Inductor</a></td>
      <td><tt>l</tt></td></tr>
    <tr><td><a href="mut">Mutual Inductor</a></td>
      <td><tt>k</tt></td></tr>
    <tr><td><a href="res">Resistor</a></td>
      <td><tt>r</tt></td></tr>
    <tr><td><a href="csw">Current-Controlled Switch</a></td>
      <td><tt>w</tt></td></tr>
    <tr><td><a href="sw">Voltage-Controlled Switch</a></td>
      <td><tt>s</tt></td></tr>
    <tr><td><a href="tra">General Transmission Line</a></td>
      <td><tt>t</tt></td></tr>
    <tr><td><a href="ltra">Lossy Transmission Line</a></td>
      <td><tt>o</tt></td></tr>
    <tr><td><a href="urc">Uniform RC Line</a></td>
      <td><tt>u</tt></td></tr>

    <tr><th colspan=2>Voltage and Current Sources</th></tr>
    <tr><td><a href="src">General Voltage Source</a></td>
      <td><tt>v</tt></td></tr>
    <tr><td><a href="src">General Current Source</a></td>
      <td><tt>i</tt></td></tr>
    <tr><td><a href="src">Arbitrary Source</a></td>
      <td><tt>a</tt></td></tr>
    <tr><td><a href="vccs">Voltage-Controlled Current Source</a></td>
      <td><tt>g</tt></td></tr>
    <tr><td><a href="vcvs">Voltage-Controlled Voltage Source</a></td>
      <td><tt>e</tt></td></tr>
    <tr><td><a href="cccs">Current-Controlled Current Source</a></td>
      <td><tt>f</tt></td></tr>
    <tr><td><a href="ccvs">Current-Controlled Voltage Source</a></td>
      <td><tt>h</tt></td></tr>

    <tr><th colspan=2><a href="semicond">Semiconductor Devices</a></th></tr>
    <tr><td><a href="dio">Junction Diode</a></td>
      <td><tt>d</tt></td></tr>
    <tr><td><a href="bjt">Bipolar Junction Transistor</a></td>
      <td><tt>q</tt></td></tr>
    <tr><td><a href="jfet">Junction Field-Effect Transistor</a></td>
      <td><tt>j</tt></td></tr>
    <tr><td><a href="mes">MESFET</a></td>
      <td><tt>z</tt></td></tr>
    <tr><td><a href="mos">MOSFET</a></td>
      <td><tt>m</tt></td></tr>

    <tr><th colspan=2>Superconductor Devices</th></tr>
    <tr><td><a href="jj">Josephson Junction</a></td>
      <td><tt>b</tt></td></tr>
    </table>
    </blockquote>

    <p>
    The models for the semiconductor and some other devices require
    many parameter values.  Often, many devices in a circuit are
    defined by the same set of device model parameters.  For these
    reasons, a set of device model parameters is defined on a separate
    <a href=".model"><tt>.model</tt></a> line and assigned a unique
    model name.  The device element lines in <i>WRspice</i> then refer
    to the model name.  This scheme alleviates the need to specify all
    of the model parameters on each device element line.

    <p>
    The <a href="show"><b>show</b></a> command with the <tt>-D</tt>
    option is useful for printing a list of the parameters names that
    can be used on a device instance line.  Only the parameters not
    listed as "<tt>RO</tt>" (read-only) can be specified on the line.
!!LATEX elements elements.tex
Each element in the circuit is specified by an element line that
contains the element name, the circuit nodes to which the element is
connected, and the values of the parameters that determine the
electrical characteristics of the element.  The first letter of the
element name specifies the element type (case insensitive).  For
example, a resistor name must begin with the letter `{\vt R}' or `{\vt
r}' and can contain one or more characters.  Hence, {\vt R}, {\vt r1},
{\vt Rse}, {\vt ROUT}, and {\vt r3ac2zY} are valid resistor names.

\index{current flow convention}
In the descriptions that follow, data fields that are enclosed in
square brackets `{\vt [}', `{\vt ]}' are optional.  All indicated
punctuation (parentheses, equal signs, etc.) is optional and merely
indicates the presence of any delimiter.  A consistent style such as
that shown here will make the input easier to understand.  With
respect to branch voltages and currents, {\WRspice} uniformly uses the
associated reference convention (current flows in the direction of
voltage drop).

\index{uic keyword}
The circuit cannot contain a loop of voltage sources.  If a dc
operating point analysis is performed, which is true for all analysis
except for transient analysis with the {\vt uic} (use initial
conditions) flag set, the circuit can not contain a loop of voltage
sources and/or inductors and cannot contain a cutset of current
sources and/or capacitors.  In transient analysis with the {\vt uic}
flag set (which is always the case when Josephson junctions are
present), inductor/voltage source loops are allowed, as are
capacitor/current source cut sets.  However, parallel voltage sources
and series current sources are not accepted.  It is not strictly
necessary that each node in the circuit have a dc path to ground with
the {\vt uic} flag given, however convergence problems may result.  It
is sometimes necessary to add a large-valued resistor to ground in
these cases.  In general, nodes should have at least two connections.

\index{device library}
This and the following sections describe the devices available in the
standard device library linked into {\WRspice}.  The device library
contains the element and model code for each device, as well as the
parser for the element specification lines.

Most of the code for the device library (with the exception of
restricted third-party semiconductor models) is available upon
request from Whiteley Research Inc.  In theory, users can build
their own, customized device library for use with {\WRspice}.  In
this case, devices can be added to or deleted from the library, or
modified.  Contace Whiteley Research for more information.

This format for most device lines, including the key letters, number
of nodes, etc., is standard for the SPICE input language, but is set
entirely by the code in the device library, and hence can be
abridged in a custom device library.  The descriptions below pertain
to the standard library.

The following is a complete list of circuit elements available in
the standard {\WRspice} library, and the key letter (the first
letter of the device name).

\begin{tabular}{|l|l|}\hline
\multicolumn{2}{|c|}{Passive Elements}\\ \hline
\bf Capacitor & \vt c\\ \hline
\bf Inductor & \vt l\\ \hline
\bf Mutual Inductor & \vt k\\ \hline
\bf Resistor & \vt r\\ \hline
\bf Current-Controlled Switch & \vt w\\ \hline
\bf Voltage-Controlled Switch & \vt s\\ \hline
\bf General Transmission Line & \vt t\\ \hline
\bf Lossy Transmission Line & \vt o\\ \hline
\bf Uniform RC Line & \vt u\\ \hline
\multicolumn{2}{|c|}{Voltage and Current Sources}\\ \hline
\bf General Voltage Source & \vt v\\ \hline
\bf General Current Source & \vt i\\ \hline
\bf Arbitrary Source & \vt a\\ \hline
\bf Voltage-Controlled Current Source & \vt g\\ \hline
\bf Voltage-Controlled Voltage Source & \vt e\\ \hline
\bf Current-Controlled Current Source & \vt f\\ \hline
\bf Current-Controlled Voltage Source & \vt h\\ \hline
\multicolumn{2}{|c|}{Semiconductor Devices}\\ \hline
\bf Junction Diode & \vt d\\ \hline
\bf Bipolar Junction Transistor & \vt q\\ \hline
\bf Junction Field-Effect Transistor & \vt j\\ \hline
\bf MESFET & \vt z\\ \hline
\bf MOSFET & \vt m\\ \hline
\multicolumn{2}{|c|}{Superconductor Devices}\\ \hline
\bf Josephson Junction & \vt b\\ \hline
\end{tabular}

The models for the semiconductor and some other devices require many
parameter values.  Often, many devices in a circuit are defined by the
same set of device model parameters.  For these reasons, a set of
device model parameters is defined on a separate {\vt .model} line and
assigned a unique model name.  The device element lines in {\WRspice}
then refer to the model name.  This scheme alleviates the need to
specify all of the model parameters on each device element line.

The {\cb show} command with the {\vt -D} option is useful for
printing a list of the parameters names that can be used on a device
instance line.  Only the parameters not listed as ``{\vt RO}''
(read-only) can be specified on the line.

!!SEEALSO
spinput

!! not in manual
!!KEYWORD
passive
!!TITLE
Passive Elements
!!HTML
    The following passive elements are available in <i>WRspice</i>.

    <blockquote>
    <table border=1 cellpadding=2 bgcolor="#ffffee">
    <tr><th>Device</th> <th>Name</th> <th>Key</th></tr>
    <tr><td><a href="cap">Capacitor</a></td>
      <td><tt>cap</tt></td> <td><tt>c</tt></td></tr>
    <tr><td><a href="ind">Inductor</a></td>
      <td><tt>ind</tt></td> <td><tt>l</tt></td></tr>
    <tr><td><a href="mut">Mutual Inductor</a></td>
      <td><tt>mut</tt></td> <td><tt>k</tt></td></tr>
    <tr><td><a href="res">Resistor</a></td>
      <td><tt>res</tt></td> <td><tt>r</tt></td></tr>
    <tr><td><a href="csw">Current-Controlled Switch</a></td>
      <td><tt>csw</tt></td> <td><tt>w</tt></td></tr>
    <tr><td><a href="sw">Voltage-Controlled Switch</a></td>
      <td><tt>sw</tt></td> <td><tt>s</tt></td></tr>
    <tr><td><a href="tra">General Transmission Line</a></td>
      <td><tt>tra</tt></td> <td><tt>t</tt></td></tr>
    <tr><td><a href="ltra">Lossy Transmission Line</a></td>
      <td><tt>ltra</tt></td> <td><tt>o</tt></td></tr>
    <tr><td><a href="urc">Uniform RC Line</a></td>
      <td><tt>urc</tt></td> <td><tt>u</tt></td></tr>
    </table>
    </blockquote>

!!SEEALSO
elements

!! elements.tex 071918
!!KEYWORD
cap
!!TITLE
Capacitors
!!HTML 
    General forms:
    <blockquote>
    <tt>c</tt><i>name</i> <i>n+ n-</i> [<i>value</i> | <i>modname</i>]
     [<i>options</i>]
     [<tt>c=</tt><i>expr</i> | <tt>poly</tt> <i>c0</i> [<i>c1</i> ...]]
    <br><br>
    <i>Options</i>:
     [<tt>m=</tt></i>mult</i>] [<tt>ic=</tt><i>val</i>]
     [<tt>temp=</tt><i>temp</i>]
     [<tt>tc1=</tt><i>tcoeff1</i>] [<tt>tc2=</tt><i>tcoeff2</i>]
     [<tt>l=</tt><i>length</i>] [<tt>w=</tt><i>width</i>]
    </blockquote>

    <p>
    Examples:
    <blockquote><tt>
        cload 2 10 10p<br>
        cmod 3 7 cmodel l=10U w=1u
    </tt></blockquote>

    <p>
    The <i>n+</i> and <i>n-</i> are the positive and negative element
    nodes, respectively, and <i>value</i> is the capacitance for a
    constant valued capacitor.  Alternatively, a <a
    href="capmodel">capacitor model</a> <i>modname</i> can be
    specified which allows for the calculation of the actual
    capacitance value from strictly geometric information and the
    specifications of the process.  If <i>value</i> is specified, it
    defines the capacitance.  If <i>modname</i> is specified, then the
    capacitance is calculated from the process information in the
    model <i>modname</i> and the given <i>length</i> and <i>width</i>. 
    If <i>value</i> is not specified, then <i>modname</i> and
    <i>length</i> must be specified.  If <i>width</i> is not
    specified, then it will be taken from the default width given in
    the model.  Either <i>value</i> or <i>modname</i>, <i>length</i>,
    and <i>width</i> may be specified, but not both sets.  See the <a
    href="capmodel">capacitor model</a> description for more
    information.

    <p>
    The parameters accepted by the capacitor are:

    <dl>
    <dt><tt>m=</tt><i>mult</i><dd>
    This is the parallel multiplier which is the number of devices
    effectively in parallel.  The given capacitance is multiplied by
    this value.  It overrides any '<tt>m</tt>' multiplier found in the
    capacitor model.
    </dl>

    <dl>
    <dt><tt>ic=</tt><i>val</i><dd>
    The optional initial condition <i>val</i> is the initial (time
    zero) voltage across the capacitor.  The initial condition (if
    any) applies only when the <tt>uic</tt> option is specified in <a
    href=".tran">transient analysis</a>.
    </dl>

    <dl>
    <dt><tt>temp=</tt><i>temp</i><dd>
    The <i>temp</i> is the Celsius operating temperature of the capacitor,
    for use by the temperature coefficient parameters.
    </dl>

    <dl>
    <dt><tt>tc1=</tt><i>tcoeff1</i><dd>
    The first-order temperature coefficient.  This will override the
    first-order coefficient found in a model, if given.
    </dl>

    <dl>
    <dt><tt>tc2=</tt><i>tcoeff2</i><dd>
    The second-order temperature coefficient.  This will override the
    second-order coefficient found in a model, if given.
    </dl>

    <dl>
    <dt><tt>l=</tt><i>length</i><dd>
    The length of the capacitor.  This applies only when a model is
    given, which will compute the capacitance from geometry.
    </dl>

    <dl>
    <dt><tt>w=</tt><i>width</i><dd>
    The width of the capacitor.  This applies only when a model is
    given, which will compute the capacitance from geometry.
    </dl>

    <dl>
    <dt><tt>c=</tt><i>expr</i><dd>
    This can also be given as "<tt>cap=</tt><i>expr</i>", or
    "<tt>capacitance=</tt><i>expr</i>", where <i>expr</i> is an <a
    href="devexpr">expression</a> yielding the capacitance in farads. 
    This is the partial derivative of charge with respect to voltage,
    possibly as a function of other circuit variables.  This form is
    applicable when the first token following the node list is not a
    capacitance value or model name.  It also applies when a model is
    given, it overrides the geometric capacitance value.

    <p>
    This is the default keyword, so actually the parameter name and
    equals sign are optional, a bare expression is acceptable.
    </dl>

    <dl>
    <dt><tt>poly</tt> <i>c0</i> [<i>c1</i> ...]<dd>
    This form allows specification of a polynomial capacitance, which
    will take the form
    <blockquote>
    Capacitance = <tt>c0</tt> + <tt>c1</tt>&middot;<i>v</i> +
      <tt>c2</tt>&middot;<i>v</i><sup>2</sup> ...
    </blockquote>
    where <i>v</i> is the voltage difference between the positive and
    negative element nodes.  There is no built-in limit to the number
    of terms.
    </dl>
!!LATEX cap elements.tex
\spgen{c{\it name} {\it n\/}+ {\it n\/}- [{\it value\/} | {\it modname\/}]
 [{\it options\/}]
 [c={\it expr\/} | {\vt poly} {\it c0} [{\it c1} ...]]\\
 \\{\it Options\/}:
 [m={\it mult\/}] [ic={\it val\/}] [temp={\it temp\/} [tc1={\it tcoeff1\/}]
 [tc2={\it tcoeff2\/}] [l={\it length\/}] [w={\it width\/}]}

\spexamp{cload 2 10 10p\\
cmod 3 7 cmodel l=10u w=1u}

The {\it n\/}{\vt +} and {\it n\/}{\vt -} are the positive and
negative element nodes, respectively, and {\it value\/} is the
capacitance for a constant valued capacitor.  Alternatively, a
capacitor model {\it modname\/} can be specified which allows for the
calculation of the actual capacitance value from strictly geometric
information and the specifications of the process.  If {\it value\/}
is specified, it defines the capacitance.  If {\it modname\/} is
specified, then the capacitance is calculated from the process
information in the model {\it modname} and the given {\it length} and
{\it width}.  If {\it value\/} is not specified, then {\it modname\/}
and {\it length\/} must be specified.  If {\it width\/} is not
specified, then it will be taken from the default width given in the
model.  Either {\it value\/} or {\it modname\/}, {\it length\/}, and
{\it width\/} may be specified, but not both sets.

The parameters accepted by the capacitor are:

\begin{description}
\item{\vt m=}{\it mult}\\
This is the parallel multiplier which is the number of devices
effectively in parallel.  The given capacitance is multiplied by this
value.  It overrides any `{\vt m}' multiplier found in the inductor
model.

\item{\vt ic=}{\it val}\\
The optional initial condition {\it val} is the initial (time zero)
voltage across the capacitor.  The initial condition (if any) applies
only when the {\vt uic} option is specified in transient analysis.

\item{\vt temp=}{\it temp}\\
The {\it temp} is the Celsius operating temperature of the capacitor,
for use by the temperature coefficient parameters.

\item{\vt tc1=}{\it tcoeff1}\\
The first-order temperature coefficient.  This will override the
first-order coefficient found in a model, if given.

\item{\vt tc2=}{\it tcoeff2}\\
The second-order temperature coefficient.  This will override the
second-order coefficient found in a model, if given.

\item{\vt l=}{\it length}\\
The length of the capacitor.  This applies only when a model is given,
which will compute the capacitance from geometry.

\item{\vt w=}{\it width}\\
The width of the capacitor.  This applies only when a model is given,
which will compute the capacitance from geometry.

\item{\vt c=}{\it expr}\\
This can also be given as ``{\vt cap=}{\it expr}'', or ``{\vt
capacitance=}{\it expr}'', where {\it expr} is an expression yielding
the capacitance in farads.  This is the partial derivative of charge
with respect to voltage, possibly as a function of other circuit
variables.  This form is applicable when the first token following the
node list is not a capacitance value or model name.  It also applies
when a model is given, it overrides the geometric capacitance value.

This is the default keyword, so actually the parameter name and equals
sign are optional, a bare expression is acceptable.

\item{\vt poly} {\it c0} [{\it c1} ...]\\
This form allows specification of a polynomial capacitance, which will
take the form
\begin{quote}
Capacitance = $c0 + c1{\cdot}v + c2{\cdot}v^2 ...$
\end{quote}
where $v$ is the voltage difference between the positive and negative
element nodes.  There is no built-in limit to the number of terms.
\end{description}

!!SEEALSO
passive
capmodel

!! elements.tex 071918
!!KEYWORD
ind
!!TITLE
Inductors
!!HTML 
    General form:
    <blockquote>
    <tt>l</tt><i>name</i> <i>n+ n-</i> [<i>value</i> | <i>modname</i>]
    [<i>options</i>]
    [<tt>ind=</tt>]<i>expr</i> | <tt>poly</tt> <i>c0</i> [<i>c1</i> ...]]
    <br><br>
    <i>Options</i>:
    [<tt>m=</tt><i>mult</i>][<tt>ic=</tt><i>val</i>]
    </blockquote>

    <p>
    Examples:
    <blockquote><tt>
        llink 42 69 1uH<br>
        lshunt 23 51 10u ic=15.7mA
    </tt></blockquote>

    <p>
    The <i>n+</i> and <i>n-</i> are the positive and negative element
    nodes, respectively, and <i>value</i> is the inductance, for a
    constant value inductor.  An <a href="indmodel">inductor model</a>
    <i>modname</i> can optionally be specified.  Presently the
    inductor model holds only a parallel multiplier default, so an
    inductance must be specified in addition to the model.

    <p>
    The parameters accepted for the inductor device are:

    <dl>
    <dt><tt>m=</tt><i>mult</i><dd>
    This is the parallel multiplier which is the number of devices
    effectively in parallel.  The given inductance is divided by this
    value.  It overrides any '<tt>m</tt>' multiplier found in the
    inductor model.
    </dl>

    <dl>
    <dt><tt>ic=</tt><i>val</i><dd>
    The initial condition is the initial (time-zero) value of inductor
    current (in Amps) that flows from <i>n+</i>, through the inductor,
    to <i>n-</i>.  The initial condition (if any) applies only when
    the <tt>uic</tt> option is specified in <a href=".tran">transient
    analysis</a>.
    </dl>

    <dl>
    <dt><tt>ind=</tt>]<i>expr</i><dd>
    The <i>expr</i> is an <a href="devexpr">expression</a> yielding
    the inductance in henries.  This is the partial derivative of flux
    with respect to branch current, possibly as a function of other
    circuit variables.  The keyword can alse be given as
    "<tt>inductance</tt>" or "<tt>l</tt>", or may be omitted since
    this is the default parameter.  Note that the expression can
    depend on the branch current, in which case the device is
    nonlinear.
    </dl>

    <dl>
    <dt><tt>poly</tt> <i>c0</i> [<i>c1</i> ...]<dd>
    This form allows specification of a polynomial inductance, which
    will take the form
    <blockquote>
    Inductance = <tt>c0</tt> + <tt>c1</tt>&middot;<i>i</i> +
      <tt>c2</tt>&middot;<i>i</i><sup>2</sup> ...
    </blockquote>
    where <i>i</i> is the current flowing through the device from the
    positive to the negative element nodes.  There is no built-in
    limit to the number of terms.
    </dl>
!!LATEX ind elements.tex
\spgen{l{\it name\/} {\it n\/}+ {\it n\/}- [{\it value} | {\it modname\/}]
 [{\it options\/}] [{\vt ind=}{\it expr} | {\vt poly} {\it c0} [{\it c1} ...]]\\
 \\{\it Options\/}:
 [m={\it mult\/}] [ic={\it val\/}]}

\spexamp{llink 42 69 1uh\\
lshunt 23 51 10u ic=15.7ma}

The {\it n\/}{\vt +} and {\it n\/}{\vt -} are the positive and
negative element nodes, respectively, and {\it value} is the
inductance, for a constant value inductor.  An inductor model {\it
modname} can optionally be specified.  Presently the inductor model
holds only a parallel multiplier default, so an inductance must be
specified in addition to the model.

The parameters accepted for the inductor device are:

\begin{description}
\item{\vt m=}{\it mult}\\
This is the parallel multiplier which is the number of devices
effectively in parallel.  The given inductance is divided by this
value.  It overrides any `{\vt m}' multiplier found in the inductor
model.

\item{\vt ic=}{\it val}\\
The initial condition is the initial (time-zero) value of inductor
current (in Amps) that flows from {\it n\/}{\vt +}, through the
inductor, to {\it n\/}{\vt -}.  The initial condition (if any) applies
only when the {\vt uic} option is specified in transient analysis.

\item{\vt ind=}{\it expr}\\
The {\it expr} is an expression yielding the inductance in henries. 
This is the partial derivative of flux with respect to branch current,
possibly as a function of other circuit variables.  The keyword can
alse be given as ``{\vt inductance}'' or ``{\vt l}'', or may be
omitted since this is the default parameter.  Note that the expression
can depend on the branch current, in which case the device is
nonlinear.

\item{\vt poly} {\it c0} [{\it c1} ...]\\
This form allows specification of a polynomial inductance, which will
take the form
\begin{quote}
Inductance = $c0 + c1{\cdot}i + c2{\cdot}i^2 ...$
\end{quote}
where {\it i} is the current flowing through the device from the
positive to the negative element nodes.  There is no built-in limit to
the number of terms.
\end{description}
 
!!SEEALSO
mut
passive
indmodel

!! elements.tex 011715
!!KEYWORD
mut
!!TITLE
Coupled (Mutual) Inductors
!!HTML 
    General form:
    <blockquote>
        <tt>k</tt><i>name</i> <i>inductor1</i> <i>inductor2</i> <i>value</i>
    </blockquote>

    <p>
    Examples:
    <blockquote><tt>
        k43 laa lbb 0.999<br>
        kxfrmr l1 l2 0.87
    </tt></blockquote>

    <p>
    The <i>inductor1</i> and <i>inductor2</i> are the names of the two
    coupled inductors found elsewhere in the circuit, and <i>value</i>
    is the coefficient of coupling, K, which must be greater than 0
    and less than or equal to 1.  Using the "dot" convention, one
    would have a dot on the first node of each inductor.

    <p>
    This formulation applies when the referenced inductors are linear.
    The model is probably not exactly correct in the case of nonlinear
    inductors, but results may be close enough in some applications.
    In general, use of <tt>mut</tt> with nonlinear inductors is not
    recommended but allowed.
!!LATEX mut elements.tex
\spgen{k{\it name} {\it inductor1 inductor2 value}}
\spexamp{k43 laa lbb 0.999\\
kxfrmr l1 l2 0.87}

The {\it inductor1} and {\it inductor2} are the names of the two
coupled inductors found elsewhere in the circuit, and {\it value\/} is
the coefficient of coupling, K, which must be greater than 0 and less
than or equal to 1.  Using the ``dot'' convention, one would have a
dot on the first node of each inductor.

This formulation applies when the referenced inductors are linear. 
The model is probably not exactly correct in the case of nonlinear
inductors, but results may be close enough in some applications.  In
general, use of {\vt mut} with nonlinear inductors is not recommended
but allowed.
 
!!SEEALSO
ind
passive

!! elements.tex 071918
!!KEYWORD
res
!!TITLE
Resistors
!!HTML 
    General form:
    <blockquote>
    <tt>r</tt><i>name</i> <i>n1 n2</i> [<i>value</i> | <i>modname</i>]
     [<i>options</i>]
     [<tt>r=</tt><i>expr</i> | <tt>poly</tt> <i>c0</i> [<i>c1</i> ...]]
    <br><br>
    <i>Options</i>:
     [<tt>m=</tt></i>mult</i>][<tt>temp=</tt><i>temp</i>]
     [<tt>tc1=</tt><i>tcoeff1</i>] [<tt>tc2=</tt><i>tcoeff2</i>]
     [<tt>l=</tt><i>length</i>] [<tt>w=</tt><i>width</i>]
     [<tt>noise</tt>=<i>mult</i>]
    </blockquote>

    <p>
    Examples:
    <blockquote><tt>
        rload 2 10 10k<br>
        rmod 3 7 rmodel l=10u w=1u
    </tt></blockquote>

    <p>
    The <i>n1</i> and <i>n2</i> are the two element nodes, and
    <i>value</i> is the resistance, for a constant value resistor.  A
    <a href="resmodel">resistor model</a> <i>modname</i> can
    alternatively be specified and allows the calculation of the
    actual resistance value from strictly geometric information and
    the specifications of the process.  If a resistance is specified
    after <i>modname</i>, it overrides the geometric information (if
    any) and defines the nominal-temperature resistance.  If
    <i>modname</i> is specified, then the resistance may be calculated
    from the process information in the model <i>modname</i> and the
    given <i>length</i> and <i>width</i>.  In any case, the resulting
    value will be adjusted for the operating temperature <i>temp</i>
    if that is specified, using correction factors given.  If
    <i>value</i> is not specified, then <i>modname</i> and
    <i>length</i> must be specified.  If <i>width</i> is not
    specified, then it will be taken from the default width given in
    the model.  See the <a href="resmodel">resistor model</a>
    description for more information.

    <p>
    If the resistance can not be determined from the provided
    parameters, a fatal error results.  This behavior is different
    from traditional Berkeley SPICE, which provides a default value of
    1K.

    <p>
    The parameters that are understood are:

    <dl>
    <dt><tt>m=</tt><i>mult</i><dd>
    This is the parallel multiplication factor, that represents the
    number of devices effectivly connected in parallel.  The effect is
    to multiply the conductance by this factor, so that the given
    resistance is divided by this value.  This overrides the
    `<tt>m</tt>' multiplier found in the resistor model, if any.
    </dl>

    <dl>
    <dt><tt>temp=</tt><i>temp</i><dd>
    The <i>temp</i> is the Celsius operating temperature of the resistor,
    for use by the temperature coefficient parameters.
    </dl>

    <dl>
    <dt><tt>tc1=</tt><i>tcoeff1</i><dd>
    The first-order temperature coefficient.  This will override the
    first-order coefficient found in a model, if given.  The keyword
    "<tt>tc</tt>" is an alias for "<tt>tc1</tt>".
    </dl>

    <dl>
    <dt><tt>tc2=</tt><i>tcoeff2</i><dd>
    The second-order temperature coefficient.  This will override the
    second-order coefficient found in a model, if given.
    </dl>

    <dl>
    <dt><tt>l=</tt><i>length</i><dd>
    The length of the resistor.  This applies only when a model is
    given, which will compute the resistance from geometry.
    </dl>

    <dl>
    <dt><tt>w=</tt><i>width</i><dd>
    The width of the resistor.  This applies only when a model is
    given, which will compute the resistance from geometry.
    </dl>

    <dl>
    <dt><tt>noise=</tt><i>mult</i><dd>
    The <i>mult</i> is a real number which will multiply the linear
    conductance used in the noise equations.  Probably the major use
    is to give <tt>noise=0.0</tt> to temporarily remove a resistor
    from a circuit noise analysis.
    </dl>

    <dl>
    <dt><tt>r=</tt><i>expr</i><dd>
    This can also be given as "<tt>res=</tt><i>expr</i>", or
    "<tt>resistance=</tt><i>expr</i>", where <i>expr</i> is an <a
    href="devexpr">expression</a> giving the nominal-temperature
    device voltage divided by device current ("large signal"
    resistance) in ohms, possibly as a function of other variables. 
    This form is applicable when the first token following the node
    list is not a resistance value or model name.  It also applies
    when a model is given, it overrides the geometric resistance
    value.
    </dl>

    <dl>
    <dt><tt>poly</tt> <i>c0</i> [<i>c1</i> ...]<dd>
    This form allows specification of a polynomial resistance, which
    will take the form
    <blockquote>
    Resistance = <tt>c0</tt> + <tt>c1</tt>&middot;<i>v</i> +
      <tt>c2</tt>&middot;<i>v</i><sup>2</sup> ...
    </blockquote>
    where <i>v</i> is the voltage difference between the positive and
    negative element nodes.  There is no built-in limit to the number
    of terms.
    </dl>
!!LATEX res elements.tex
\spgen{r{\it name\/} {\it n1 n2} [{\it value} | {\it modname\/}]
 [{\it options\/}]
 [r={\it expr\/} | {\vt poly} {\it c0} [{\it c1} ...]]\\
 \\{\it Options\/}:
 [m={\it mult\/}] [temp={\it temp\/}] [tc1={\it tcoeff1\/}]
 [tc2={\it tcoeff2\/}] [l={\it length\/}] [w={\it width\/}]
 \newline
 [noise={\it mult\/}]}

\spexamp{rload 2 10 10k\\
rmod 3 7 rmodel l=10u w=1u}

The {\it n1} and {\it n2} are the two element nodes, and {\it value}
is the resistance, for a constant value resistor.  A resistor model
{\it modname} can alternatively be specified and allows the
calculation of the actual resistance value from strictly geometric
information and the specifications of the process.  If a resistance is
specified after {\it modname}, it overrides the geometric information
(if any) and defines the nominal-temperature resistance.  If {\it
modname} is specified, then the resistance may be calculated from the
process information in the model {\it modname} and the given {\it
length} and {\it width}.  In any case, the resulting value will be
adjusted for the operating temperature {\it temp} if that is
specified, using correction factors given.  If {\it value} is not
specified, then {\it modname} and {\it length} must be specified.  If
{\it width} is not specified, then it will be taken from the default
width given in the model.

If the resistance can not be determined from the provided parameters,
a fatal error results.  This behavior is different from traditional
Berkeley SPICE, which provides a default value of 1K.

The paramaters that are understood are:

\begin{description}
\item{\vt m=}{\it mult}\\
This is the parallel multiplication factor, that represents the number
of devices effectivly connected in parallel.  The effect is to
multiply the conductance by this factor, so that the given resistance
is divided by this value.  This overrides the `{\vt m}' multiplier
found in the resistor model, if any.

\item{\vt temp=}{\it temp}\\
The {\it temp} is the Celsius operating temperature of the resistor,
for use by the temperature coefficient parameters.

\item{\vt tc1=}{\it tcoeff1}\\
The first-order temperature coefficient.  This will override the
first-order coefficient found in a model, if given.  The keyword
``{\vt tc}'' is an alias for ``{\vt tc1}''.

\item{\vt tc2=}{\it tcoeff2}\\
The second-order temperature coefficient.  This will override the
second-order coefficient found in a model, if given.

\item{\vt l=}{\it length}\\
The length of the resistor.  This applies only when a model is given,
which will compute the resistance from geometry.

\item{\vt w=}{\it width}\\
The width of the resistor.  This applies only when a model is given,
which will compute the resistance from geometry.

\item{\vt noise=}{\it mult}\\
The {\it mult} is a real number which will multiply the linear
conductance used in the noise equations.  Probably the major use is to
give {\vt noise=0.0} to temporarily remove a resistor from a circuit
noise analysis.

\item{\vt r=}{\it expr}\\
This can also be given as ``{\vt res=}{\it expr\/}'' or ``{\vt
resistance=}{\it expr\/}'', where {\it expr} is an expression giving
the nominal-temperature device voltage divided by device current
(``large signal'' resistance) in ohms, possibly as a function of other
variables.  This form is applicable when the first token following the
node list is not a resistance value or model name.  It also applies
when a model is given, it overrides the geometric resistance value.

\item{\vt poly} {\it c0} [{\it c1} ...]\\
This form allows specification of a polynomial resistance, which will
take the form
\begin{quote}
Resistance = $c0 + c1{\cdot}v + c2{\cdot}v^2 ...$
\end{quote}
where {\it v} is the voltage difference between the positive and
negative element nodes.  There is no built-in limit to the number of
terms.
\end{description}
 
!!SEEALSO
passive
resmodel

!! elements.tex 012509
!!KEYWORD
sw csw
!!TITLE
Switches
!!HTML 
    General form:
    <blockquote>
        <tt>s</tt><i>name</i> <i>n+ n- nc+ nc- model</i> [<tt>on | off</tt>]<br>
        <tt>w</tt><i>name</i> <i>n+ n- vnam model</i> [<tt>on | off</tt>]
    </blockquote>

    <p>
    Examples:
    <blockquote><tt>
        s1 1 2 3 4 switch1 on<br>
        s2 5 6 3 0 sm2 off<br>
        switch1 1 2 10 0 smodel1<br>
        w1 1 2 vclock switchmod1<br>
        w2 3 0 vramp sm1 on<br>
        wreset 5 6 vclck lossyswitch off<br>
    </tt></blockquote>

    <p>
    Nodes <i>n+</i> and <i>n-</i> are the nodes between which the
    switch terminals are connected.  The <i>model</i> name is
    mandatory while the initial conditions are optional.  For the
    voltage controlled switch, nodes <i>nc+</i> and <i>nc-</i> are the
    positive and negative controlling nodes respectively.  For the
    current controlled switch, the controlling current is that through
    the voltage source or inductor <i>vnam</i>.  The direction of
    positive controlling current flow is from the positive node,
    through the source or inductor, to the negative node.  See the <a
    href="swmodel">switch model</a> description for more information.
!!LATEX sw elements.tex
\spgen{s{\it name} {\it n\/}+ {\it n\/}- {\it nc\/}+ {\it nc\/}-
 {\it model\/} [on | off]\\
w{\it name} {\it n\/}+ {\it n\/}- {\it vnam model\/} [on | off]}
\spexamp{s1 1 2 3 4 switch1 on\\
s2 5 6 3 0 sm2 off\\
switch1 1 2 10 0 smodel1\\
w1 1 2 vclock switchmod1\\
w2 3 0 vramp sm1 on\\
wreset 5 6 vclck lossyswitch off}

Nodes {\it n\/}{\vt +} and {\it n\/}{\vt -} are the nodes between
which the switch terminals are connected.  The {\vt model} name is
mandatory while the initial conditions are optional.  For the voltage
controlled switch, nodes {\it nc\/}{\vt +} and {\it nc\/}{\vt -} are
the positive and negative controlling nodes respectively.  For the
current controlled switch, the controlling current is that through the
voltage source or inductor {\it vnam}.  The direction of positive
controlling current flow is from the positive node, through the source
or inductor, to the negative node.
 
!!SEEALSO
passive

!! elements.tex 101516
!!KEYWORD
tra ltra
!!TITLE
Transmission Lines (General)
!!HTML 
    <table border=0>
    <tr><td valign=top><b>jump to</b></td> <td>
    <a href="tra#level"><b>Model Level</b></a><br>
    <a href="tra#elec"><b>Electrical Characteristics</b></a><br>
    <a href="tra#init"><b>Initial Conditions</b></a><br>
    <a href="tra#timestep"><b>Timestep and Breakpoint Control</b></a><br>
    <a href="tra#hist"><b>History List</b></a>
    </td></tr></table>

    <p>
    In <i>WRspice</i>, the transmission line element represents a
    general lossless or lossy transmission line.  There are actually
    three historical models unified in the <i>WRspice</i> model:  the
    SPICE3 lossless transmission line, the SPICE3 lossy (LTRA)
    transmission line convolution approach of <a
    href="refs#roy">Roychowdhury and Pederson</a>, and the Pade
    approximation lossy line approach of <a href="refs#lin">Lin and
    Kuh</a>.
    <br clear=all>

    <p>
    General form:
    <blockquote>
        <tt>t</tt><i>name</i> <i>n1 n2 n3 n4</i> [<i>model</i>]
          [<i>param=value</i> ...]<br>
        <tt>o</tt><i>name</i> <i>n1 n2 n3 n4</i> [<i>model</i>]
          <i>param=value</i> ...
    </blockquote>

    <p>
    Examples:
    <blockquote><tt>
        t1 1 0 2 0 z0=50 td=10ns<br>
        tw 1 0 2 0 z0=50 f=1ghz nl=.1<br>
        tx 1 0 4 0 l=9.13E-9 c=3.65E-12 len=24<br>
        oy 2 0 4 0 level=2 l=100pH c=5pf r=1.5 len=12<br>
        oz 2 0 4 0 level=2 tranmod len=12
    </tt></blockquote>

    <p>
    The device line is keyed by the letters '<tt>t</tt>' and
    '<tt>o</tt>' equivalently, as above.  In SPICE3, '<tt>o</tt>'
    calls the lossy convolution model, but this is not necessarily the
    case in <i>WSRspice</i>.  One can enforce use of the convolution
    model by using "<tt>level=2</tt>" in the device or model line, the
    default ("<tt>level=1</tt>") is the Pade approximation model.  In
    the lossless case, the <tt>level</tt> parameter has no effect.

    <p>
    Above, <i>n1</i> and <i>n2</i> are the nodes at port 1; <i>n3</i>
    and <i>n4</i> are the nodes at port 2.  Note that this element
    models only one propagating mode.  If all four nodes are distinct
    in the actual circuit, then two modes may be excited.  To simulate
    such a situation, two transmission line elements are required.

    <p>
    There is a fairly lengthly list of parameters which can be applied
    in the device line, or in a <a href="ltramodel">model</a>.  If a
    model is referenced in the element line, the element defaults to
    the parameters specified in the model, though any of these
    parameters can be overridden for the element if given new values
    in the element line.

    <a name="level"></a>
    <h2>Model Level</h2>

    <dl><dt><tt>level</tt><dd>
    This parameter can take values 1 (the default if not given) or 2.
    The level indicates the treatment of a lossy element, and has no
    effect if the transmission line is lossless.

    <p>
    Level 1 handles arbitrary RLCG configurations using the Pade
    approximation approach.  A Pade approximation is used as a
    rational function approximation to the transfer function in the
    Laplace domain, which has a trivial inverse transformation to the
    time domain.  Further, separability avoids the need to perform a
    complex convolution at each time point.  The model is very fast
    and accurate enough for most purposes.

    <p>
    Level 2 handles RLC configurations using a full numerical
    convolution, equivalent to the LTRA model.  It does not allow a G
    element, and is much slower than the Pade approximation approach,
    however it may be more accurate.  Level 2 supports the following
    types of lines:  RLC (uniform transmission line with series loss
    only), RC (uniform RC line), LC (lossless transmission line), and
    RG (distributed series resistance and parallel conductance only).
    </dl>

    <a name="elec"></a>
    <h2>Electrical Characteristics</h2>

    <dl><dt><tt>len</tt> or <tt>length</tt><dd>
    This provides the physical length of the transmission line in arbitrary
    units, though the units must match the per-length unit in the element
    values discussed below.  If not given, the value is taken as unity,
    unless it is implicitly defined by other parameters.
    </dl>

    <dl><dt><tt>l</tt><dd>
    This parameter provides the series inductance per unit length of
    the line.  The default is 0.
    </dl>

    <dl><dt><tt>c</tt><dd>
    This parameter provides the shunt capacitance per unit length of
    the line.  The default is 0.
    </dl>

    <dl><dt><tt>r</tt><dd>
    This parameter provides the series resistance per unit length of
    the line.  The default is 0.
    </dl>

    <dl><dt><tt>g</tt><dd>
    This parameter provides the shunt conductance per unit length of
    the line.  The default is 0.  With level 2, this cannot be nonzero
    if <tt>l</tt> or <tt>c</tt> is given, i.e., only <tt>r</tt> can be
    nonzero if <tt>g</tt> is nonzero for level = 2, as in the SPICE3
    LTRA model.
    </dl>

    <dl><dt><tt>z0</tt> or <tt>zo</tt><dd>
    This is the line (lossless) characteristic impedance in ohms, given by
    <blockquote>
    Z<sub>0</sub> = sqrt(<i>L</i>/<i>C</i>)<br>
    </blockquote>
    </dl>

    <dl><dt><tt>td</tt> or <tt>delay</tt><dd>
    This is the (lossless) phase delay of the line in seconds,
    given by
    <blockquote>
    T<sub>d</sub> = <i>Length</i>&#183sqrt(<i>LC</i>)
    </blockquote>
    </dl>

    <dl><dt><tt>nl</tt><dd>
    This is the normalized line length at a particular frequency
    <i>f</i>, which must also be specified (see below).  This is an
    alternative means for setting the line delay, where
    <blockquote>
    T<sub>d</sub> = <i>nl</i>/<i>f</i>
    </blockquote>
    It is an error to give both <tt>td</tt> and <tt>nl</tt>.
    </dl>

    <dl><dt><tt>f</tt><dd>
    This is the frequency at which the normalized line length (above) is
    representative.
    </dl>

    <p>
    To model a line with nonzero series inductance and shunt
    capacitance, a complete but non-conflicting subset of the
    parameters <tt>l</tt>, <tt>c</tt>, <tt>z0</tt>, <tt>td</tt>,
    <tt>len</tt>, <tt>f</tt>, and <tt>nl</tt> must be provided.  The
    <tt>td</tt> parameter is the line delay in seconds, and the
    <tt>z0</tt> parameter is the impedance in ohms, for the lossless
    case.  Specifying these two parameters is sufficient to completely
    specify a lossless line, or the reactive elements of a lossy line. 
    Alternatively, one could specify <tt>l</tt> (inductance per
    length), <tt>c</tt> (capacitance per length) and <tt>len</tt>
    (line length).  If <tt>len</tt> is not specified in either case,
    the length defaults to unity.  The delay can also be specified
    through the <tt>f</tt> (frequency) and <tt>nl</tt> (normalized
    length) parameters, where the delay would be set to <tt>nl/f</tt>. 
    It is an error to specify both <tt>td</tt> and <tt>f</tt>,
    <tt>nl</tt>.  If <tt>td</tt> is specified, or both <tt>f</tt> and
    <tt>nl</tt> are specified, along with parameters which yield
    internally the L and C values, then the length is determined
    internally by

    <blockquote>
    <i>length</i> = T<sub>d</sub>/sqrt(<i>LC</i>)
    </blockquote>

    One can specify <tt>z0</tt> and <tt>l</tt>, for example, which
    determines C.  Unlike the SPICE3 (and SPICE2) lossless line
    devices, the delay must be specified through the parameters; there
    is no default.

    <a name="init"></a>
    <h2>Initial Conditions</h2>

    <dl><dt><tt>v1</tt>, <tt>i1</tt>, <tt>v2</tt>, <tt>i2</tt><dd>
    The (optional) initial condition specification consists of the
    voltage and current at each of the transmission line ports.  The
    initial conditions (if any) apply only when the <tt>uic</tt>
    option is specified in <a href=".tran">transient analysis</a>.
    </dl>

    <a name="timestep"></a>
    <h2>Timestep and Breakpoint Control</h2>

    <p>
    Internally, the transmission line models store a table of past
    values of the currents and voltages at the terminals, which become
    excitations after the delay time.  As excitations, these signals
    can cause errors or nonconvergence if their rate of change is too
    large.  These errors are reduced or eliminated by two mechanisms:
    time step truncation and breakpoint setting.  Time step truncation
    occurs if the excitation derivative exceeds a certain threshold. 
    A breakpoint which occurs at this time will also be rescheduled to
    one delay-time later.  Breakpoints are set by the independent
    voltage and current sources at times where a slope change occurs,
    in piecewise linear outputs.  At a breakpoint, the internal time
    step is cut and integration order reduced to accommodate the change
    in input accurately.

    <p>
    <dl><dt><tt>truncdontcut</tt><dd>
    If this flag is given, no complicated timestep cutting will be
    done.  In the <tt>level=1</tt> (Pade) case for a lossy line, there
    is an initial timestep limiting employed in all cases, to
    <tt>slopetol*</tt><i>tau</i>, where <i>tau</i> is an internal time
    constant of the model.  This limiting is usually sufficient, and
    provides the fastest simulation, and therefor
    <tt>truncdontcut</tt> is the default in this case.

    </dl>
    <dl><dt><tt>truncsl</tt><dd>
    If this flag is given, the device will use a slope-test timestep
    cutting algorithm.  This is the default in the lossless case,
    for any level.
    </dl>

    <dl><dt><tt>slopetol</tt><dd>
    When using the slope-test timestep cutting algorithm, this is the
    fraction used in the slope test.  The default is 0.1.  This
    parameter is also used in the <tt>level=1</tt> pre-cutting for
    lossy lines, described above.
    </dl>

    <dl><dt><tt>trunclte</tt><dd>
    This applies to <tt>level=2</tt> (full convolution) only.  When
    this flag is given, a local truncation error method is used for
    timestep control.  This is the default for lossy lines with
    <tt>level=2</tt>.
    </dl>

    <dl><dt><tt>truncnr</tt><dd>
    This applies to <tt>level=2</tt> only.  When this flag is given, a
    Newton-Raphson iterative method is used for timestep control.
    </dl>

    <p>
    If no timestep control keywords are given, the defaults are the
    following:

    <blockquote>
    <table cellpadding=2 border=1 bgcolor="#ffffee">
    <tr><td>Lossless case, any level</td> <td><tt>truncsl</tt></td></tr>
    <tr><td>Level=1 (Pade)</td> <td><tt>truncdontcut</tt></td></tr>
    <tr><td>Level=2 (convolution)</td> <td><tt>trunclte</tt></td></tr>
    </table>
    </blockquote>

    <p>
    Only one of the trunc flags should be given.  The latter two apply
    only to a lossy line with <tt>level=2</tt>, and if given in a
    different case the default timestep control is applied.

    <p>
    The slope algorithm computes the difference between the quadratic
    extrapolation from the last three and the linear extrapolation
    from the last two time points, and uses this difference formula to
    determine the time when this error is equal to <tt>slopetol</tt>
    multiplied by the maximum absolute value of the signal at the
    three time points.

    <p>
    When using <tt>level=2</tt>, there are two alternative timestep control
    options.  If the <tt>trunclte</tt> flag is given, the timestep is
    reduced by one half if the computed local truncation error is
    larger than an error tolerance, which is given by
    <blockquote>
      tol = <i>trtol</i>&#183(<i>reltol</i>&#183(abs(input1) +
        abs(input2)) + <i>abstol</i>
    </blockquote>
    where <i>trtol</i>, <i>reltol</i> and <i>abstol</i> are the values
    of the SPICE options <a href="trtol"><tt>trtol</tt></a>, <a
    href="reltol"><tt>reltol</tt></a> and <a
    href="abstol"><tt>abstol</tt></a>, and <i>input1</i> and
    <i>input2</i> are the internally stored excitations.  If the
    <tt>truncnr</tt> flag is given, a timestep is computed based on
    limiting the local truncation error to the tolerance given above. 

    <p>
    The handling of breakpoints is controlled by the following flags:
     
    <dl><dt><tt>nobreaks</tt><dd>
    When this flag is given, there will be no breakpoint rescheduling.
    </dl>
    <dl><dt><tt>allbreaks</tt><dd>
    When this flag is give, all breakpoints are rescheduled.
    </dl>
    <dl><dt><tt>testbreaks</tt><dd>
    When this flag is given, which is the default, a test is applied
    and only breakpoints that pass this test are rescheduled.
    </dl>
    <dl><dt><tt>rel</tt><dd>
    When testing breakpoints, this is the relative tolerance value.
    The default is .001.
    </dl>
    <dl><dt><tt>abs</tt><dd>
    When testing breakpoints, this is the absolute tolerance value.
    The default is 1e-12.
    </dl>

    <p>
    The breakpoint setting is controlled by the three flags
    <tt>nobreaks</tt>, <tt>allbreaks</tt>, and <tt>testbreaks</tt>. 
    Only one should be given, and the default is <tt>testbreaks</tt>. 
    If <tt>nobreaks</tt> is set, breakpoints will not be rescheduled. 
    If <tt>allbreaks</tt> is set, all breakpoints will be rescheduled
    to the break time plus the delay time.  The default
    <tt>testbreaks</tt> will reschedule a breakpoint if a slope test
    is passed.  This slope test makes use of the <tt>rel</tt> and
    <tt>abs</tt> parameters.  The slopes at the last two time points
    are computed.  The breakpoint is rescheduled if
    <blockquote>
      abs(<i>d1</i>-<i>d2</i>) > max(.01&#183<tt>rel</tt>&#183<i>vmax</i>,
        <tt>abs</tt>)/<i>dt</i>
    </blockquote>
    where <i>d1</i> and <i>d2</i> are the two slopes.  The parameters
    <tt>rel</tt> and <tt>abs</tt> default to 1e-3 and 1e-12,
    respectively.  The <i>dt</i> parameter is the sum of the last two
    time deltas, and <i>vmax</i> is a running peak detect function
    representing the maximum voltage applied to the line.  Note that
    these are different defaults (and a different algorithm) from the
    parameters of the same name used in the SPICE3 transmission line
    models.

    <p>
    In most cases, the defaults for the timestep and breakpoint
    controls are sufficient.  Excessive setting of breakpoints and
    timestep truncation increases execution time, while insufficient
    control can produce errors.  An alternative approach is to limit
    the maximum internal timestep used with the <a
    href=".tran"><tt>.tran</tt></a> line, which can provide highly
    accurate results for comparison when experimenting with the
    control parameters.

    <a name="hist"></a>
    <h2>History List</h2>

    <dl><dt><tt>lininterp</tt><dd>
    If this flag is set, linear interpolation is used to obtain the
    present value of signals in the history list.
    </dl>
    <dl><dt><tt>quadinterp</tt><dd>
    If this flag is set, which is the default, quadratic interpolation
    is used to obtain the present value of signals in the history
    list.
    </dl>
    <dl><dt><tt>compactrel</tt><dd>
    This is the relative tolerance used in history list compaction for
    <tt>level=2</tt>.  The default value is the same as the <i>WRspice</i>
    default relative tolerance (<a href="reltol"><tt>reltol</tt></a>
    variable).
    </dl>
    <dl><dt><tt>compactabs</tt><dd>
    This is the absolute tolerance used in history list compaction for
    <tt>level=2</tt>.  The default value is the same as the <i>WRspice</i>
    default absolute tolerance (<a href="abstol"><tt>abstol</tt></a>
    variable).
    </dl>

    <p>
    The flag <tt>lininterp</tt>, when specified, will use linear
    interpolation instead of the default quadratic interpolation for
    calculating delayed signals.

    <p>
    The parameters <tt>compactrel</tt> and <tt>compactabs</tt> control
    the compaction of the past history of values stored for
    convolution when using <tt>level=2</tt>.  Larger values of these
    lower accuracy but usually increase simulation speed.  These are
    to be used with the <a
    href="trytocompact"><tt>trytocompact</tt></a> option, described in
    the <a href=".options"><tt>.options</tt></a> section.

    <p>
    See the description of the transmission line <a
    href="ltramodel">model</a> for more information.
!!LATEX tra elements.tex
\spgen{t{\it name\/} {\it n1 n2 n3 n4} [{\it model\/}]
 [{\it param\/}={\it value} ...]\\
o{\it name\/} {\it n1 n2 n3 n4} [{\it model\/}]
 [{\it param\/}={\it value} ...]}
\spexamp{t1 1 0 2 0 z0=50 td=10ns\\
tw 1 0 2 0 z0=50 f=1ghz nl=.1\\
tx 1 0 4 0 l=9.13e-9 c=3.65e-12 len=24\\
oy 2 0 4 0 level=2 l=100pH c=5pf r=1.5 len=12\\
oz 2 0 4 0 level=2 tranmod len=12}

In {\WRspice}, the transmission line element represents a general
lossless or lossy transmission line.  There are actually three
historical models unified in the {\WRspice} model:  the SPICE3
lossless transmission line, the SPICE3 lossy (LTRA) transmission line
convolution approach of Roychowdhury and Pederson \cite{ltra}, and the
Pade approximation lossy line approach of Lin and Kuh \cite{lin}.

The device line is keyed by the letters `{\vt t}' and `{\vt o}'
equivalently, as above.  In SPICE3, `{\vt o}' calls the lossy
convolution model, but this is not necessarily the case in
{\WRspice}.  One can enforce use of the convolution model by using
``{\vt level=2}'' in the device or model line, the default (``{\vt
level=1}'') is the Pade approximation model.  In the lossless case,
the {\vt level} parameter has no effect.

Above, {\it n1\/} and {\it n2\/} are the nodes at port 1, {\it n3\/}
and {\it n4\/} are the nodes at port 2.  Note that this element
models only one propagating mode.  If all four nodes are distinct in
the actual circuit, then two modes may be excited.  To simulate such
a situation, two transmission line elements are required.

There is a fairly lengthly list of parameters which can be applied
in the device line, or in a model.  If a model is referenced in the
element line, the element defaults to the parameters specified in
the model, though any of these parameters can be overridden for the
element if given new values in the element line.

\subsubsection{Model Level}

\begin{description}
\item{\vt level}\\
This parameter can take values 1 (the default if not given) or 2.  The
level indicates the treatement of a lossy element, and has no effect
if the transmission line is lossless.

Level 1 handles arbitrary RLCG configurations using the Pade
approximation approach.  A Pade approximation is used as a rational
function approximation to the transfer function in the Laplace domain,
which has a trivial inverse transformation to the time domain. 
Further, separability avoids the need to perform a complex convolution
at each time point.  The model is very fast and accurate enough for
most purposes.

Level 2 handles RLC configurations using a full numerical convolution,
equivalent to the LTRA model.  It does not allow a G element, and is
much slower than the Pade approximation approach, however it may be
more accurate.  Level 2 supports the following types of lines:  RLC
(uniform transmission line with series loss only), RC (uniform RC
line), LC (lossless transmission line), and RG (distributed series
resistance and parallel conductance only).
\end{description}

\subsubsection{Electrical Characteristics}

\begin{description}
\item{\vt len}\\
This provides the physical length of the transmission line in
arbitrary units, though the units must match the per-length unit in
the element values discussed below.  If not given, the value is taken
as unity, unless it is implicitly defined by other parameters.

\item{\vt l}\\
This parameter provides the series inductance per unit length of the
line.  The default is 0.

\item{\vt c}\\
This parameter provides the shunt capacitance per unit length of the
line.  The default is 0.

\item{\vt r}\\
This parameter provides the series resistance per unit length of the
line.  The default is 0.

\item{\vt g}\\
This parameter provides the shunt conductance per unit length of the
line.  The default is 0.  With level 2, this cannot be nonzero if
{\vt l} or {\vt c} is given, i.e., only {\vt r} can be nonzero if
{\vt g} is nonzero for level = 2, as in the SPICE3 LTRA model.

\item{{\vt z0} or {\vt zo}}\\
This is the line (lossless) characteristic impedance in ohms, given by
\begin{displaymath}
Z_0 = \sqrt{L/C}
\end{displaymath}

\item{{\vt td} or {\vt delay}}\\
This is the (lossless) phase delay of the line in seconds, given by
\begin{displaymath}
T_d = Length\sqrt{LC}
\end{displaymath}

\item{\vt nl}\\
This is the normalized line length at a particular frequency {\it f},
which must also be specified (see below).  This is an alternative
means for setting the line delay, where
\begin{displaymath}
T_d = nl/f
\end{displaymath}
It is an error to give both {\it td} and {\it nl}.

\item{\vt f}\\
This is the frequency at which the normalized line length (above) is
representative.
\end{description}

To model a line with nonzero series inductance and shunt capacitance,
a complete but non-conflicting subset of the parameters {\vt l}, {\vt
c}, {\vt z0}, {\vt td}, {\vt len}, {\vt f}, and {\vt nl} must be
provided.  The {\vt td} parameter is the line delay in seconds, and
the {\vt z0} parameter is the impedance in ohms, for the lossless
case.  Specifying these two parameters is sufficient to completely
specify a lossless line, or the reactive elements of a lossy line. 
Alternatively, one could specify {\vt l} (inductance per length), {\vt
c} (capacitance per length) and {\vt len} (line length).  If {\vt len}
is not specified in either case, the length defaults to unity.  The
delay can also be specified through the {\vt f} (frequency) and {\vt
nl} (normalized length) parameters, where the delay would be set to
{\vt nl/f}.  It is an error to specify both {\vt td} and {\vt f}, {\vt
nl}.  If {\vt td} is specified, or both {\vt f} and {\vt nl} are
specified, along with parameters which yield internally the L and C
values, then the length is determined internally by
\begin{displaymath}
Length = T_d/\sqrt{LC}
\end{displaymath}

One can specify {\vt z0} and {\vt l}, for example, which determines C. 
Unlike the SPICE3 (and SPICE2) lossless line devices, the delay must
be specified through the parameters; there is no default.

\subsubsection{Initial Conditions}

\begin{description}
\item{{\vt v1}, {\vt i1}, {\vt v2}, {\vt i2}}\\
The (optional) initial condition specification consists of the voltage
and current at each of the transmission line ports.  The initial
conditions (if any) apply only when the {\vt uic} option is specified
in transient analysis.
\end{description}

\subsubsection{Timestep and Breakpoint Control}

Internally, the transmission line models store a table of past values
of the currents and voltages at the terminals, which become
excitations after the delay time.  As excitations, these signals can
cause errors or nonconvergence if their rate of change is too large. 
These errors are reduced or eliminated by two mechanisms:  time step
truncation and breakpoint setting.  Time step truncation occurs if the
excitation derivative exceeds a certain threshold.  A breakpoint which
occurs at this time will also be rescheduled to one delay-time later. 
Breakpoints are set by the independent voltage and current sources at
times where a slope change occurs, in piecewise linear outputs.  At a
breakpoint, the internal time step is cut and integration order
reduced to accommodate the change in input accurately.

\begin{description}
\item{\vt truncdontcut}\\
If this flag is given, no complicated timestep cutting will be done. 
In the {\vt level=1} (Pade) case for a lossy line, there is an initial
timestep limiting employed in all cases, to $slopetol{\cdot}tau$,
where $tau$ is an internal time constant of the model.  This limiting
is usually sufficient, and provides the fastest simulation, and
therefor {\vt truncdontcut} is the default in this case.

\item{\vt truncsl}\\
If this flag is given, the device will use a slope-test timestep
cutting algorithm.  This is the default in the lossless case, for any
level.

\item{\vt slopetol}\\
When using the slope-test timestep cutting algorithm, this is the
fraction used in the slope test.  The default is 0.1.  This parameter
is also used in the {\vt level=1} pre-cutting for lossy lines,
described above.

\item{\vt trunclte}\\
This applies to {\vt level=2} (full convolution) only.  When this flag
is given, a local truncation error method is used for timestep
control.  This is the default for lossy lines with {\vt level=2}.

\item{\vt truncnr}\\
This applies to {\vt level=2} only.  When this flag is given, a
Newton-Raphson iterative method is used for timestep control.
\end{description}

If no timestep control keywords are given, the defaults are the
following:

\begin{tabular}{ll}
Lossless case, any level & \vt truncsl\\
Level=1 (Pade) & \vt truncdontcut\\
Level=2 (convolution) & \vt trunclte\\
\end{tabular}

Only one of the trunc flags should be given.  The latter two apply
only to a lossy line with {\vt level=2}, and if given in a different
case the default timestep control is applied.

The slope algorithm computes the difference between the quadratic
extrapolation from the last three and the linear extrapolation from
the last two time points, and uses this difference formula to
determine the time when this error is equal to {\vt slopetol}
multiplied by the maximum absolute value of the signal at the
three time points.

When using {\vt level=2}, there are two alternative timestep control
options.  If the {\vt trunclte} flag is given, the timestep is reduced
by one half if the computed local truncation error is larger than an
error tolerance, which is given by
\begin{displaymath}
tol = trtol\cdot(reltol\cdot(abs(input1) + abs(input2)) + abstol
\end{displaymath}
where {\it trtol}, {\it reltol} and {\it abstol} are the values of the
SPICE options {\vt trtol}, {\vt reltol} and {\vt abstol}, and {\it
input1} and {\it input2} are the internally stored excitations.  If
the {\vt truncnr} flag is given, a timestep is computed based on
limiting the local truncation error to the tolerance given above. 

The handling of breakpoints is controlled by the following flags:

\begin{description}
\item{\vt nobreaks}\\
When this flag is given, there will be no breakpoint rescheduling.

\item{\vt allbreaks}\\
When this flag is give, all breakpoints are rescheduled.

\item{\vt testbreaks}\\
When this flag is given, which is the default, a test is applied and
only breakpoints that pass this test are rescheduled.

\item{\vt rel}\\
When testing breakpoints, this is the relative tolerance value.  The
default is .001.

\item{\vt abs}\\
When testing breakpoints, this is the absolute tolerance value.  The
default is 1e-12.
\end{description}

The breakpoint setting is controlled by the three flags {\vt
nobreaks}, {\vt allbreaks}, and {\vt testbreaks}.  Only one should be
given, and the default is {\vt testbreaks}.  If {\vt nobreaks} is set,
breakpoints will not be rescheduled.  If {\vt allbreaks} is set, all
breakpoints will be rescheduled to the break time plus the delay time. 
The default {\vt testbreaks} will reschedule a breakpoint if a slope
test is passed.  This slope test makes use of the {\vt rel} and {\vt
abs} parameters.  The slopes at the last two time points are computed. 
The breakpoint is rescheduled if
\begin{displaymath}
abs(d1-d2) > max(.01{\cdot}rel{\cdot}vmax, abs)/dt
\end{displaymath}
where {\it d1} and {\it d2} are the two slopes.  The parameters {\vt
rel} and {\vt abs} default to 1e-3 and 1e-12, respectively.  The {\it
dt} parameter is the sum of the last two time deltas, and {\it vmax}
is a running peak detect function representing the maximum voltage
applied to the line.  Note that these are different defaults (and a
different algorithm) from the parameters of the same name used in the
SPICE3 transmission line models.

In most cases, the defaults for the timestep and breakpoint controls
are sufficient.  Excessive setting of breakpoints and timestep
truncation increases execution time, while insufficient control can
produce errors.  An alternative approach is to limit the maximum
internal timestep used with the {\vt .tran} line, which can provide
highly accurate results for comparison when experimenting with the
control parameters.

See the description of the transmission line model (\ref{ltramodel})
for more information.

\subsubsection{History List}

\begin{description}
\item{\vt lininterp}\\
If this flag is set, linear interpolation is used to obtain the
present value of signals in the history list.

\item{\vt quadinterp}\\
If this flag is set, which is the default, quadratic interpolation is
used to obtain the present value of signals in the history list.

\item{\vt compactrel}\\
This is the relative tolerance used in history list compaction for
{\vt level=2}.  The default value is the same as the {\WRspice}
default relative tolerance ({\vt reltol} variable).

\item{\vt compactabs}\\
This is the absolute tolerance used in history list compaction for
{\vt level=2}.  The default value is the same as the {\WRspice} default
absolute tolerance ({\vt abstol} variable).
\end{description}

The flag {\vt lininterp}, when specified, will use linear
interpolation instead of the default quadratic interpolation for
calculating delayed signals.

The parameters {\vt compactrel} and {\vt compactabs} control the
compaction of the past history of values stored for convolution when
using {\vt level=2}.  Larger values of these lower accuracy but
usually increase simulation speed.  These are to be used with the {\vt
trytocompact} option, described in the {\vt .options} section.

!!SEEALSO
multidec
passive
urc

!! elements.tex 012509
!!KEYWORD
urc
!!TITLE
Uniform RC Line
!!HTML 
    General form:
    <blockquote>
        <tt>u</tt><i>name</i> <i>n1 n2 n3 modname</i> <tt>l=</tt><i>len</i>
            [<tt>n=</tt><i>lumps</i>]
    </blockquote>

    <p>
    Examples:
    <blockquote><tt>
        u1 1 2 0 urcmod l=50u<br>
        urc2 1 12 2 umodl L=1mil n=6
    </tt></blockquote>

    <p>
    The <i>n1</i> and <i>n2</i> are the two element nodes the RC line
    connects, while <i>n3</i> is the node to which the capacitances
    are connected.  The <i>modname</i> is the model name, <i>len</i>
    is the length of the RC line in meters, and <i>lumps</i>, if
    specified, is the number of lumped segments to use in modeling the
    RC line.  If not specified, the value will be computed as
    <blockquote>
      <i>N</i> =
      log(2pi*<i>fRC</i>*((<i>k</i>-1)/<i>k</i>)<sup>2</sup>)/log(<i>k</i>)
    </blockquote>
    where <i>N</i> is the number of lumps, <i>k</i> is the
    proportionality factor, <i>R</i> and <i>C</i> are the total values
    for the length, and <i>f</i> is the maximum frequency.  See the
    description of the uniform RC line <a href="urcmodel">model</a>
    for more information.
!!LATEX urc elements.tex
\spgen{u{\it name\/} {\it n1 n2 n3 modname} l={\it len} [n={\it lumps\/}]}
\spexamp{u1 1 2 0 urcmod l=50u\\
urc2 1 12 2 umodl l=1mil n=6}

The {\it n1} and {\it n2} are the two element nodes the RC line
connects, while {\it n3} is the node to which the capacitances are
connected.  The {\it modname} is the model name, {\it len} is the
length of the RC line in meters, and {\it lumps}, if specified, is
the number of lumped segments to use in modeling the RC line.  If
not specified, the value will be computed as
\begin{displaymath}
N = \frac{log\left(2{\pi}{F_{max}}RC\cdot\left((k-1)/k\right)^2\right)}{log(k)}
\end{displaymath}
where {\it N} is the number of lumps, {\it k} is the proportionality
factor, {\it R} and {\it C} are the total values for the length, and
$F_{max}$ is the maximum frequency.
 
!!SEEALSO
passive
tra

!!REDIRECT jjdesc jj#jjdesc

!! elements.tex 083122
!!KEYWORD
jj
!!TITLE
Josephson Junctions
!!HTML
    General form:
    <blockquote>
        <tt>b</tt><i>name</i> <i>n+ n-</i> [<i>np</i>] [<i>modname</i>]
          [<i>parameters</i> ...]
     </blockquote>

    <p>
    The default Josephson junction <a href="jjmodel">model</a> is an
    extended version of the RSJ model as used by <a
    href="jewett">Jewett</a>.  There are actually three Josephson
    junction models available, through the <tt>level</tt> model
    parameter, which can take values 1 through 3.  The default
    <tt>level=1</tt> model is the RSJ model mentioned.  This model has
    a simplified Verilog-A version which can be found among the
    Verilog-A examples.  This can be compiled with the <tt>adms</tt>
    utility into a run-time loadable module which can be loaded with
    the <a href="devload"><b>devload</b></a> command.  A pre-compiled
    module is provided with the example.  Once loaded into
    <i>WRspice</i>, the model can be accessed with <tt>level=2</tt>.

    <p>
    For <tt>level=3</tt>, a <a href="tjmodel">microscopic tunnel
    junction</a> "Werthamer" model, also known as a tunnel junction
    model (TJM) is provided.  The model is more physics-based than the
    empirical RSJ model.

    <p>
    Unless stated otherwise, information presented here applies to
    instances of the standard RSJ model (<tt>level=1</tt>) and the
    Verilog-A Josephson junction model (<tt>level=2</tt>) provided
    with <i>WRspice</i> in the Verilog-A examples.

    <p>
    The instance parameters for the microscopic model are described
    in the <a href="tjm">next section</a>.

    <p>
    Josephson Junction Instance Parameters Levels 1 and 2<br>
    <table border=1 cellpadding=2 bgcolor="#ffffee">
    <tr><th>Parameter Name</th> <th>Description</th></tr>
    <tr><td><tt>pijj=1|0</tt></td> <td>
      Whether the device is a "pi" junction.</td></tr>
    <tr><td><tt>area=</tt><i>val</i></td> <td>
      Scale factor that multiplies all currents and other values,
      effectively modifying the junction area.</td></tr>
    <tr><td><tt>ics=</tt><i>val</i></td> <td>Instantiated critical
      current, used as scale factor for
      capacitance, conductances.</td></tr>
    <tr><td><tt>temp_k=</tt><i>val</i></td> <td>Device temperature,
      Kelvin.</td></tr>
    <tr><td><tt>lser=</tt><i>val</i></td> <td>Junction series parasitic
      inductance.</td></tr>
    <tr><td><tt>lsh=</tt><i>val</i></td> <td>Shunt resistor series parasitic
      inductance.</td></tr>
    <tr><td><tt>ic=</tt><i>vj</i>,<i>phi</i></td> <td>
      The initial junction voltage and phase (initial condition) for transient
      analysis.</td></tr>
    <tr><td><tt>vj=</tt><i>vj</i></td> <td>
      The initial junction voltage (initial condition) for transient
      analysis, alias <tt>ic_v</tt>.</td></tr>
    <tr><td><tt>phi=</tt><i>phi</i></td> <td>
      The initial junction phase (initial condition) for transient
      analysis, alias <tt>ic_phase</tt>.</td></tr>
    <tr><td><tt>control=</tt><i>name</i></td> <td>
      Controlling voltage source or inductor name.</td></tr>
    <tr><td><tt>vshunt=</tt><i>val</i></td> <td>
      Voltage to specify external shunt resistance.</td></tr>

    <tr><td><tt>n</tt> (read only)</td> <td>
      SFQ emission count.</td></tr>
    <tr><td><tt>phsf</tt> (read only)</td> <td>
      True if SFQ count change at current time point.</td></tr>
    <tr><td><tt>phst</tt> (read only)</td> <td>
      Time of last SFQ emission.</td></tr>
    <tr><td><tt>v</tt> (read only)</td> <td>
      Terminal voltage.</td></tr>
    <tr><td><tt>phase</tt> (read only)</td> <td>
      Junction phase, alias <tt>phs</tt>.</td></tr>
    <tr><td><tt>tcf</tt> (read only)</td> <td>
      Temperature compensation factor.</td></tr>
    <tr><td><tt>vg</tt> or <tt>vgap</tt> (read only)</td> <td>
      Gap voltage.</td></tr>
    <tr><td><tt>vless</tt> (read only)</td> <td>
      Gap threshold voltage.</td></tr>
    <tr><td><tt>vmore</tt> (read only)</td> <td>
      Gap knee voltage.</td></tr>
    <tr><td><tt>icrit</tt> (read only)</td> <td>
      Maximum critical current.</td></tr>
    <tr><td><tt>cc</tt> (read only)</td> <td>
      Capacitance current.</td></tr>
    <tr><td><tt>cj</tt> (read only)</td> <td>
      Josephson current.</td></tr>
    <tr><td><tt>cq</tt> (read only)</td> <td>
      Quasiparticle current.</td></tr>
    <tr><td><tt>c</tt> (read only)</td> <td>
      Total device current.</td></tr>
    <tr><td><tt>cap</tt> (read only)</td> <td>
      Capacitance.</td></tr>
    <tr><td><tt>g0</tt> (read only)</td> <td>
      Subgap conductance.</td></tr>
    <tr><td><tt>gn</tt> (read only)</td> <td>
      Normal conductance.</td></tr>
    <tr><td><tt>gs</tt> (read only)</td> <td>
      Quasiparticle onset conductance.</td></tr>
    <tr><td><tt>gshunt</tt> (read only)</td> <td>
      External shunt conductance from <tt>vshunt</tt>.</td></tr>
    <tr><td><tt>rshunt</tt> (read only)</td> <td>
      External shunt resistance from <tt>vshunt</tt>.</td></tr>
    <tr><td><tt>lshval</tt> (read only)</td> <td>
      External shunt resistor parasitic inductance.</td></tr>
    <tr><td><tt>g1</tt> (read only)</td> <td>
      NbN quasiparticle parameter.</td></tr>
    <tr><td><tt>g2</tt> (read only)</td> <td>
      NbN quasiparticle parameter.</td></tr>
    <tr><td><tt>node1</tt> (read only)</td> <td>
      Node 1 number.</td></tr>
    <tr><td><tt>node2</tt> (read only)</td> <td>
      Node 2 number.</td></tr>
    <tr><td><tt>pnode</tt> (read only)</td> <td>
      Phase node number.</td></tr>
    <tr><td><tt>lsernode</tt> (read only)</td> <td>
      Internal <tt>lser</tt> node number.</td></tr>
    <tr><td><tt>lserbrn</tt> (read only)</td> <td>
      Internal <tt>lser</tt> branch number.</td></tr>
    <tr><td><tt>lshnode</tt> (read only)</td> <td>
      Internal <tt>lsh</tt> node number.</td></tr>
    <tr><td><tt>lshbrn</tt> (read only)</td> <td>
      Internal <tt>lsh</tt> branch number.</td></tr>
    </table>

    <p>
    Example:
    <blockquote><tt>
        b1 1 0 10 jj1 ics=200uA<br>
        bxx 2 0 type1 control=l3<br>
        b2 4 5 ybco phi=1.57
    </tt></blockquote>

    <p>
    The <i>n+</i> and <i>n-</i> are the positive and negative element
    nodes, respectively.  These are followed by an optional phase
    node.  The phase node, if specified, generally should have no
    other connections in the circuit, but the voltage of this node
    gives the phase of the junction in radians.  The <i>modname</i> is
    the name of the Josephson junction model.  If no model is
    specified, then a default model is used (see the description of
    the <a href="jjmodel">Josephson model</a> for the default values). 
    Other (optional) parameters follow in any order.

    <dl>
    <dt><tt>pijj</tt><dd>
    If the <tt>pijj</tt> parameter is given and set to a nonzero
    integer value, the device instance will behave as a "pi" junction. 
    This type of junction has a ground state with phase &pi; rather
    than 0.  The value given on the device line (if any) overrides the
    value given in the model.
    </dl>

    <dl>
    <dt><tt>area</tt><dd>
    <b>range:</b> 0.05 - 20.0<br>
    <font color="red">Deprecated, do not use in new files.</font><br>
    Histrorically, this parameter has been used to set the actual
    critical current of a Josephson junction instance.  It is not a
    physical area, but rather a scale factor, representing the ratio
    of the instance critical current to the reference critical
    current.  The parameter is retained for backwards compatibility,
    but should not be used in new circuit descrfiptions.  The
    <tt>ics</tt> parameter (below) should be used instead.  By using
    <tt>ics</tt>, one can change the critical current of the reference
    junction without changing the instance critical currents, which is
    not the case for <tt>area</tt>.  In the new paradigm, the
    reference junction critical current corresponds to a "typical"
    mid-sized junction, with a not necessarily convenient critical
    current value.  Use of <tt>area</tt> assumes that the reference
    critical current is something nice, like the historical 1mA, and
    unchanging.  If not specified and <tt>ics</tt> is not given, the
    effective value is 1.0.
    </dl>

    <dl>
    <dt><tt>ics</tt><dd>
    <b>range:</b> 0.02*<tt>icrit</tt> - 50.0*<tt>icrit</tt><br>
    This gives the actual critical current of the instantiated
    junction, and in addition scales all conductance and capacitance
    values from the reference junction appropriately.  This is
    equivalent to giving the <tt>area</tt> parameter with a value of
    <tt>ics</tt>/<tt>icrit</tt>.  The default is <tt>icrit</tt>, the
    reference junction critical current.
    </dl>

    <dl>
    <dt><tt>temp_k</tt><dd>
    <b>range:</b> 0.0 - 0.95*<tt>tc</tt><br>
    This is the assumed operating temperature of the device, in
    Kelvin.  The default is the model <tt>deftemp</tt> value.  See the <a
    href="jjmodel">model description</a> for more information about
    temperature modeling.
    </dl>

    <dl>
    <dt><tt>lser</tt><dd>
    <b>range:</b> 0.0 - 10.0pH<br>
    This models series inductance of the physical Josephson junction
    structure, caused by constriction of current through the junction
    orifice.  This inductance might typically be in the range of 0.1
    to 0.3 picohenries.  If nonzero, an internal node is added to the
    model, providing the connection point of the inductance and the
    Josephson junction.  The default value is 0.0, meaning that no
    parasitic inductance is assumed.  Nonzero given values less than
    0.01pH revert to zero.
    </dl>

    <dl>
    <dt><tt>lsh</tt><dd>
    <b>range:</b> 0.0 - 100.0pH<br>
    This parameter specifies the series inductance of the external
    shunt resistance.  The <tt>vshunt</tt> instance or model parameter
    must be specified such that a positive external shunt conductance
    is applied, otherwise this parameter is ignored.  Ordinarily, the
    <a href="jjmodel"><tt>lsh0</tt>/<tt>lsh1</tt></a> model parameters
    would be used to specify the inductance, this parameter can be
    used to override these values on a per-instance basis if desired.
    </dl>

    <dl>
    <dt><tt>ic</tt><dd>
    <b>Level 1 only.</b><br>
    The keyword is expected to be followed by two numbers, giving the
    initial junction voltage and phase in radians.  These apply in
    transient analysis when the "<tt>uic</tt>" option is included in
    the <a href=".tran">transient analysis</a> specification.  The
    initial junction voltage and phase both default to 0.0.
    </dl>

    <dl>
    <dt><tt>vj</tt> or <tt>ic_v</tt><dd>
    This provides the initial voltage of the junction when the
    "<tt>uic</tt>" option is included in the <a href=".tran">transient
    analysis</a> specification.  The initial junction voltage defaults
    to 0.0.
    </dl>

    <dl>
    <dt><tt>phi</tt> or <tt>ic_phase</tt><dd>
    This provides the initial junction phase in radians when the
    "<tt>uic</tt>" option is included in the <a href=".tran">transient
    analysis</a> specification.
    </dl>

    <dl>
    <dt><tt>control</tt><dd>
    <b>Level 1 only.</b><br>
    The <tt>control</tt> parameter is only needed if critical current
    modulation is part of the circuit operation, and is only relevant
    to Josephson junction model types that support critical current
    modulation, that is, the model parameter <tt>cct</tt> is given a
    value larger than 1.  The <i>name</i> in the <tt>control</tt>
    specification is the name of either a voltage source or inductor
    which appears somewhere in the circuit.  The current flowing
    through the indicated device is taken as the junction control
    current.
    </dl>

    <dl>
    <dt><tt>vshunt</tt><dd>
    <b>range:</b> 0.0 - nominal gap voltage<br>
    See the description of the <a href="rsjvshunt"><tt>vshunt</tt></a>
    model parameter.  The model parameter, if given, will provide the
    default used in all instances.  However this can be overridden on
    a per-instance basis with the <tt>vshunt</tt> instance parameter.
    </dl>

    <p>
    The remaining parameters are "read only" and can be accessed with
    the <tt>@</tt><i>device</i>[<i>param</i>] <a
    href="specialvec">special vector</a> notation during the
    simulation (in callbacks) or after the simulation if the vector is
    saved with the <a href="save"><b>save</b></a> command or equivalent.

    <dl>
    <dt><tt>n</tt> (read only)<dd>
    This integer value is incremented whenever the junction phase
    changes by plus or minus 2&pi;.  It is intended for pass/fail
    testing of single flux quantum (SFQ) circuit operation.
    </dl>

    <dl>
    <dt><tt>phsf</tt> (read only)<dd>
    This flag is set true at the time point when the SFQ emission
    count changes.  This is intended to facilitate pass/fail testing
    of SFQ circuits.
    </dl>

    <dl>
    <dt><tt>phst</tt> (read only)<dd>
    This read-only parameter contains the last time that the SFQ
    emission count changed, intended for use in SFQ pass/fail testing.
    </dl>

    <dl>
    <dt><tt>v</tt> (read only)<dd>
    The voltage across the junction.
    </dl>

    <dl>
    <dt><tt>phase</tt> (read only)<dd>
    The junction phase.  Reading this is an alternative to using a
    third node to obtain the phase.
    </dl>

    <dl>
    <dt><tt>tcf</tt> (read only)<dd>
    The temperature correction factor that modifies the critical
    current at operating temperatures other than nominal.  See the
    description of the <a href="rsjtcf">temperature dependence</a> of
    the RSJ model.
    </dl>

    <dl>
    <dt><tt>vg</tt> or <tt>vgap</tt> (read only)<dd>
    The gap voltage of the junction.
    </dl>

    <dl>
    <dt><tt>vless</tt> (read only)<dd>
    The voltage where the quasiparticle step current begins to rise. 
    it is the lower bounding point used to indicate the <tt>delv</tt>
    gap spread, i.e., it is equal to <tt>vg - delv/2</tt>.
    </dl>

    <dl>
    <dt><tt>vmore</tt> (read only)<dd>
    The voltage where the quasiparticle step ends and the normal
    resistive part begins.  It is the upper point used to indicate the
    <tt>delv</tt> gap spread, equal to <tt>vg + delv/2</tt>.
    </dl>

    <dl>
    <dt><tt>icrit</tt> (read only)<dd>
    The critical current of the junction instance.
    </dl>

    <dl>
    <dt><tt>cc</tt> (read only)<dd>
    The current flowing through the geometric capacitance of the
    junction.
    </dl>

    <dl>
    <dt><tt>cj</tt> (read only)<dd>
    The pair current (supercurrent) flowing through the junction.
    </dl>

    <dl>
    <dt><tt>cq</tt> (read only)<dd>
    The quasiparticle (normal) current flowing through the device.
    </dl>

    <dl>
    <dt><tt>c</tt> (read only)<dd>
    The total current flowing through the device, the sum of
    <tt>cc</tt>, <tt>cj</tt> and <tt>cq</tt>.
    </dl>

    <dl>
    <dt><tt>cap</tt> (read only)<dd>
    The geometric capacitance of the device instance.
    </dl>

    <dl>
    <dt><tt>g0</tt> (read only)<dd>
    The subgap conductance of the device instance.
    </dl>

    <dl>
    <dt><tt>gn</tt> (read only)<dd>
    The normal state conductance of the device instance.
    </dl>

    <dl>
    <dt><tt>gs</tt> (read only)<dd>
    The conductance of the quasiparticle branch at the gap voltage.
    </dl>

    <dl>
    <dt><tt>gshunt</tt> (read only)<dd>
    If the <tt>vshunt</tt> instance or model parameter is given and
    nonzero, <tt>gshunt</tt> will return the external conductance
    added to the intrinsic conductance so that the total conductance
    multiplied by the critical current will equal <tt>vshunt</tt>.
    </dl>

    <dl>
    <dt><tt>rshunt</tt> (read only)<dd>
    If <tt>gshunt</tt> is nonzero, <tt>rshunt</tt> will be the
    reciprocal, otherwise it will be 0.
    </dl>

    <dl>
    <dt><tt>lshval</tt> (read only)<dd>
    If the <tt>vshunt</tt> instance or model parameter is given and
    nonzero, this will be the parasitic inductance assumed in the
    external shunt resistance.  This will depend on the settings of
    the <tt>lsh0</tt> and <tt>lsh1</tt> model parameters, and the
    <tt>lsh</tt> instance parameter which overrides the model
    parameters if given.
    </dl>

    <dl>
    <dt><tt>g1</tt> (read only)<dd>
    This applies if the <tt>rtype</tt> model parameter is set to 3,
    which indicates use of the NbN polynomial model for subgap
    conductance.  This is the third-order amplitude in the polynomial.
    </dl>

    <dl>
    <dt><tt>g2</tt> (read only)<dd>
    This applies if the <tt>rtype</tt> model parameter is set to 3,
    which indicates use of the NbN polynomial model for subgap
    conductance.  This is the fifth-order amplitude in the polynomial.
    </dl>

    <dl>
    <dt><tt>node1</tt> (read only)<dd>
    The internal node number of the first node.
    </dl>

    <dl>
    <dt><tt>node2</tt> (read only)<dd>
    The internal node number of the second node.
    </dl>

    <dl>
    <dt><tt>pnode</tt> (read only)<dd>
    The internal node number of the third (phase) node, 0 or -1 if not
    used.
    </dl>

    <dl>
    <dt><tt>lsernode</tt> (read only)<dd>
    The internal node number of the device internal node added for
    series parasitic inductance.  This will be 0 or -1 if not used (no
    series parasitic inductance assumed).
    </dl>

    <dl>
    <dt><tt>lserbrn</tt> (read only)<dd>
    If series parasitic inductance is nonzero (<tt>lser</tt> given)
    this will be the internal number of the branch node of the
    inductor.
    </dl>

    <dl>
    <dt><tt>lshnode</tt> (read only)<dd>
    If the <tt>vshunt</tt> instance or model parameter is given and
    nonzero, and series parasitic inductance is nonzero, this will be
    the internal node number of the internal device node that
    incorporates the series inductance.
    </dl>

    <dl>
    <dt><tt>lshbrn</tt> (read only)<dd>
    If the <tt>vshunt</tt> instance or model parameter is given and
    nonzero, and series parasitic inductance is nonzero, this will be
    the internal branch number of the inductor's branch.
    </dl>

    <a name="jjdesc"></a>
    <h2>Josephson Junction Description</h2>

    <p>
    The Josephson junction device has unique behavior which
    complicates simulation with a SPICE-type simulator.  Central is
    the idea of phase, which is a quantum-mechanical concept and is
    generally invisible in the non-quantum world.  However with
    superconductivity, and with Josephson junctions in particular,
    phase becomes not only observable, but a critical parameter
    describing these devices and the circuits that contain them.

    <p>
    Without going into the detailed physics, one can accept that phase
    is an angle which applies to any superconductor.  The angle is a
    fixed value anywhere on the superconductor, unless current is
    flowing.  Flowing current produces magnetic flux, and magnetic
    flux produces a change in phase.  One can express this as follows:

    <blockquote>
    LI = flux = &Phi;<sub>0</sub>(&phi;/2&pi;)
    </blockquote>

    Here, L is the inductance, &Phi;<sub>0</sub> is the magnetic flux
    quantum (Planck's constant divided by twice the electron charge)
    and &phi; is the phase difference across the inductor.  The
    supercurrent flowing in a Josephson junction is given by

    <blockquote>
    I = I<sub>c</sub>sin(&phi;)
    </blockquote>

    where I<sub>c</sub> is the junction critical current, and &phi; is
    the phase difference across the junction.  The junction phase is
    proportional to the time integral of junction voltage:

    <blockquote>
    phi = (2&pi;/&Phi;<sub>0</sub>) &int;<sup>t</sup> V(t)dt
    </blockquote>

    The important consequence is that the sum of the phase differences
    around any loop consisting of Josephson junctions and inductors
    must be a multiple of 2&pi;.  This is due to the requirement that
    the superconducting wave function be continuous around the loop. 
    Further, if the loop phase is not zero, it implies that a
    persistent current is flowing around the loop, and that the
    magnetic flux through the loop is a multiple of the flux quantum
    &Phi;<sub>0</sub>.

    <p>
    We therefor observe that in a circuit containing loops of
    Josephson junctions and inductors, which includes about all useful
    circuits:

    <ol>
    <li>The DC voltage across each Junction or inductor is zero.
    <li>The DC current applied to the circuit splits in such a manner
    as to satisfy the phase relations above.
    </ol>

    Without any built-in concept of phase, it would appear to be
    impossible to find the DC operating point of a circuit containing
    Josephson junctions and inductors with a SPICE simulator. 
    However, there are ways to accomplish this.

    <p>
    The time-honored approach, used successfully for many years, is to
    skip DC analysis entirely.  One generally is interested only in
    transient analysis, describing the time evolution of the circuit
    under stimulus, and a DC analysis would only be necessary to find
    the initial values of circuit voltages and currents.  Instead of a
    DC analysis, what is done is every voltage and current source
    starts at zero voltage or current, and ramps to the final value in
    a few picoseconds.  The <a href=".tran">transient analysis</a>
    is performed using the "use initial conditions" ("<tt>uic</tt>")
    option, where there is no DC operating point analysis, and
    transient analysis starts immediately with any supplied initial
    condicions (which are not generally given in this case).  By
    ramping up from zero, the phase condition around junction/inductor
    loops is satisfied via Kirchhoff's voltage law.  Actually, this
    ensures that the loop phase is constant, but it is zero as we
    started from zero.  Initially, there is no "trapped flux" in the
    inductor/junction loops, so assumption of zero phase is correct. 
    Thus the prescription is to ramp up all sources from zero, use the
    <tt>uic</tt> option of transient analysis, and wait for any
    transients caused by the ramping sources to die away before
    starting the "real" simulation.  The ramping-up effectively
    replaces the DC operating point analysis.

    <p>
    The second approach is to use <a href="phasemode">phase-mode DC</a>
    analysis, which is used in <i>WRspice</i> transparently when Josephson
    junctions are present.  This applies to explicit DC analysis as well
    as operating point analysis.  Further, this enables AC and similar
    small-signal analysis with Josephson junctions in <i>WRspice</i>.

    <p>
    See the Josephson junction <a href="jjmodel">model description</a>
    for more information.
!!LATEX jj elements.tex
\spgen{b{\it name} {\it n\/}+ {\it n\/}- [{\it np\/}] [{\it modname\/}]
 [{\it parameters} ...]}

The default Josephson junction model is an extended version of the RSJ
model as used by Jewett\cite{jewett}.  There are actually three
Josephson junction models available, through the {\vt level} model
parameter, which can take values 1 through 3.  The default {\vt
level=1} model is the RSJ model mentioned.  This model has a
simplified Verilog-A version which can be found among the Verilog-A
examples.  This can be compiled with the {\vt adms} utility into a
run-time loadable module which can be loaded with the {\cb devload}
command.  A pre-compiled module is provided with the example.  Once
loaded into {\WRspice}, the model can be accessed with {\vt level=2}.

For {\vt level=3}, a microscopic tunnel junction "Werthamer" model,
also known as a Tunnel Junction Model (TJM) is provided.  The model is
more physics-based than the empirical RSJ model.

Unless stated otherwise, information presented here applies to
instances of the standard RSJ model ({\vt level=1}) and the Verilog-A
Josephson junction model ({\vt level=2}) provided with {\WRspice} in
the Verilog-A examples.

The instance parameters for the microscopic model are described in the
\ref{tjm}.

Josephson Junction Instance parameters, Levels 1 and 2\\
\begin{longtable}{|l|p{4.5in}|}\hline
\bf Parameter Name & \bf Description\\ \hline\hline
{\vt pijj=1|0} & Whether the device is a ``pi'' junction.\\ \hline
{\vt area=}{\it val} & Scale factor that multiplies all currents and
  other values, effectively modifying the junction area.\\ \hline
{\vt ics=}{\it val} & Instantiated critical current, used as scale factor
  for capacitance, conductances.\\ \hline
{\vt temp\_k=}{\it val} & Device temperature, Kelvin.\\ \hline
{\vt lser=}{\it val} & Junction series parasitic inductance. \\ \hline
{\vt lsh=}{\it val} & Shunt resistor series parasitic inductance. \\ \hline
{\vt ic=}{\it vj\/},{\it phi} & The initial junction voltage and phase
  (initial condition) for transient analysis.\\ \hline
{\vt vj=}{\it vj} & The initial junction voltage (initial condition) for
  transient analysis, alias {\vt ic\_v}.\\ \hline
{\vt phi=}{\it phi} & The initial junction phase (initial condition) for
  transient analysis, alias {\vt ic\_phase}.\\ \hline
{\vt control=}{\it name} & Controlling voltage source or inductor
  name.\\ \hline
{\vt vshunt=}{\it val} & Voltage to specify external shunt resistance.
  \\ \hline

{\vt n} (read only) & SFQ emission count.\\ \hline
{\vt phsf} (read only) & True if SFQ count change at current time point.\\
 \hline
{\vt phst} (read only) & Time of last SFQ emission.\\ \hline
{\vt v} (read only) & Terminal voltage.\\ \hline
{\vt phase} (read only) & Junction phase, alias {\vt phs}.\\ \hline
{\vt tcf} (read only) & Temperature compensation factor.\\ \hline
{\vt vg} or {\vt vgap} (read only) & Gap voltage.\\ \hline
{\vt vless} (read only) & Gap threshold voltage.\\ \hline
{\vt vmore} (read only) & Gap knee voltage.\\ \hline
{\vt icrit} (read only) & Maximum critical current.\\ \hline
{\vt cc} (read only) & Capacitance current.\\ \hline
{\vt cj} (read only) & Josephson current.\\ \hline
{\vt cq} (read only) & Quasiparticle current.\\ \hline
{\vt c} (read only) & Total device current.\\ \hline
{\vt cap} (read only) & Capacitance.\\ \hline
{\vt g0} (read only) & Subgap conductance.\\ \hline
{\vt gn} (read only) & Normal conductance.\\ \hline
{\vt gs} (read only) & Quasiparticle onset conductance.\\ \hline
{\vt gshunt} (read only) & External shunt conductance from {\vt vshunt}.\\
 \hline
{\vt rshunt} (read only) & External shunt resistance from {\vt vshunt}.\\
 \hline
{\vt lshval} (read only) & External shunt resistor parasitic inductance.\\
 \hline
{\vt g1} (read only) & NbN quasiparticle parameter.\\ \hline
{\vt g2} (read only) & NbN quasiparticle parameter.\\ \hline
{\vt node1} (read only) & Node 1 number.\\ \hline
{\vt node2} (read only) & Node 2 number.\\ \hline
{\vt pnode} (read only) & Phase node number.\\ \hline
{\vt lsernode} (read only) & Internal {\vt lser} node number.\\ \hline
{\vt lserbrn} (read only) & Internal {\vt lser} branch number.\\ \hline
{\vt lshnode} (read only) & Internal {\vt lsh} node number.\\ \hline
{\vt lshbrn} (read only) & Internal {\vt lsh} branch number.\\ \hline
\end{longtable}

\spexamp{b1 1 0 10 jj1 ics=200uA\\
b1 1 0 10 jj1 ics=200uA\\
bxx 2 0 type1 control=l3\\
b2 4 5 ybco phi=1.57}

The {\it n+} and {\it n-} are the positive and negative element nodes,
respectively.  These are followed by an optional phase node.  The
phase node, if specified, generally should have no other connections
in the circuit, but the voltage of this node gives the phase of the
junction in radians.  The {\it modname} is the name of the Josephson
junction model.  If no model is specified, then a default model is
used (see the description of the Josephson model for the default
values).  Other (optional) parameters follow in any order.

\begin{description}
\item{\vt pijj}\\
If the {\vt pijj} parameter is given and set to a nonzero integer
value, the device instance will behave as a ``pi'' junction.  This
type of junction has a ground state with phase $\pi$ rather than 0. 
The value given on the device line (if any) overrides the value given
in the model.

\item{\vt area}\\
{\bf range:} 0.05 -- 20.0\\
{\bf Deprecated, do not use in new files.}\\
Histrorically, this parameter has been used to set the actual critical
current of a Josephson junction instance.  It is not a physical area,
but rather a scale factor, representing the ratio of the instance
critical current to the reference critical current.  The parameter is
retained for backwards compatibility, but should not be used in new
circuit descrfiptions.  The {\vt ics} parameter (below) should be used
instead.  By using {\vt ics}, one can change the critical current of
the reference junction without changing the instance critical
currents, which is not the case for {\vt area}.  In the new paradigm,
the reference junction critical current corresponds to a ``typical''
mid-sized junction, with a not necessarily convenient critical current
value.  Use of {\vt area} assumes that the reference critical current
is something nice, like the historical 1mA, and unchanging.  If not
specified and {\vt ics} is not given, the effective value is 1.0.

\item{\vt ics}\\
{\bf range:} 0.02*{\vt icrit} -- 50.0*{\vt icrit}\\
This gives the actual critical current of the instantiated junction,
and in addition scales all conductance and capacitance values from the
reference junction appropriately.  This is equivalent to giving the
{\vt area} parameter with a value of {\vt ics}/{\vt icrit}.  The
default is {\vt icrit}, the reference junction critical current.

\item{\vt temp\_k}\\
{\bf range:} 0.0 -- 0.95*{\vt tc}\\
This is the assumed operating temperature of the device, in Kelvin. 
The default is the model {\vt deftemp} value.  See the model description
for more information about temperature modeling.

\item{\vt lser}\\
{\bf range:} 0.0 -- 10.0pH\\
This models series inductance of the physical Josephson junction
structure, caused by constriction of current through the junction
orifice.  This inductance might typically be in the range of 0.1 to
0.3 picohenries.  If nonzero, an internal node is added to the model,
providing the connection point of the inductance and the Josephson
junction.  The default value is 0.0, meaning that no parasitic
inductance is assumed.  Nonzero given values less than 0.01pH revert
to zero.

\item{\vt lsh}\\
{\bf range:} 0.0 -- 100.0pH\\
This parameter specifies the series inductance of the external shunt
resistance.  The {\vt vshunt} instance or model parameter must be
specified such that a positive external shunt conductance is applied,
otherwise this parameter is ignored.  Ordinarily, the {\vt lsh0}/{\vt
lsh1} model parameters would be used to specify the inductance, this
parameter can be used to override these values on a per-instance basis
if desired.

\item{\vt ic}\\
{\bf Levels 1 and 3 only.}\\
The keyword is expected to be followed by two numbers, giving the
initial junction voltage and phase in radians.  These apply in
transient analysis when the ``{\vt uic}'' option is included in the
transient analysis specification.  The initial junction voltage and
phase both default to 0.0.

\item{{\vt vj} or {\vt ic\_v}}\\
This provides the initial voltage of the junction when the ``{\vt
uic}'' option is included in the transient analysis specification. 
The initial junction voltage defaults to 0.0.

\item{{\vt phi} or {\vt ic\_phase}}\\
This provides the initial junction phase in radians when the ``{\vt
uic}'' option is included in the transient analysis specification.

\item{\vt control}\\
{\bf level 1 only.}\\
The {\vt control} parameter is only needed if critical current
modulation is part of the circuit operation, and is only relevant to
Josephson junction model types that support critical current
modulation, that is, the model parameter {\vt cct} is given a value
larger than 1.  The {\it name} in the {\vt control} specification is
the name of either a voltage source or inductor which appears
somewhere in the circuit.  The current flowing through the indicated
device is taken as the junction control current.

\item{\vt vshunt}\\
{\bf range:} 0.0 -- nominal gap voltage\\
See the description of the {\vt vshunt} model parameter.  The model
parameter, if given, will provide the default used in all instances. 
However this can be overridden on a per-instance basis with the {\vt
vshunt} instance parameter.
\end{description}

The remaining parameters are ``read only'' and can be accessed with
the {\vt @}{\it device\/}[{\it param\/}] special vector notation
during the simulation (in callbacks) or after the simulation if the
vector is saved with the {\cb save} command or equivalent.

\begin{description}
\item{\vt n} (read only)\\
This integer value is incremented whenever the junction phase changes
by plus or minus $2\pi$.  It is intended for pass/fail testing of
single flux quantum (SFQ) circuit operation.
 
\item{\vt phsf} (read only)\\
This flag is set true at the time point when the SFQ emission count
changes.  This is intended to facilitate pass/fail testing of SFQ
circuits.

\item{\vt phst} (read only)\\
This read-only parameter contains the last time that the SFQ emission
count changed, intended for use in SFQ pass/fail testing.

\item{\vt v} (read only)\\
The voltage across the junction.

\item{\vt phase} (read only)\\
The junction phase.  Reading this is an alternative to using a third
node to obtain the phase.

\item{tcf} (read only)\\
The temperature correction factor that modifies the critical
current at operating temperatures other than nominal.  See the
description of the temperature dependence of
the RSJ model in \ref{rsjtcf}.

\item{\vt vg} or {\vt vgap} (read only)\\
The gap voltage of the junction.

\item{\vt vless} (read only)\\
The voltage where the quasiparticle step current begins to rise.  it
is the lower bounding point used to indicate the {\vt delv} gap
spread, i.e., it is equal to {\vt vg - delv/2}.

\item{\vt vmore} (read only)\\
The voltage where the quasiparticle step ends and the normal resistive
part begins.  It is the upper point used to indicate the {\vt delv}
gap spread, equal to {\vt vg + delv/2}.

\item{\vt icrit} (read only)\\
The critical current of the junction instance.

\item{\vt cc} (read only)\\
The current flowing through the geometric capacitance of the junction.

\item{\vt cj} (read only)\\
The pair current (supercurrent) flowing through the junction.

\item{\vt cq} (read only)\\
The quasiparticle (normal) current flowing through the device.

\item{\vt c} (read only)\\
The total current flowing through the device, the sum of {\vt cc},
{\vt cj} and {\vt cq}.

\item{\vt cap} (read only)\\
The geometric capacitance of the device instance.

\item{\vt g0} (read only)\\
The subgap conductance of the device instance.

\item{\vt gn} (read only)\\
The normal state conductance of the device instance.

\item{\vt gs} (read only)\\
The conductance of the quasiparticle branch at the gap voltage.

\item{\vt gshunt} (read only)\\
If the {\vt vshunt} instance or model parameter is given and nonzero,
{\vt gshunt} will return the external conductance added to the
intrinsic conductance so that the total conductance multiplied by the
critical current will equal {\vt vshunt}.

\item{\vt rshunt} (read only)\\
If {\vt gshunt} is nonzero, {\vt rshunt} will be the reciprocal,
otherwise it will be 0.

\item{\vt lshval} (read only)\\
If the {\vt vshunt} instance or model parameter is given and nonzero,
this will be the parasitic inductance assumed in the external shunt
resistance.  This will depend on the settings of the {\vt lsh0} and
{\vt lsh1} model parameters, and the {\vt lsh} instance parameter
which overrides the model parameters if given.

\item{\vt g1} (read only)\\
This applies if the {\vt rtype} model parameter is set to 3, which
indicates use of the NbN polynomial model for subgap conductance. 
This is the third-order amplitude in the polynomial.

\item{\vt g2} (read only)\\
This applies if the {\vt rtype} model parameter is set to 3, which
indicates use of the NbN polynomial model for subgap conductance. 
This is the fifth-order amplitude in the polynomial.

\item{\vt node1} (read only)\\
The internal node number of the first node.

\item{\vt node2} (read only)\\
The internal node number of the second node.

\item{\vt pnode} (read only)\\
The internal node number of the third (phase) node, 0 or -1 if not
used.

\item{\vt lsernode} (read only)\\
The internal node number of the device internal node added for series
parasitic inductance.  This will be 0 or -1 if not used (no series
parasitic inductance assumed).

\item{\vt lserbrn} (read only)\\
If series parasitic inductance is nonzero ({\vt lser} given) this will
be the internal number of the branch node of the inductor.

\item{\vt lshnode} (read only)\\
If the {\vt vshunt} instance or model parameter is given and nonzero,
and series parasitic inductance is nonzero, this will be the internal
node number of the internal device node that incorporates the series
inductance.

\item{\vt lshbrn} (read only)\\
If the {\vt vshunt} instance or model parameter is given and nonzero,
and series parasitic inductance is nonzero, this will be the internal
branch number of the inductor's branch.
\end{description}


\subsubsection{Josephson Junction Description}
\label{jjdesc}

The Josephson junction device has unique behavior which complicates
simulation with a SPICE-type simulator.  Central is the idea of phase,
which is a quantum-mechanical concept and is generally invisible in
the non-quantum world.  However with superconductivity, and with
Josephson junctions in particular, phase becomes not only observable,
but a critical parameter describing these devices and the circuits
that contain them.

Without going into the detailed physics, one can accept that phase is
an angle which applies to any superconductor.  The angle is a fixed
value anywhere on the superconductor, unless current is flowing. 
Flowing current produces magnetic flux, and magnetic flux produces a
change in phase.  One can express this as follows:

\begin{quote}
$LI = flux = \Phi_0(\phi/2\pi)$
\end{quote}

Here, $L$ is the inductance, $\Phi_0$ is the magnetic flux quantum
(Planck's constant divided by twice the electron charge) and $\phi$ is
the phase difference across the inductor.  The supercurrent flowing in
a Josephson junction is given by

\begin{quote}
$I = I_c sin(\phi)$
\end{quote}

where $I_c$ is the junction critical current, and $\phi$ is the phase
difference across the junction.  The junction phase is proportional to
the time integral of junction voltage:

\begin{quote}
$\phi = (2\pi/\Phi_0)\int^t_{-\infty} V(t)dt$
\end{quote}

The important consequence is that the sum of the phase differences
around any loop consisting of Josephson junctions and inductors must
be a multiple of $2\pi$.  This is due to the requirement that the
superconducting wave function be continuous around the loop.  Further,
if the loop phase is not zero, it implies that a persistent current is
flowing around the loop, and that the magnetic flux through the loop
is a multiple of the flux quantum $\Phi_0$.

We therefor observe that in a circuit containing loops of Josephson
junctions and inductors, which includes about all useful circuits:

\begin{enumerate}
\item{The DC voltage across each Junction or inductor is zero.}
\item{The DC current applied to the circuit splits in such a manner
as to satisfy the phase relations above.}
\end{enumerate}

Without any built-in concept of phase, it would appear to be
impossible to find the DC operating point of a circuit containing
Josephson junctions and inductors with a SPICE simulator.  However,
there are ways to accomplish this.

The time-honored approach, used successfully for many years, is to
skip DC analysis entirely.  One generally is interested only in
transient analysis, describing the time evolution of the circuit under
stimulus, and a DC analysis would only be necessary to find the
initial values of circuit voltages and currents.  Instead of a DC
analysis, what is done is every voltage and current source starts at
zero voltage or current, and ramps to the final value in a few
picoseconds.  The transient analysis is performed using the ``use
initial conditions'' (``{\vt uic}'') option, where there is no DC
operating point analysis, and transient analysis starts immediately
with any supplied initial condicions (which are not generally given in
this case).  By ramping up from zero, the phase condition around
junction/inductor loops is satisfied via Kirchhoff's voltage law. 
Actually, this ensures that the loop phase is constant, but it is zero
as we started from zero.  Initially, there is no ``trapped flux'' in
the inductor/junction loops, so assumption of zero phase is correct. 
Thus the prescription is to ramp up all sources from zero, use the
{\vt uic} option of transient analysis, and wait for any transients
caused by the ramping sources to die away before starting the ``real''
simulation.  The ramping-up effectively replaces the DC operating
point analysis.

The second approach is to use phase-mode DC analysis (see
\ref{phasemode}), which is used in {\WRspice} transparently when
Josephson junctions are present.  This applies to explicit DC analysis
as well as operating point analysis.  Further, this enables AC and
similar small-signal analysis with Josephson junctions in {\WRspice}.

See the Josephson junction model description for more information.

!!SEEALSO
elements
tjm

!! elements.tex 083122
!!KEYWORD
tjm
!!TITLE
Josephson Junctions (Tunnel Junction Model)
!!HTML
    General form:
    <blockquote>
        <tt>b</tt><i>name</i> <i>n+ n-</i> [<i>np</i>] [<i>modname</i>]
          [<i>parameters</i> ...]
     </blockquote>

    <p>
    Instance Parameters, JJ level 3:<br>
    <table border=1 cellpadding=2 bgcolor="#ffffee">
    <tr><th>Parameter Name</th> <th>Description</th></tr>
    <tr><td><tt>area=</tt><i>val</i></td> <td>
      Scale factor that multiplies all currents and other values,
      effectively modifying the junction area.</td></tr>
    <tr><td><tt>ics=</tt><i>val</i></td> <td>Instantiated critical
      current, used as scale factor for
      capacitance, conductances.</td></tr>
    <tr><td><tt>temp_k=</tt><i>val</i></td> <td>Device temperature,
      Kelvin.</td></tr>
    <tr><td><tt>lser=</tt><i>val</i></td> <td>Junction series parasitic
      inductance.</td></tr>
    <tr><td><tt>lsh=</tt><i>val</i></td> <td>Shunt resistor series parasitic
      inductance.</td></tr>
    <tr><td><tt>ic=</tt><i>vj</i>,<i>phi</i></td> <td>
      The initial junction voltage and phase (initial condition) for transient
      analysis.</td></tr>
    <tr><td><tt>vj=</tt><i>vj</i></td> <td>
      The initial junction voltage (initial condition) for transient
      analysis, alias <tt>ic_v</tt>.</td></tr>
    <tr><td><tt>phi=</tt><i>phi</i></td> <td>
      The initial junction phase (initial condition) for transient
      analysis, alias <tt>ic_phase</tt>.</td></tr>
    <tr><td><tt>vshunt=</tt><i>val</i></td> <td>
      Voltage to specify external shunt resistance.</td></tr>

    <tr><td><tt>n</tt> (read only)</td> <td>
      SFQ emission count.</td></tr>
    <tr><td><tt>phsf</tt> (read only)</td> <td>
      True if SFQ count change at current time point.</td></tr>
    <tr><td><tt>phst</tt> (read only)</td> <td>
      Time of last SFQ emission.</td></tr>
    <tr><td><tt>v</tt> (read only)</td> <td>
      Terminal voltage.</td></tr>
    <tr><td><tt>phase</tt> (read only)</td> <td>
      Junction phase, alias <tt>phs</tt>.</td></tr>
    <tr><td><tt>tcf</tt> (read only)</td> <td>
      Critical current temperature correction factor.</td></tr>
    <tr><td><tt>icrit</tt> (read only)</td> <td>
      Maximum critical current.</td></tr>
    <tr><td><tt>cc</tt> (read only)</td> <td>
      Capacitance current.</td></tr>
    <tr><td><tt>cj</tt> (read only)</td> <td>
      Josephson current.</td></tr>
    <tr><td><tt>cq</tt> (read only)</td> <td>
      Quasiparticle current.</td></tr>
    <tr><td><tt>c</tt> (read only)</td> <td>
      Total device current.</td></tr>
    <tr><td><tt>cap</tt> (read only)</td> <td>
      Capacitance.</td></tr>
    <tr><td><tt>g0</tt> (read only)</td> <td>
      Subgap conductance.</td></tr>
    <tr><td><tt>gn</tt> (read only)</td> <td>
      Normal conductance.</td></tr>
    <tr><td><tt>rsint</tt> (read only)</td> <td>
      Intrinsic subgap resistance.</td></tr>
    <tr><td><tt>gshunt</tt> (read only)</td> <td>
      External shunt conductance from <tt>vshunt</tt>.</td></tr>
    <tr><td><tt>rshunt</tt> (read only)</td> <td>
      External shunt resistance from <tt>vshunt</tt>.</td></tr>
    <tr><td><tt>lshval</tt> (read only)</td> <td>
      External shunt resistor parasitic inductance.</td></tr>
    <tr><td><tt>del1</tt> (read only)</td> <td>
      Side 1 delta.</td></tr>
    <tr><td><tt>del2</tt> (read only)</td> <td>
      Side 2 delta.</td></tr>
    <tr><td><tt>vg</tt> or <tt>vgap</tt> (read only)</td> <td>
      Gap voltage.</td></tr>
    <tr><td><tt>vdp</tt> (read only)</td> <td>
      Dropback voltage.</td></tr>
    <tr><td><tt>omega</tt> (read only)</td> <td>
      Plasma resonance frequency, radians.</td></tr>
    <tr><td><tt>betac</tt> (read only)</td> <td>
      Stewart-McCumber parameter.</td></tr>
    <tr><td><tt>alphan</tt> (read only)</td> <td>
      TJM alphaN value.</td></tr>
    <tr><td><tt>kgap</tt> (read only)</td> <td>
      TJM kgap value.</td></tr>
    <tr><td><tt>rejpt</tt> (read only)</td> <td>
      TJM rejpt value.</td></tr>
    <tr><td><tt>kgap_rejpt</tt> (read only)</td> <td>
      TJM kgap_rejpt value.</td></tr>
    <tr><td><tt>node1</tt> (read only)</td> <td>
      Node 1 number.</td></tr>
    <tr><td><tt>node2</tt> (read only)</td> <td>
      Node 2 number.</td></tr>
    <tr><td><tt>pnode</tt> (read only)</td> <td>
      Phase node number.</td></tr>
    <tr><td><tt>lsernode</tt> (read only)</td> <td>
      Internal <tt>lser</tt> node number.</td></tr>
    <tr><td><tt>lserbrn</tt> (read only)</td> <td>
      Internal <tt>lser</tt> branch number.</td></tr>
    <tr><td><tt>lshnode</tt> (read only)</td> <td>
      Internal <tt>lsh</tt> node number.</td></tr>
    <tr><td><tt>lshbrn</tt> (read only)</td> <td>
      Internal <tt>lsh</tt> branch number.</td></tr>
    </table>

    <p>
    Example:
    <blockquote><tt>
        b1 1 0 10 jj1 ics=200uA<br>
        b2 4 5 ybco phi=1.57
    </tt></blockquote>

    <p>
    The <i>n+</i> and <i>n-</i> are the positive and negative element
    nodes, respectively.  These are followed by an optional phase
    node.  The phase node, if specified, generally should have no
    other connections in the circuit, but the voltage of this node
    gives the phase of the junction in radians.  The <i>modname</i> is
    the name of the Josephson junction model.  If no model is
    specified, then a default model is used (see the description of
    the <a href="jjmodel">Josephson model</a> for the default values). 
    Other (optional) parameters follow in any order.

    <dl>
    <dt><tt>area</tt><dd>
    <b>range:</b> 0.05 - 20.0<br>
    <font color="red">Deprecated, do not use in new files.</font><br>
    Histrorically, this parameter has been used to set the actual
    critical current of a Josephson junction instance.  It is not a
    physical area, but rather a scale factor, representing the ratio
    of the instance critical current to the reference critical
    current.  The parameter is retained for backwards compatibility,
    but should not be used in new circuit descrfiptions.  The
    <tt>ics</tt> parameter (below) should be used instead.  By using
    <tt>ics</tt>, one can change the critical current of the reference
    junction without changing the instance critical currents, which is
    not the case for <tt>area</tt>.  In the new paradigm, the
    reference junction critical current corresponds to a "typical"
    mid-sized junction, with a not necessarily convenient critical
    current value.  Use of <tt>area</tt> assumes that the reference
    critical current is something nice, like the historical 1mA, and
    unchanging.  If not specified and <tt>ics</tt> is not given, the
    effective value is 1.0.
    </dl>

    <dl>
    <dt><tt>ics</tt><dd>
    <b>range:</b> 0.02*<tt>icrit</tt> - 50.0*<tt>icrit</tt><br>
    This gives the actual critical current of the instantiated
    junction, and in addition scales all conductance and capacitance
    values from the reference junction appropriately.  This is
    equivalent to giving the <tt>area</tt> parameter with a value of
    <tt>ics</tt>/<tt>icrit</tt>.  The default is <tt>icrit</tt>, the
    reference junction critical current.
    </dl>

    <dl>
    <dt><tt>temp_k</tt><dd>
    <b>range:</b> 0.0 - 0.95*<tt>tc</tt><br>
    This is the assumed operating temperature of the device, in
    Kelvin.  The default is the model <tt>deftemp</tt> value.  See the <a
    href="jjmodel">model description</a> for more information about
    temperature modeling.
    </dl>

    <dl>
    <dt><tt>lser</tt><dd>
    <b>range:</b> 0.0 - 10.0pH<br>
    This models series inductance of the physical Josephson junction
    structure, caused by constriction of current through the junction
    orifice.  This inductance might typically be in the range of 0.1
    to 0.3 picohenries.  If nonzero, an internal node is added to the
    model, providing the connection point of the inductance and the
    Josephson junction.  The default value is 0.0, meaning that no
    parasitic inductance is assumed.  Nonzero given values less than
    0.01pH revert to zero.
    </dl>

    <dl>
    <dt><tt>lsh</tt><dd>
    <b>range:</b> 0.0 - 100.0pH<br>
    This parameter specifies the series inductance of the external
    shunt resistance.  The <tt>vshunt</tt> instance or model parameter
    must be specified such that a positive external shunt conductance
    is applied, otherwise this parameter is ignored.  Ordinarily, the
    <a href="jjmodel"><tt>lsh0</tt>/<tt>lsh1</tt></a> model parameters
    would be used to specify the inductance, this parameter can be
    used to override these values on a per-instance basis if desired.
    </dl>

    <dl>
    <dt><tt>ic</tt><dd>
    The keyword is expected to be followed by two numbers, giving the
    initial junction voltage and phase in radians.  These apply in
    transient analysis when the "<tt>uic</tt>" option is included in
    the <a href=".tran">transient analysis</a> specification.  The
    initial junction voltage and phase both default to 0.0.
    </dl>

    <dl>
    <dt><tt>vj</tt> or <tt>ic_v</tt><dd>
    This provides the initial voltage of the junction when the
    "<tt>uic</tt>" option is included in the <a href=".tran">transient
    analysis</a> specification.  The initial junction voltage defaults
    to 0.0.
    </dl>

    <dl>
    <dt><tt>phi</tt> or <tt>ic_phase</tt><dd>
    This provides the initial junction phase in radians when the
    "<tt>uic</tt>" option is included in the <a href=".tran">transient
    analysis</a> specification.
    </dl>

    <dl>
    <dt><tt>vshunt</tt><dd>
    <b>range:</b> 0.0 - nominal gap voltage<br>
    See the description of the <a href="tjmvshunt"><tt>vshunt</tt></a>
    model parameter.  The model parameter, if given, will provide the
    default used in all instances.  However this can be overridden on
    a per-instance basis with the <tt>vshunt</tt> instance parameter.
    </dl>

    <p>
    The remaining parameters are "read only" and can be accessed with
    the <tt>@</tt><i>device</i>[<i>param</i>] <a
    href="specialvec">special vector</a> notation during the
    simulation (in callbacks) or after the simulation if the vector is
    saved with the <a href="save"><b>save</b></a> command or equivalent.

    <dl>
    <dt><tt>n</tt> (read only)<dd>
    This integer value is incremented whenever the junction phase
    changes by plus or minus 2&pi;.  It is intended for pass/fail
    testing of SFQ circuit operation.
    </dl>

    <dl>
    <dt><tt>phsf</tt> (read only)<dd>
    This flag is set true at the time point when the SFQ emission
    count changes.  This is intended to facilitate pass/fail testing
    of SFQ circuits.
    </dl>

    <dl>
    <dt><tt>phst</tt> (read only)<dd>
    This read-only parameter contains the last time that the SFQ
    emission count changed, intended for use in SFQ pass/fail testing.
    </dl>

    <dl>
    <dt><tt>v</tt> (read only)<dd>
    The voltage across the junction.
    </dl>

    <dl>
    <dt><tt>phase</tt> (read only)<dd>
    The junction phase.  Reading this is an alternative to using a
    third node to obtain the phase.
    </dl>

    <dl>
    <dt><tt>tcf</tt> (read only)<dd>
    The temperature correction factor that modifies the critical
    current at operating temperatures other than nominal.  See the
    description of the <a href="tjmtcf">temperature dependence</a> of
    the TJM model.
    </dl>

    <dl>
    <dt><tt>icrit</tt> (read only)<dd>
    The critical current of the junction instance.
    </dl>

    <dl>
    <dt><tt>cc</tt> (read only)<dd>
    The current flowing through the geometric capacitance of the
    junction.
    </dl>

    <dl>
    <dt><tt>cj</tt> (read only)<dd>
    The pair current (supercurrent) flowing through the junction.
    </dl>

    <dl>
    <dt><tt>cq</tt> (read only)<dd>
    The quasiparticle (normal) current flowing through the device.
    </dl>

    <dl>
    <dt><tt>c</tt> (read only)<dd>
    The total current flowing through the device, the sum of
    <tt>cc</tt>, <tt>cj</tt> and <tt>cq</tt>.
    </dl>

    <dl>
    <dt><tt>cap</tt> (read only)<dd>
    The geometric capacitance of the device instance.
    </dl>

    <dl>
    <dt><tt>g0</tt> (read only)<dd>
    The subgap conductance of the device instance.
    </dl>

    <dl>
    <dt><tt>gn</tt> (read only)<dd>
    The normal state conductance of the device instance.
    </dl>

    <dl>
    <dt><tt>rsint</tt> (read only)<dd>
    The intrinsic subgap resistance.  This is predicted from the
    tunnel junction model, but the predicted resistance is in general
    much higher than seen in actual fabricated junctions.  There is
    evidently quasiparticle conduction mechanisms that are not
    described in the tunnel junction model.
    </dl>

    <dl>
    <dt><tt>gshunt</tt> (read only)<dd>
    If the <tt>vshunt</tt> instance or model parameter is given and
    nonzero, <tt>gshunt</tt> will return the external conductance
    added to the intrinsic conductance so that the total conductance
    multiplied by the critical current will equal <tt>vshunt</tt>.
    </dl>

    <dl>
    <dt><tt>rshunt</tt> (read only)<dd>
    If <tt>gshunt</tt> is nonzero, <tt>rshunt</tt> will be the
    reciprocal, otherwise it will be 0.
    </dl>

    <dl>
    <dt><tt>lshval</tt> (read only)<dd>
    If the <tt>vshunt</tt> instance or model parameter is given and
    nonzero, this will be the parasitic inductance assumed in the
    external shunt resistance.  This will depend on the settings of
    the <tt>lsh0</tt> and <tt>lsh1</tt> model parameters, and the
    <tt>lsh</tt> instance parameter which overrides the model
    parameters if given.
    </dl>

    <dl>
    <dt><tt>del1</tt> (read only)<dd>
    This is the computed energy gap of the side 1 superconductor. 
    This is computed using the BCS formula taking as input operating
    temperature, the superconducting transition temperature of side 1,
    and the Debye temperature of side 1.
    </dl>

    <dl>
    <dt><tt>del2</tt> (read only)<dd>
    This is the computed energy gap of the side 2 superconductor. 
    This is computed using the BCS formula taking as input operating
    temperature, the superconducting transition temperature of side 2,
    and the Debye temperature of side 2.
    </dl>

    <dl>
    <dt><tt>vg</tt> or <tt>vgap</tt> (read only)<dd>
    The junction gap voltage, which is the sum of <tt>del1</tt> and
    <tt>del2</tt>.
    </dl>

    <dl>
    <dt><tt>vdp</tt> (read only)<dd>
    The dropback voltage, which is the same as the voltage
    corrresponding to the plasma resonance frequency.
    </dl>

    <dl>
    <dt><tt>omega</tt> (read only)<dd>
    The plasma resonance frequency in radians per second.
    </dl>

    <dl>
    <dt><tt>betac</tt> (read only)<dd>
    The Stewart-McCumber parameter of the junction.
    </dl>

    <dl>
    <dt><tt>alphan</tt> (read only)<dd>
    Internal model critical current scaling factor.
    </dl>

    <dl>
    <dt><tt>kgap</tt> (read only)<dd>
    Internal model normalized gap parameter.
    </dl>

    <dl>
    <dt><tt>kgap_rejpt</tt> (read only)<dd>
    Internal model normalized gap parameter.
    </dl>

    <dl>
    <dt><tt>rejpt</tt> (read only)<dd>
    Internal model normalized resistance.
    </dl>

    <dl>
    <dt><tt>node1</tt> (read only)<dd>
    The internal node number of the first node.
    </dl>

    <dl>
    <dt><tt>node2</tt> (read only)<dd>
    The internal node number of the second node.
    </dl>

    <dl>
    <dt><tt>pnode</tt> (read only)<dd>
    The internal node number of the third (phase) node, 0 or -1 if not
    used.
    </dl>

    <dl>
    <dt><tt>lsernode</tt> (read only)<dd>
    The internal node number of the device internal node added for
    series parasitic inductance.  This will be 0 or -1 if not used (no
    series parasitic inductance assumed).
    </dl>

    <dl>
    <dt><tt>lserbrn</tt> (read only)<dd>
    If series parasitic inductance is nonzero (<tt>lser</tt> given)
    this will be the internal number of the branch node of the
    inductor.
    </dl>

    <dl>
    <dt><tt>lshnode</tt> (read only)<dd>
    If the <tt>vshunt</tt> instance or model parameter is given and
    nonzero, and series parasitic inductance is nonzero, this will be
    the internal node number of the internal device node that
    incorporates the series inductance.
    </dl>

    <dl>
    <dt><tt>lshbrn</tt> (read only)<dd>
    If the <tt>vshunt</tt> model parameter is given and nonzero, and
    series parasitic inductance is nonzero, this will be the internal
    branch number of the inductor's branch.
    </dl>
!!LATEX tjm elements.tex
\spgen{b{\it name} {\it n\/}+ {\it n\/}- [{\it np\/}] [{\it modname\/}]
 [{\it parameters} ...]}

Instance parameters, JJ level 3:\\
\begin{longtable}{|l|p{4.5in}|}\hline
\bf Parameter Name & \bf Description\\ \hline\hline
{\vt area=}{\it val} & Scale factor that multiplies all currents and
  other values, effectively modifying the junction area.\\ \hline
{\vt ics=}{\it val} & Instantiated critical current, used as scale factor
  for capacitance, conductances.\\ \hline
{\vt temp\_k=}{\it val} & Device temperature, Kelvin.\\ \hline
{\vt lser=}{\it val} & Junction series parasitic inductance. \\ \hline
{\vt lsh=}{\it val} & Shunt resistor series parasitic inductance. \\ \hline
{\vt ic=}{\it vj\/},{\it phi} & The initial junction voltage and phase
  (initial condition) for transient analysis.\\ \hline
{\vt vj=}{\it vj} & The initial junction voltage (initial condition) for
  transient analysis, alias {\vt ic\_v}.\\ \hline
{\vt phi=}{\it phi} & The initial junction phase (initial condition) for
  transient analysis, alias {\vt ic\_phase}.\\ \hline
{\vt vshunt=}{\it val} & Voltage to specify external shunt resistance.
  \\ \hline

{\vt n} (read only) & SFQ emission count.\\ \hline
{\vt phsf} (read only) & True if SFQ count change at current time point.\\
 \hline
{\vt phst} (read only) & Time of last SFQ emission.\\ \hline
{\vt v} (read only) & Terminal voltage.\\ \hline
{\vt phase} (read only) & Junction phase, alias {\vt phs}.\\ \hline
{\vt tcf} (read only) & Temperature compensation factor.\\ \hline
{\vt icrit} (read only) & Maximum critical current.\\ \hline
{\vt cc} (read only) & Capacitance current.\\ \hline
{\vt cj} (read only) & Josephson current.\\ \hline
{\vt cq} (read only) & Quasiparticle current.\\ \hline
{\vt c} (read only) & Total device current.\\ \hline
{\vt cap} (read only) & Capacitance.\\ \hline
{\vt g0} (read only) & Subgap conductance.\\ \hline
{\vt gn} (read only) & Normal conductance.\\ \hline
{\vt rsint} (read only) & Intrinsic subgap resistance.\\ \hline
{\vt gshunt} (read only) & External shunt conductance from {\vt vshunt}.\\
 \hline
{\vt rshunt} (read only) & External shunt resistance from {\vt vshunt}.\\
 \hline
{\vt lshval} (read only) & External shunt resistor parasitic inductance.\\
 \hline
{\vt del1} (read only) & Side 1 delta.\\ \hline
{\vt del2} (read only) & Side 2 delta.\\ \hline
{\vt vg} or {\vt vgap} (read only) & Gap voltage.\\ \hline
{\vt vdp} (read only) & Dropback voltage.\\ \hline
{\vt omega} (read only) & Plasma resonance frequency, radians.\\ \hline
{\vt betac} (read only) & Stewart-McCumber parameter.\\ \hline
{\vt alphan} (read only) & TJM alphaN value.\\ \hline
{\vt kgap} (read only) & TJM kgap value.\\ \hline
{\vt rejpt} (read only) & TJM rejpt value.\\ \hline
{\vt kgap\_rejpt} (read only) & TJM kgap\_rejpt value.\\ \hline
{\vt node1} (read only) & Node 1 number.\\ \hline
{\vt node2} (read only) & Node 2 number.\\ \hline
{\vt pnode} (read only) & Phase node number.\\ \hline
{\vt lsernode} (read only) & Internal {\vt lser} node number.\\ \hline
{\vt lserbrn} (read only) & Internal {\vt lser} branch number.\\ \hline
{\vt lshnode} (read only) & Internal {\vt lsh} node number.\\ \hline
{\vt lshbrn} (read only) & Internal {\vt lsh} branch number.\\ \hline
\end{longtable}

\spexamp{b1 1 0 10 jj1 ics=200uA\\
b1 1 0 10 jj1 ics=200uA\\
b2 4 5 ybco phi=1.57}

The {\it n+} and {\it n-} are the positive and negative element nodes,
respectively.  These are followed by an optional phase node.  The
phase node, if specified, generally should have no other connections
in the circuit, but the voltage of this node gives the phase of the
junction in radians.  The {\it modname} is the name of the Josephson
junction model.  If no model is specified, then a default model is
used (see the description of the Josephson model for the default
values).  Other (optional) parameters follow in any order.

\begin{description}
\item{\vt area}\\
{\bf range:} 0.05 -- 20.0\\
{\bf Deprecated, do not use in new files.}\\
Histrorically, this parameter has been used to set the actual critical
current of a Josephson junction instance.  It is not a physical area,
but rather a scale factor, representing the ratio of the instance
critical current to the reference critical current.  The parameter is
retained for backwards compatibility, but should not be used in new
circuit descrfiptions.  The {\vt ics} parameter (below) should be used
instead.  By using {\vt ics}, one can change the critical current of
the reference junction without changing the instance critical
currents, which is not the case for {\vt area}.  In the new paradigm,
the reference junction critical current corresponds to a ``typical''
mid-sized junction, with a not necessarily convenient critical current
value.  Use of {\vt area} assumes that the reference critical current
is something nice, like the historical 1mA, and unchanging.  If not
specified and {\vt ics} is not given, the effective value is 1.0.

\item{\vt ics}\\
{\bf range:} 0.02*{\vt icrit} -- 50.0*{\vt icrit}\\
This gives the actual critical current of the instantiated junction,
and in addition scales all conductance and capacitance values from the
reference junction appropriately.  This is equivalent to giving the
{\vt area} parameter with a value of {\vt ics}/{\vt icrit}.  The
default is {\vt icrit}, the reference junction critical current.

\item{\vt temp\_k}\\
{\bf range:} 0.0 -- 0.95*{\vt tc}\\
This is the assumed operating temperature of the device, in Kelvin. 
The default is the model {\vt deftemp} value.  See the model description
for more information about temperature modeling.

\item{\vt lser}\\
{\bf range:} 0.0 -- 10.0pH\\
This models series inductance of the physical Josephson junction
structure, caused by constriction of current through the junction
orifice.  This inductance might typically be in the range of 0.1 to
0.3 picohenries.  If nonzero, an internal node is added to the model,
providing the connection point of the inductance and the Josephson
junction.  The default value is 0.0, meaning that no parasitic
inductance is assumed.  Nonzero given values less than 0.01pH revert
to zero.

\item{\vt lsh}\\
{\bf range:} 0.0 -- 100.0pH\\
This parameter specifies the series inductance of the external shunt
resistance.  The {\vt vshunt} instance or model parameter must be
specified such that a positive external shunt conductance is applied,
otherwise this parameter is ignored.  Ordinarily, the {\vt lsh0}/{\vt
lsh1} model parameters would be used to specify the inductance, this
parameter can be used to override these values on a per-instance basis
if desired.

\item{\vt ic}\\
{\bf Levels 1 and 3 only.}\\
The keyword is expected to be followed by two numbers, giving the
initial junction voltage and phase in radians.  These apply in
transient analysis when the ``{\vt uic}'' option is included in the
transient analysis specification.  The initial junction voltage and
phase both default to 0.0.

\item{{\vt vj} or {\vt ic\_v}}\\
This provides the initial voltage of the junction when the ``{\vt
uic}'' option is included in the transient analysis specification. 
The initial junction voltage defaults to 0.0.

\item{{\vt phi} or {\vt ic\_phase}}\\
This provides the initial junction phase in radians when the ``{\vt
uic}'' option is included in the transient analysis specification.

\item{\vt vshunt}\\
{\bf range:} 0.0 -- nominal gap voltage\\
See the description of the {\vt vshunt} model parameter.  The model
parameter, if given, will provide the default used in all instances. 
However this can be overridden on a per-instance basis with the {\vt
vshunt} instance parameter.
\end{description}

The remaining parameters are ``read only'' and can be accessed with
the {\vt @}{\it device\/}[{\it param\/}] special vector notation
during the simulation (in callbacks) or after the simulation if the
vector is saved with the {\cb save} command or equivalent.

\begin{description}
\item{\vt n} (read only)\\
This integer value is incremented whenever the junction phase changes
by plus or minus $2\pi$.  It is intended for pass/fail testing of
single flux quantum (SFQ) circuit operation.
 
\item{\vt phsf} (read only)\\
This flag is set true at the time point when the SFQ emission count
changes.  This is intended to facilitate pass/fail testing of SFQ
circuits.

\item{\vt phst} (read only)\\
This read-only parameter contains the last time that the SFQ emission
count changed, intended for use in SFQ pass/fail testing.

\item{\vt v} (read only)\\
The voltage across the junction.

\item{\vt phase} (read only)\\
The junction phase.  Reading this is an alternative to using a third
node to obtain the phase.

\item{tcf} (read only)\\
The temperature correction factor that modifies the critical current
at operating temperatures other than nominal.  See the description of
the temperature dependence of the TJM model in \ref{tjmtcf}.

\item{\vt icrit} (read only)\\
The critical current of the junction instance.

\item{\vt cc} (read only)\\
The current flowing through the geometric capacitance of the junction.

\item{\vt cj} (read only)\\
The pair current (supercurrent) flowing through the junction.

\item{\vt cq} (read only)\\
The quasiparticle (normal) current flowing through the device.

\item{\vt c} (read only)\\
The total current flowing through the device, the sum of {\vt cc},
{\vt cj} and {\vt cq}.

\item{\vt cap} (read only)\\
The geometric capacitance of the device instance.

\item{\vt g0} (read only)\\
The subgap conductance of the device instance.

\item{\vt gn} (read only)\\
The normal state conductance of the device instance.

\item{\vt rsint} (read only)\\
The intrinsic subgap resistance.  This is predicted from the tunnel
junction model, but the predicted resistance is in general much higher
than seen in actual fabricated junctions.  There is evidently
quasiparticle conduction mechanisms that are not described in the
tunnel junction model.

\item{\vt gshunt} (read only)\\
If the {\vt vshunt} instance or model parameter is given and nonzero,
{\vt gshunt} will return the external conductance added to the
intrinsic conductance so that the total conductance multiplied by the
critical current will equal {\vt vshunt}.

\item{\vt rshunt} (read only)\\
If {\vt gshunt} is nonzero, {\vt rshunt} will be the reciprocal,
otherwise it will be 0.

\item{\vt lshval} (read only)\\
If the {\vt vshunt} instance or model parameter is given and nonzero,
this will be the parasitic inductance assumed in the external shunt
resistance.  This will depend on the settings of the {\vt lsh0} and
{\vt lsh1} model parameters, and the {\vt lsh} instance parameter
which overrides the model parameters if given.

\item{\vt del1} (read only)\\
This is the computed energy gap of the side 1 superconductor. 
This is computed using the BCS formula taking as input operating
temperature, the superconducting transition temperature of side 1,
and the Debye temperature of side 1.

\item{\vt del2} (read only)\\
This is the computed energy gap of the side 2 superconductor. 
This is computed using the BCS formula taking as input operating
temperature, the superconducting transition temperature of side 2,
and the Debye temperature of side 2.

\item{\vt vg} or {\vt vgap} (read only)\\
The junction gap voltage, which is the sum of {\vt del1} and {\vt
del2}.

\item{\vt vdp} (read only)\\
The dropback voltage, which is the same as the voltage corrresponding
to the plasma resonance frequency.

\item{\vt omega} (read only)\\
The plasma resonance frequency in radians per second.

\item{\vt betac} (read only)\\
The Stewart-McCumber parameter of the junction.

\item{\vt alphan} (read only)\\
Internal model critical current scaling factor.

\item{\vt kgap} (read only)\\
Internal model normalized gap parameter.

\item{\vt kgap\_rejpt} (read only)\\
Internal model normalized gap parameter.

\item{\vt rejpt} (read only)\\
Internal model normalized resistance.

\item{\vt node1} (read only)\\
The internal node number of the first node.

\item{\vt node2} (read only)\\
The internal node number of the second node.

\item{\vt pnode} (read only)\\
The internal node number of the third (phase) node, 0 or -1 if not
used.

\item{\vt lsernode} (read only)\\
The internal node number of the device internal node added for series
parasitic inductance.  This will be 0 or -1 if not used (no series
parasitic inductance assumed).

\item{\vt lserbrn} (read only)\\
If series parasitic inductance is nonzero ({\vt lser} given) this will
be the internal number of the branch node of the inductor.

\item{\vt lshnode} (read only)\\
If the {\vt vshunt} instance or model parameter is given and nonzero,
and series parasitic inductance is nonzero, this will be the internal
node number of the internal device node that incorporates the series
inductance.

\item{\vt lshbrn} (read only)\\
If the {\vt vshunt} model parameter is given and nonzero, and series
parasitic inductance is nonzero, this will be the internal branch
number of the inductor's branch.
\end{description}

!!SEEALSO
elements
jj
