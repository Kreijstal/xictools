#! /bin/sh

#
# Update the distribution files.  Run on the web site to call a
# machine containing distributions, and copy up newer files.  If -t
# given, don't actually fetch, just print commands.
#
# Usage: fetchnew [-t] "programs..."|all "oses..."|all

# Change these if you're not me.
login=stevew

# SSH command, note alternate port.
sshcmd="ssh -p 2222"

# Files come from $login@$home:$srcdir/$osname/$filename
srcdir=/home/$login/export/xictools

# Files go to $destdir/$osname/$filename
destdir=/home/webadmin/wrcad.com/html/xictools

if [ $# = 0 ]; then
    echo 'fetchnew [-t] "programs..."|all "oses..."|all'
    exit 0
fi

dryrun=no
if [ x$1 = x-t ]; then
    dryrun=yes
    shift
fi

if [ ! -x exported.new ]; then
    echo 'Error: exported.new script not found'
    exit 1
fi

progs=$1
if [ "$progs" = all ]; then
    progs=$(./exported.new progs)
fi
oses=$2
if [ "$oses" = all ]; then
    oses=$(./exported.new oses)
fi

sshc=$SSH_CONNECTION
if [ -z "$sshc" ]; then
    echo "Can't get home IP, exiting"
    exit
fi
set -- $sshc
home=$1
echo Connecting to $home

thisdir=$(dirname $0)

# Grab the version file from the web site, and look up the current
# version for the program and operating system.  Echo the new release
# number followed by the subdirectory name.
# arguments:  program_name operating_system
#
check_release()
{
    prog="$1"
    os="$2"

    echo $(./exported.new version $prog) .
}

# Construct the name of the distribution file from the arguments.
# arguments: program_name operating_system version_number
#
filename()
{
    prog=$1
    os=$2
    vers=$3
    sfx=$(./exported.new sfx $os)

    tifs="$IFS"
    IFS="."
    set -- $os
    IFS="$tifs"
    os=$1
    arch=$2
    if [ -z "$arch" ]; then
        if [ $os = Win32 ]; then
            arch=i386
        else
            arch=x86_64
        fi
    fi

    echo xictools_$prog-$os-$vers-$arch.$sfx

}

# Grab the release file and put it in place.
# arguments:  program os
#
get()
{
    program=$1
    os=$2
    vers=`check_release $program $os`
    if [ x"$vers" = "x" ]; then
        echo Not found: $program $os
        exit
    fi
    set $vers
    vers=$1
    subdir=$2
    fname=`filename $program $os $vers`
    if [ x"$fname" = "x" ]; then
        echo Unknown: $program $os
        exit
    fi

    newloc=$destdir/$os/$fname
    if [ ! -f $newloc ]; then
        echo $fname
        if [ $dryrun = yes ]; then
            echo rsync --rsh="$sshcmd" $login@$home:$srcdir/$os/$fname $newloc
        else
            rsync --rsh="$sshcmd" $login@$home:$srcdir/$os/$fname $newloc
        fi
    fi
}


for o in $oses; do
    for p in $progs; do
        get $p $o
    done
done

